{
    "tls-data-source-cert-request": {
        "body": "resource \"tls_cert_request\" \"$1\" {\n    # subject - (Required) The subject for which a certificate is being requested. This is a nested configuration block whose structure is described below.\n    subject = \"\"\n\n    # private_key_pem - (Required) PEM-encoded private key data. This can be read from a separate file using the ``file`` interpolation function. Only an irreversable secure hash of the private key will be stored in the Terraform state.\n    private_key_pem = \"\"\n\n    # key_algorithm - (Required) The name of the algorithm for the key provided in `private_key_pem`.\n    key_algorithm = \"\"\n\n    # dns_names - (Optional) List of DNS names for which a certificate is being requested.\n    dns_names = \"\"\n\n    # ip_addresses - (Optional) List of IP addresses for which a certificate is being requested.\n    ip_addresses = \"\"\n\n    # common_name - (Optional) `common_name` (string)\n    common_name = \"\"\n\n    # organization - (Optional) `organization` (string)\n    organization = \"\"\n\n    # organizational_unit - (Optional) `organizational_unit` (string)\n    organizational_unit = \"\"\n\n    # street_address - (Optional) `street_address` (list of strings)\n    street_address = \"\"\n\n    # locality - (Optional) `locality` (string)\n    locality = \"\"\n\n    # province - (Optional) `province` (string)\n    province = \"\"\n\n    # country - (Optional) `country` (string)\n    country = \"\"\n\n    # postal_code - (Optional) `postal_code` (string)\n    postal_code = \"\"\n\n    # serial_number - (Optional) `serial_number` (string)\n    serial_number = \"\"\n\n    # Exported Attributes\n    # \"cert_request_pem\" - The certificate request data in PEM format.\n    # \"serial_number\" (string)\n}",
        "description": "Generates a *Certificate Signing Request* (CSR) in PEM format, which is the\ntypical format used to request a certificate from a certificate authority. This resource is intended to be used in conjunction with a Terraform provider\nfor a particular certificate authority in order to provision a new certificate.\nThis is a *logical resource*, so it contributes only to the current Terraform\nstate and does not create any external managed resources. ~> **Compatibility Note** From Terraform 0.7.0 to 0.7.4 this resource was\nconverted to a data source, and the resource form of it was deprecated. This\nturned out to be a design error since a cert request includes a random number\nin the form of the signature nonce, and so the data source form of this\nresource caused non-convergent configuration. The data source form is no longer\nsupported as of Terraform 0.7.5 and any users should return to using the\nresource form.",
        "prefix": "tls-data-source-cert-request"
    },
    "tls-resource-locally-signed-cert": {
        "body": "resource \"tls_locally_signed_cert\" \"$1\" {\n    # allowed_uses - (Required) List of keywords each describing a use that is permitted for the issued certificate. The valid keywords are listed below.\n    allowed_uses = \"\"\n\n    # validity_period_hours - (Required) The number of hours after initial issuing that the certificate will become invalid.\n    validity_period_hours = \"\"\n\n    # ca_cert_pem - (Required) PEM-encoded certificate data for the CA.\n    ca_cert_pem = \"\"\n\n    # ca_private_key_pem - (Required) PEM-encoded private key data for the CA. This can be read from a separate file using the ``file`` interpolation function.\n    ca_private_key_pem = \"\"\n\n    # ca_key_algorithm - (Required) The name of the algorithm for the key provided in `ca_private_key_pem`.\n    ca_key_algorithm = \"\"\n\n    # cert_request_pem - (Required) PEM-encoded request certificate data.\n    cert_request_pem = \"\"\n\n    # early_renewal_hours - (Optional) If set, the resource will consider the certificate to have expired the given number of hours before its actual expiry time. This can be useful to deploy an updated certificate in advance of the expiration of the current certificate. Note however that the old certificate remains valid until its true expiration time, since this resource does not (and cannot) support certificate revocation. Note also that this advance update can only be performed should the Terraform configuration be applied during the early renewal period.\n    early_renewal_hours = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # digital_signature - (Optional) `digital_signature`\n    digital_signature = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # content_commitment - (Optional) `content_commitment`\n    content_commitment = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # key_encipherment - (Optional) `key_encipherment`\n    key_encipherment = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # data_encipherment - (Optional) `data_encipherment`\n    data_encipherment = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # key_agreement - (Optional) `key_agreement`\n    key_agreement = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # cert_signing - (Optional) `cert_signing`\n    cert_signing = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # crl_signing - (Optional) `crl_signing`\n    crl_signing = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # encipher_only - (Optional) `encipher_only`\n    encipher_only = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # decipher_only - (Optional) `decipher_only`\n    decipher_only = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # any_extended - (Optional) `any_extended`\n    any_extended = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # server_auth - (Optional) `server_auth`\n    server_auth = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # client_auth - (Optional) `client_auth`\n    client_auth = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # code_signing - (Optional) `code_signing`\n    code_signing = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # email_protection - (Optional) `email_protection`\n    email_protection = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # ipsec_end_system - (Optional) `ipsec_end_system`\n    ipsec_end_system = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # ipsec_tunnel - (Optional) `ipsec_tunnel`\n    ipsec_tunnel = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # ipsec_user - (Optional) `ipsec_user`\n    ipsec_user = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # timestamping - (Optional) `timestamping`\n    timestamping = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # ocsp_signing - (Optional) `ocsp_signing`\n    ocsp_signing = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # microsoft_server_gated_crypto - (Optional) `microsoft_server_gated_crypto`\n    microsoft_server_gated_crypto = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # netscape_server_gated_crypto - (Optional) `netscape_server_gated_crypto`\n    netscape_server_gated_crypto = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # Exported Attributes\n    # \"cert_pem\" - The certificate data in PEM format.\n    # \"is_ca_certificate\" - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to \"false\", meaning that the certificate does not represent a certificate authority.\n    # \"validity_start_time\" - The time after which the certificate is valid, as an\n    # \"is_ca_certificate\" - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to \"false\", meaning that the certificate does not represent a certificate authority.\n    # \"validity_end_time\" - The time until which the certificate is invalid, as an\n    # \"is_ca_certificate\" - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to \"false\", meaning that the certificate does not represent a certificate authority.\n}",
        "description": "Generates a TLS certificate using a *Certificate Signing Request* (CSR) and\nsigns it with a provided certificate authority (CA) private key. Locally-signed certificates are generally only trusted by client software when\nsetup to use the provided CA. They are normally used in development environments\nor when deployed internally to an organization.",
        "prefix": "tls-resource-locally-signed-cert"
    },
    "tls-resource-private-key": {
        "body": "resource \"tls_private_key\" \"$1\" {\n    # algorithm - (Required) The name of the algorithm to use for the key. Currently-supported values are \"RSA\" and \"ECDSA\".\n    algorithm = \"\"\n\n    # rsa_bits - (Optional) When `algorithm` is \"RSA\", the size of the generated RSA key in bits. Defaults to 2048.\n    rsa_bits = \"\"\n\n    # ecdsa_curve - (Optional) When `algorithm` is \"ECDSA\", the name of the elliptic curve to use. May be any one of \"P224\", \"P256\", \"P384\" or \"P521\", with \"P224\" as the default.\n    ecdsa_curve = \"\"\n\n    # Exported Attributes\n    # \"algorithm\" - The algorithm that was selected for the key.\n    # \"ecdsa_curve\" - (Optional) When \"algorithm\" is \"ECDSA\", the name of the elliptic curve to use. May be any one of \"P224\", \"P256\", \"P384\" or \"P521\", with \"P224\" as the default.\n    # \"private_key_pem\" - The private key data in PEM format.\n    # \"ecdsa_curve\" - (Optional) When \"algorithm\" is \"ECDSA\", the name of the elliptic curve to use. May be any one of \"P224\", \"P256\", \"P384\" or \"P521\", with \"P224\" as the default.\n    # \"public_key_pem\" - The public key data in PEM format.\n    # \"ecdsa_curve\" - (Optional) When \"algorithm\" is \"ECDSA\", the name of the elliptic curve to use. May be any one of \"P224\", \"P256\", \"P384\" or \"P521\", with \"P224\" as the default.\n    # \"public_key_openssh\" - The public key data in OpenSSH \"authorized_keys\"\n    # \"ecdsa_curve\" - (Optional) When \"algorithm\" is \"ECDSA\", the name of the elliptic curve to use. May be any one of \"P224\", \"P256\", \"P384\" or \"P521\", with \"P224\" as the default.\n}",
        "description": "Generates a secure private key and encodes it as PEM. This resource is\nprimarily intended for easily bootstrapping throwaway development\nenvironments. ~> **Important Security Notice** The private key generated by this resource will\nbe stored *unencrypted* in your Terraform state file. **Use of this resource\nfor production deployments is *not* recommended**. Instead, generate\na private key file outside of Terraform and distribute it securely\nto the system where Terraform will be run. This is a *logical resource*, so it contributes only to the current Terraform\nstate and does not create any external managed resources.",
        "prefix": "tls-resource-private-key"
    },
    "tls-resource-self-signed-cert": {
        "body": "resource \"tls_self_signed_cert\" \"$1\" {\n    # allowed_uses - (Required) List of keywords each describing a use that is permitted for the issued certificate. The valid keywords are listed below.\n    allowed_uses = \"\"\n\n    # validity_period_hours - (Required) The number of hours after initial issuing that the certificate will become invalid.\n    validity_period_hours = \"\"\n\n    # subject - (Required) The subject for which a certificate is being requested. This is a nested configuration block whose structure matches the corresponding block for [`tls_cert_request`](cert_request.html).\n    subject = \"\"\n\n    # private_key_pem - (Required) PEM-encoded private key data. This can be read from a separate file using the ``file`` interpolation function. If the certificate is being generated to be used for a throwaway development environment or other non-critical application, the `tls_private_key` resource can be used to generate a TLS private key from within Terraform. Only an irreversable secure hash of the private key will be stored in the Terraform state.\n    private_key_pem = \"\"\n\n    # key_algorithm - (Required) The name of the algorithm for the key provided in `private_key_pem`.\n    key_algorithm = \"\"\n\n    # dns_names - (Optional) List of DNS names for which a certificate is being requested.\n    dns_names = \"\"\n\n    # ip_addresses - (Optional) List of IP addresses for which a certificate is being requested.\n    ip_addresses = \"\"\n\n    # early_renewal_hours - (Optional) If set, the resource will consider the certificate to have expired the given number of hours before its actual expiry time. This can be useful to deploy an updated certificate in advance of the expiration of the current certificate. Note however that the old certificate remains valid until its true expiration time, since this resource does not (and cannot) support certificate revocation. Note also that this advance update can only be performed should the Terraform configuration be applied during the early renewal period.\n    early_renewal_hours = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # digital_signature - (Optional) `digital_signature`\n    digital_signature = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # content_commitment - (Optional) `content_commitment`\n    content_commitment = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # key_encipherment - (Optional) `key_encipherment`\n    key_encipherment = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # data_encipherment - (Optional) `data_encipherment`\n    data_encipherment = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # key_agreement - (Optional) `key_agreement`\n    key_agreement = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # cert_signing - (Optional) `cert_signing`\n    cert_signing = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # crl_signing - (Optional) `crl_signing`\n    crl_signing = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # encipher_only - (Optional) `encipher_only`\n    encipher_only = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # decipher_only - (Optional) `decipher_only`\n    decipher_only = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # any_extended - (Optional) `any_extended`\n    any_extended = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # server_auth - (Optional) `server_auth`\n    server_auth = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # client_auth - (Optional) `client_auth`\n    client_auth = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # code_signing - (Optional) `code_signing`\n    code_signing = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # email_protection - (Optional) `email_protection`\n    email_protection = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # ipsec_end_system - (Optional) `ipsec_end_system`\n    ipsec_end_system = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # ipsec_tunnel - (Optional) `ipsec_tunnel`\n    ipsec_tunnel = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # ipsec_user - (Optional) `ipsec_user`\n    ipsec_user = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # timestamping - (Optional) `timestamping`\n    timestamping = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # ocsp_signing - (Optional) `ocsp_signing`\n    ocsp_signing = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # microsoft_server_gated_crypto - (Optional) `microsoft_server_gated_crypto`\n    microsoft_server_gated_crypto = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # netscape_server_gated_crypto - (Optional) `netscape_server_gated_crypto`\n    netscape_server_gated_crypto = \"\"\n\n    # is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to `false`, meaning that the certificate does not represent a certificate authority.\n    is_ca_certificate = \"\"\n\n    # Exported Attributes\n    # \"cert_pem\" - The certificate data in PEM format.\n    # \"is_ca_certificate\" - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to \"false\", meaning that the certificate does not represent a certificate authority.\n    # \"validity_start_time\" - The time after which the certificate is valid, as an\n    # \"is_ca_certificate\" - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to \"false\", meaning that the certificate does not represent a certificate authority.\n    # \"validity_end_time\" - The time until which the certificate is invalid, as an\n    # \"is_ca_certificate\" - (Optional) Boolean controlling whether the CA flag will be set in the generated certificate. Defaults to \"false\", meaning that the certificate does not represent a certificate authority.\n}",
        "description": "Generates a *self-signed* TLS certificate in PEM format, which is the typical\nformat used to configure TLS server software. Self-signed certificates are generally not trusted by client software such\nas web browsers. Therefore clients are likely to generate trust warnings when\nconnecting to a server that has a self-signed certificate. Self-signed certificates\nare usually used only in development environments or apps deployed internally\nto an organization. This resource is intended to be used in conjunction with a Terraform provider\nthat has a resource that requires a TLS certificate, such as: ``aws_iam_server_certificate`` to register certificates for use with AWS *Elastic Load Balancer*, *Elastic Beanstalk*, *CloudFront* or *OpsWorks*. ``heroku_cert`` to register certificates for applications deployed on Heroku.",
        "prefix": "tls-resource-self-signed-cert"
    }
}