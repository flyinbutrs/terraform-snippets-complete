{
    "chef-resource-data-bag": {
        "body": "resource \"chef_data_bag\" \"$1\" {\n    # name - (Required) The unique name to assign to the data bag. This is the\n    name = \"\"\n\n    # Exported Attributes\n    # \"api_url\" - The URL representing this data bag in the Chef server API.\n}",
        "description": "A [data bag](http://docs.chef.io/data_bags.html) is a collection of\nconfiguration objects that are stored as JSON in Chef Server and can be\nretrieved and used in Chef recipes. This resource creates the data bag itself. Inside each data bag is a collection\nof items which can be created using the ``chef_data_bag_item`` resource.",
        "prefix": "chef-resource-data-bag"
    },
    "chef-resource-data-bag-item": {
        "body": "resource \"chef_data_bag_item\" \"$1\" {\n    # content_json - (Required) A string containing a JSON object that will be\n    content_json = \"\"\n\n    # data_bag_name - (Required) The name of the data bag into which this item\n    data_bag_name = \"\"\n\n    # Exported Attributes\n    # \"id\" - The value of the \"id\" property in the \"\"content_json\"\" JSON object,\n}",
        "description": "A [data bag](http://docs.chef.io/data_bags.html) is a collection of\nconfiguration objects that are stored as JSON in Chef Server and can be\nretrieved and used in Chef recipes. This resource creates objects within an existing data bag. To create the\ndata bag itself, use the ``chef_data_bag`` resource.",
        "prefix": "chef-resource-data-bag-item"
    },
    "chef-resource-environment": {
        "body": "resource \"chef_environment\" \"$1\" {\n    # name - (Required) The unique name to assign to the environment. This name\n    name = \"\"\n\n    # description - (Optional) A human-friendly description of the environment.\n    description = \"\"\n\n    # default_attributes_json - (Optional) String containing a JSON-serialized\n    default_attributes_json = \"\"\n\n    # override_attributes_json - (Optional) String containing a JSON-serialized\n    override_attributes_json = \"\"\n\n    # cookbook_constraints - (Optional) Mapping of cookbook names to cookbook\n    cookbook_constraints = \"\"\n\n    # Exported Attributes\n}",
        "description": "An [environment](http://docs.chef.io/environments.html) is a container for\nChef nodes that share a set of attribute values and may have a set of version\nconstraints for which cookbook versions may be used on its nodes.",
        "prefix": "chef-resource-environment"
    },
    "chef-resource-node": {
        "body": "resource \"chef_node\" \"$1\" {\n    # name - (Required) The unique name to assign to the node.\n    name = \"\"\n\n    # automatic_attributes_json - (Optional) String containing a JSON-serialized\n    automatic_attributes_json = \"\"\n\n    # normal_attributes_json - (Optional) String containing a JSON-serialized\n    normal_attributes_json = \"\"\n\n    # default_attributes_json - (Optional) String containing a JSON-serialized\n    default_attributes_json = \"\"\n\n    # override_attributes_json - (Optional) String containing a JSON-serialized\n    override_attributes_json = \"\"\n\n    # run_list - (Optional) List of strings to set as the\n    run_list = \"\"\n\n    # Exported Attributes\n}",
        "description": "A [node](http://docs.chef.io/nodes.html) is a computer whose\nconfiguration is managed by Chef. Although this resource allows a node to be registered, it does not actually\nconfigure the computer in question to interact with Chef. In most cases it\nis better to use [the `chef` provisioner](/docs/provisioners/chef.html) to\nconfigure the Chef client on a computer and have it register itself with the\nChef server.",
        "prefix": "chef-resource-node"
    },
    "chef-resource-role": {
        "body": "resource \"chef_role\" \"$1\" {\n    # name - (Required) The unique name to assign to the role.\n    name = \"\"\n\n    # description - (Optional) A human-friendly description of the role.\n    description = \"\"\n\n    # default_attributes_json - (Optional) String containing a JSON-serialized\n    default_attributes_json = \"\"\n\n    # override_attributes_json - (Optional) String containing a JSON-serialized\n    override_attributes_json = \"\"\n\n    # run_list - (Optional) List of strings to set as the\n    run_list = \"\"\n\n    # Exported Attributes\n}",
        "description": "A [role](http://docs.chef.io/roles.html) is a set of standard configuration\nthat can apply across multiple nodes that perform the same function.",
        "prefix": "chef-resource-role"
    }
}