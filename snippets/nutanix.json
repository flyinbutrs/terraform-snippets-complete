{
    "nutanix-datasource-cluster": {
        "body": "data \"nutanix_cluster\" \"$1\" {\n    # cluster_id - (Optional) `cluster_id`: Represents clusters uuid\n    cluster_id = \"\"\n\n    # Exported Attributes\n}",
        "description": "Describes Clusters",
        "prefix": "nutanix-datasource-cluster"
    },
    "nutanix-datasource-clusters-x": {
        "body": "data \"nutanix_clusters\" \"$1\" {\n    # Exported Attributes\n}",
        "description": "The entities attribute element contains the followings attributes: `name`: -  The name for the image.  `categories`: - Categories for the image.  `project_reference`: - The reference to a project.  `owner_reference`: - The reference to a user.  `availability_zone_reference`: - The reference to a availability_zone.  `api_version` - The API version.  `description`: - A description for image.  `metadata`: - The image kind metadata.  `state`: - The state of the cluster entity.  `gpu_driver_version`: - GPU driver version.  `client_auth`: - Client authentication config.  `authorized_piblic_key_list`: - List of valid ssh keys for the cluster.  `software_map_ncc`: - Map of software on the cluster with software type as the key.  `software_map_nos`: - Map of software on the cluster with software type as the key.  `encryption_status`: - Cluster encryption status.  `ssl_key_type`: - SSL key type. Key types with RSA_2048, ECDSA_256 and ECDSA_384 are supported for key generation and importing.  `ssl_key_signing_info`: - Customer information used in Certificate Signing Request for creating digital certificates.  `ssl_key_expire_datetime`: - UTC date and time in RFC-3339 format when the key expires  `service_list`: - Array of enabled cluster services. For example, a cluster can function as both AOS and cloud data gateway. - 'AOS': Regular Prism Element - 'PRISM_CENTRAL': Prism Central - 'CLOUD_DATA_GATEWAY': Cloud backup and DR gateway - 'AFS': Cluster for file server - 'WITNESS' : Witness cluster - 'XI_PORTAL': Xi cluster.  `supported_information_verbosity`: - Verbosity level settings for populating support information. - 'Nothing': Send nothing - 'Basic': Send basic information - skip core dump and hypervisor stats information - 'BasicPlusCoreDump': Send basic and core dump information - 'All': Send all information (Default value: BASIC_PLUS_CORE_DUMP)  `certification_signing_info`: - Customer information used in Certificate Signing Request for creating digital certificates.  `operation_mode`: - Cluster operation mode. - 'NORMAL': Cluster is operating normally. - 'READ_ONLY': Cluster is operating in read only mode. - 'STAND_ALONE': Only one node is operational in the cluster. This is valid only for single node or two node clusters. - 'SWITCH_TO_TWO_NODE': Cluster is moving from single node to two node cluster. - 'OVERRIDE': Valid only for single node cluster. If the user wants to run vms on a single node cluster in read only mode, he can set the cluster peration mode to override. Writes will be allowed in override mode.  `ca_certificate_list`: - Zone name used in value of TZ environment variable.  `enabled_feature_list`: - Array of enabled features.  `is_available`: - Indicates if cluster is available to contact. (Readonly)  `build`: - Cluster build details.  `timezone`: - Zone name used in value of TZ environment variable.  `cluster_arch`: - Cluster architecture. (Readonly, Options: Options : X86_64 , PPC64LE)  `management_server_list`: - List of cluster management servers. (Readonly)  `masquerading_port`: - Port used together with masquerading_ip to connect to the cluster.  `masquerading_ip`: - The cluster NAT'd or proxy IP which maps to the cluster local IP.  `external_ip`: - The local IP of cluster visible externally.  `http_proxy_list`: - List of proxies to connect to the service centers.  `smtp_server_type`: - SMTP Server type.  `smtp_server_email_address`: - SMTP Server Email Address.  `smtp_server_credentials`: - SMTP Server Credentials.  `smtp_server_proxy_type_list`: - SMTP Server Proxy Type List  `smtp_server_address`: - SMTP Server Address.  `ntp_server_ip_list`: - The list of IP addresses or FQDNs of the NTP servers.  `external_subnet`: - External subnet for cross server communication. The format is IP/netmask. (default 172.16.0.0/255.240.0.0)  `external_data_services_ip`: - The cluster IP address that provides external entities access to various cluster data services.  `internal_subnet`: - The internal subnet is local to every server - its not visible outside.iSCSI requests generated internally within the appliance (by user VMs or VMFS) are sent to the internal subnet. The format is IP/netmask.  `domain_server_nameserver`: -  The IP of the nameserver that can resolve the domain name. Must set when joining the domain.  `domain_server_name`: - Joined domain name. In 'put' request, empty name will unjoin the cluster from current domain.  `domain_server_credentials`: - Cluster domain credentials.  `nfs_subnet_whitelist`: - Comma separated list of subnets (of the form 'a.b.c.d/l.m.n.o') that are allowed to send NFS requests to this container. If not specified, the global NFS whitelist will be looked up for access permission. The internal subnet is always automatically considered part of the whitelist, even if the field below does not explicitly specify it. Similarly, all the hypervisor IPs are considered part of the whitelist. Finally, to permit debugging, all of the SVMs local IPs are considered to be implicitly part of the whitelist.  `name_server_ip_list`: - The list of IP addresses of the name servers.  `http_proxy_whitelist`: - HTTP proxy whitelist.  `analysis_vm_efficiency_map`: - Map of cluster efficiency which includes numbers of inefficient vms. The value is populated by analytics on PC. (Readonly) ",
        "prefix": "nutanix-datasource-clusters-x"
    },
    "nutanix-datasource-image": {
        "body": "data \"nutanix_image\" \"$1\" {\n    # image_id - (Optional) `image_id`: Represents image UUID\n    image_id = \"\"\n\n    # image_name - (Optional) `image_name`: Represents image name\n    image_name = \"\"\n\n    # Exported Attributes\n}",
        "description": "Describes a Image",
        "prefix": "nutanix-datasource-image"
    },
    "nutanix-datasource-network_security_rule": {
        "body": "data \"nutanix_network_security_rule\" \"$1\" {\n    # network_security_rule_id - (Optional) `network_security_rule_id`: Represents network security rule UUID\n    network_security_rule_id = \"\"\n\n    # Exported Attributes\n}",
        "description": "Describes a Network security rule",
        "prefix": "nutanix-datasource-network_security_rule"
    },
    "nutanix-datasource-subnet": {
        "body": "data \"nutanix_subnet\" \"$1\" {\n    # subnet_id - (Optional) The ID for the subnet.\n    subnet_id = \"\"\n\n    # subnet_name - (Optional) The name for the subnet\n    subnet_name = \"\"\n\n    # Exported Attributes\n    # \"metadata\": - (Required) The subnet kind metadata.\n    # \"availability_zone_reference\": - (Optional) The reference to a availability_zone.\n    # \"cluster_reference\": - (Optional) The reference to a cluster.\n    # \"cluster_name\": - (Optional) The name of a cluster.\n    # \"description\": - (Optional) A description for subnet.\n    # \"name\": - (Optional) Subnet name (Readonly).\n    # \"categories\": - (Optional) The API Version.\n    # \"owner_reference\": - (Optional) The reference to a user.\n    # \"project_reference\": - (Optional) The reference to a project.\n    # \"vswitch_name\": - (Optional).\n    # \"subnet_type\": - (Optional).\n    # \"default_gateway_ip\": - (Optional) Default gateway IP address.\n    # \"prefix_length\": - (Optional). IP prefix length of the Subnet.\n    # \"subnet_ip\": - (Optional) Subnet IP address.\n    # \"dhcp_server_address\": - (Optional) Host address.\n    # \"dhcp_server_address_port\": - (Optional) Port Number.\n    # \"dhcp_options\": - (Optional) Spec for defining DHCP options.\n    # \"dhcp_domain_search_list\": - (Optional).\n    # \"vlan_id\": - (Optional).\n    # \"network_function_chain_reference\": - (Optional) The reference to a network_function_chain.\n    # \"state\": - The state of the subnet.\n}",
        "description": "Provides a resource to create a subnet based on the input parameters. A subnet is a block of IP addresses.",
        "prefix": "nutanix-datasource-subnet"
    },
    "nutanix-datasource-virtual-machine": {
        "body": "data \"nutanix_virtual_machine\" \"$1\" {\n    # vm_id - (Optional) `vm_id`: Represents virtual machine UUID\n    vm_id = \"\"\n\n    # Exported Attributes\n}",
        "description": "Describes a Virtual Machine",
        "prefix": "nutanix-datasource-virtual-machine"
    },
    "nutanix-datasource-volume-group": {
        "body": "data \"nutanix_volume_group\" \"$1\" {\n    # volume_group_id - (Optional) `volume_group_id`: Represents volume group UUID\n    volume_group_id = \"\"\n\n    # Exported Attributes\n}",
        "description": "Describes a Volume Group",
        "prefix": "nutanix-datasource-volume-group"
    },
    "nutanix-resource-category-key": {
        "body": "resource \"nutanix_category_key\" \"$1\" {\n    # name - (Required) The name for the category key.\n    name = \"\"\n\n    # description - (Optional) A description for category key.\n    description = \"\"\n\n    # Exported Attributes\n    # \"system_defined\": - Specifying whether its a system defined category.\n    # \"api_version\" - (Optional) The version of the API.\n}",
        "description": "Provides a Nutanix Category key resource to Create a category key name.",
        "prefix": "nutanix-resource-category-key"
    },
    "nutanix-resource-category-value": {
        "body": "resource \"nutanix_category_value\" \"$1\" {\n    # value - (Required) The value for the category value.\n    value = \"\"\n\n    # name - (Required) The category_key name for the category value.\n    name = \"\"\n\n    # description - (Optional) A description for category value.\n    description = \"\"\n\n    # Exported Attributes\n    # \"system_defined\": - Specifying whether its a system defined category.\n    # \"api_version\" - (Optional) The version of the API.\n}",
        "description": "Provides a Nutanix Category value resource to Create a category value.",
        "prefix": "nutanix-resource-category-value"
    },
    "nutanix-resource-image": {
        "body": "resource \"nutanix_image\" \"$1\" {\n    # name - (Required) The name for the image.\n    name = \"\"\n\n    # categories - (Optional) Categories for the image.\n    categories = \"\"\n\n    # project_reference - (Optional) The reference to a project.\n    project_reference = \"\"\n\n    # owner_reference - (Optional) The reference to a user.\n    owner_reference = \"\"\n\n    # availability_zone_reference - (Optional) The reference to a availability_zone.\n    availability_zone_reference = \"\"\n\n    # description - (Optional) A description for image.\n    description = \"\"\n\n    # architecture - (Optional) The supported CPU architecture for a disk image.\n    architecture = \"\"\n\n    # checksum - (Optional) Checksum of the image. The checksum is used for image validation if the image has a source specified. For images that do not have their source specified the checksum is generated by the image service.\n    checksum = \"\"\n\n    # image_type - (Optional) The type of image.\n    image_type = \"\"\n\n    # source_uri - (Optional) The source URI points at the location of the source image which is used to create/update image.\n    source_uri = \"\"\n\n    # source_path - (Optional) A local path to upload an image.\n    source_path = \"\"\n\n    # version - (Optional) The image version.\n    version = \"\"\n\n    # Exported Attributes\n    # \"metadata\": - The image kind metadata.\n    # \"retrieval_uri_list\": - List of URIs where the raw image data can be accessed.\n    # \"size_bytes\": - The size of the image in bytes.\n    # \"state\": - The state of the image.\n    # \"api_version\" - The version of the API.\n}",
        "description": "Provides a Nutanix Image resource to Create a image.",
        "prefix": "nutanix-resource-image"
    },
    "nutanix-resource-network-security-rule": {
        "body": "resource \"nutanix_network_security_rule\" \"$1\" {\n    # name - (Required) The name for the image.\n    name = \"\"\n\n    # categories - (Optional) Categories for the image.\n    categories = \"\"\n\n    # project_reference - (Optional) The reference to a project.\n    project_reference = \"\"\n\n    # owner_reference - (Optional) The reference to a user.\n    owner_reference = \"\"\n\n    # description - (Optional) A description for image.\n    description = \"\"\n\n    # quarantine_rule_action - (Optional) These rules are used for quarantining suspected VMs. Target group is a required attribute. Empty inbound_allow_list will not allow anything into target group. Empty outbound_allow_list will allow everything from target group.\n    quarantine_rule_action = \"\"\n\n    # quarantine_rule_outbound_allow_list - (Optional) \n    quarantine_rule_outbound_allow_list = \"\"\n\n    # quarantine_rule_target_group_default_internal_policy - (Optional) - Default policy for communication within target group.\n    quarantine_rule_target_group_default_internal_policy = \"\"\n\n    # quarantine_rule_target_group_peer_specification_type - (Optional) - Way to identify the object for which rule is applied.\n    quarantine_rule_target_group_peer_specification_type = \"\"\n\n    # quarantine_rule_target_group_filter_kind_list - (Optional) - List of kinds associated with this filter.\n    quarantine_rule_target_group_filter_kind_list = \"\"\n\n    # quarantine_rule_target_group_filter_type - (Optional) - The type of the filter being used.\n    quarantine_rule_target_group_filter_type = \"\"\n\n    # quarantine_rule_target_group_filter_params - (Optional) - A list of category key and list of values.\n    quarantine_rule_target_group_filter_params = \"\"\n\n    # quarantine_rule_inbound_allow_list - (Optional) \n    quarantine_rule_inbound_allow_list = \"\"\n\n    # app_rule_action - (Optional) - These rules govern what flows are allowed. Target group is a required attribute. Empty inbound_allow_list will not anything into target group. Empty outbound_allow_list will allow everything from target group.\n    app_rule_action = \"\"\n\n    # app_rule_outbound_allow_list - (Optional) \n    app_rule_outbound_allow_list = \"\"\n\n    # app_rule_target_group_default_internal_policy - (Optional) - Default policy for communication within target group.\n    app_rule_target_group_default_internal_policy = \"\"\n\n    # app_rule_target_group_peer_specification_type - (Optional) - Way to identify the object for which rule is applied.\n    app_rule_target_group_peer_specification_type = \"\"\n\n    # app_rule_target_group_filter_kind_list - (Optional) - List of kinds associated with this filter.\n    app_rule_target_group_filter_kind_list = \"\"\n\n    # app_rule_target_group_filter_type - (Optional) - The type of the filter being used.\n    app_rule_target_group_filter_type = \"\"\n\n    # app_rule_target_group_filter_params - (Optional) - A list of category key and list of values.\n    app_rule_target_group_filter_params = \"\"\n\n    # app_rule_inbound_allow_list - (Optional) \n    app_rule_inbound_allow_list = \"\"\n\n    # isolation_rule_action - (Optional) - These rules are used for environmental isolation.\n    isolation_rule_action = \"\"\n\n    # app_rule_inbound_allow_list - (Optional) \n    app_rule_inbound_allow_list = \"\"\n\n    # isolation_rule_first_entity_filter_kind_list - (Optional) - List of kinds associated with this filter.\n    isolation_rule_first_entity_filter_kind_list = \"\"\n\n    # isolation_rule_first_entity_filter_type - (Optional) - The type of the filter being used.\n    isolation_rule_first_entity_filter_type = \"\"\n\n    # isolation_rule_first_entity_filter_params - (Optional) - A list of category key and list of values.\n    isolation_rule_first_entity_filter_params = \"\"\n\n    # isolation_rule_second_entity_filter_kind_list - (Optional) - List of kinds associated with this filter.\n    isolation_rule_second_entity_filter_kind_list = \"\"\n\n    # isolation_rule_second_entity_filter_type - (Optional) - The type of the filter being used.\n    isolation_rule_second_entity_filter_type = \"\"\n\n    # isolation_rule_second_entity_filter_params - (Optional) - A list of category key and list of values.\n    isolation_rule_second_entity_filter_params = \"\"\n\n    # Exported Attributes\n    # \"metadata\": - The image kind metadata.\n    # \"retrieval_uri_list\": - List of URIs where the raw image data can be accessed.\n    # \"size_bytes\": - The size of the image in bytes.\n    # \"state\": - The state of the Network Security Rule.\n    # \"api_version\" - The version of the API.\n}",
        "description": "Provides a Nutanix network security rule resource to Create a network security rule.",
        "prefix": "nutanix-resource-network-security-rule"
    },
    "nutanix-resource-subnet": {
        "body": "resource \"nutanix_subnet\" \"$1\" {\n    # metadata - (Required) The subnet kind metadata.\n    metadata = \"\"\n\n    # availability_zone_reference - (Optional) The reference to a availability_zone.\n    availability_zone_reference = \"\"\n\n    # cluster_reference - (Optional) The reference to a cluster.\n    cluster_reference = \"\"\n\n    # cluster_name - (Optional) The name of a cluster.\n    cluster_name = \"\"\n\n    # description - (Optional) A description for subnet.\n    description = \"\"\n\n    # name - (Optional) Subnet name (Readonly).\n    name = \"\"\n\n    # categories - (Optional) The categories of the resource.\n    categories = \"\"\n\n    # owner_reference - (Optional) The reference to a user.\n    owner_reference = \"\"\n\n    # project_reference - (Optional) The reference to a project.\n    project_reference = \"\"\n\n    # vswitch_name - (Optional) \n    vswitch_name = \"\"\n\n    # subnet_type - (Optional) \n    subnet_type = \"\"\n\n    # default_gateway_ip - (Optional) Default gateway IP address.\n    default_gateway_ip = \"\"\n\n    # prefix_length - (Optional) \n    prefix_length = \"\"\n\n    # subnet_ip - (Optional) Subnet IP address.\n    subnet_ip = \"\"\n\n    # dhcp_server_address - (Optional) Host address.\n    dhcp_server_address = \"\"\n\n    # dhcp_server_address_port - (Optional) Port Number.\n    dhcp_server_address_port = \"\"\n\n    # dhcp_options - (Optional) Spec for defining DHCP options.\n    dhcp_options = \"\"\n\n    # dhcp_domain_search_list - (Optional) \n    dhcp_domain_search_list = \"\"\n\n    # vlan_id - (Optional) \n    vlan_id = \"\"\n\n    # network_function_chain_reference - (Optional) The reference to a network_function_chain.\n    network_function_chain_reference = \"\"\n\n    # Exported Attributes\n    # \"metadata\": - The vm kind metadata.\n    # \"state\": - The state of the subnet.\n    # \"api_version\" - The version of the API.\n}",
        "description": "Provides a resource to create a subnet based on the input parameters. A subnet is a block of IP addresses.",
        "prefix": "nutanix-resource-subnet"
    },
    "nutanix-resource-virtual-machine": {
        "body": "resource \"nutanix_virtual_machine\" \"$1\" {\n    # cluster_reference - (Required) The reference to a cluster.\n    cluster_reference = \"\"\n\n    # name - (Required) The name for the vm.\n    name = \"\"\n\n    # cluster_name - (Optional) The name of the reference to the cluster.\n    cluster_name = \"\"\n\n    # categories - (Optional) Categories for the vm.\n    categories = \"\"\n\n    # project_reference - (Optional) The reference to a project.\n    project_reference = \"\"\n\n    # owner_reference - (Optional) The reference to a user.\n    owner_reference = \"\"\n\n    # availability_zone_reference - (Optional) The reference to a availability_zone.\n    availability_zone_reference = \"\"\n\n    # description - (Optional) A description for vm.\n    description = \"\"\n\n    # num_vnuma_nodes - (Optional) Number of vNUMA nodes. 0 means vNUMA is disabled.\n    num_vnuma_nodes = \"\"\n\n    # nic_list - (Optional) NICs attached to the VM.\n    nic_list = \"\"\n\n    # guest_os_id - (Optional) Guest OS Identifier. For ESX, refer to VMware documentation [link](https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html) for the list of guest OS identifiers.\n    guest_os_id = \"\"\n\n    # power_state - (Optional) The current or desired power state of the VM. (Options : ON , OFF)\n    power_state = \"\"\n\n    # nutanix_guest_tools - (Optional) Information regarding Nutanix Guest Tools.\n    nutanix_guest_tools = \"\"\n\n    # num_vcpus_per_socket - (Optional) Number of vCPUs per socket.\n    num_vcpus_per_socket = \"\"\n\n    # num_sockets - (Optional) Number of vCPU sockets.\n    num_sockets = \"\"\n\n    # gpu_list - (Optional) GPUs attached to the VM.\n    gpu_list = \"\"\n\n    # parent_referece - (Optional) Reference to an entity that the VM cloned from.\n    parent_referece = \"\"\n\n    # memory_size_mib - (Optional) Memory size in MiB.\n    memory_size_mib = \"\"\n\n    # boot_device_order_list - (Optional) Indicates the order of device types in which VM should try to boot from. If boot device order is not provided the system will decide appropriate boot device order.\n    boot_device_order_list = \"\"\n\n    # boot_device_disk_address - (Optional) Address of disk to boot from.\n    boot_device_disk_address = \"\"\n\n    # boot_device_mac_address - (Optional) MAC address of nic to boot from.\n    boot_device_mac_address = \"\"\n\n    # hardware_clock_timezone - (Optional) VM's hardware clock timezone in IANA TZDB format (America/Los_Angeles).\n    hardware_clock_timezone = \"\"\n\n    # guest_customization_cloud_init - (Optional) VM guests may be customized at boot time using one of several different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep or cloud_init should be provided. Note that guest customization can currently only be set during VM creation. Attempting to change it after creation will result in an error. Additional properties can be specified. For example - in the context of VM template creation if \\\"override_script\\\" is set to \\\"True\\\" then the deployer can upload their own custom script.\n    guest_customization_cloud_init = \"\"\n\n    # guest_customization_cloud_init_custom_key_values - (Optional) Generic key value pair used for custom attributes in cloud init.\n    guest_customization_cloud_init_custom_key_values = \"\"\n\n    # guest_customization_is_overridable - (Optional) Flag to allow override of customization by deployer.\n    guest_customization_is_overridable = \"\"\n\n    # guest_customization_sysprep - (Optional) VM guests may be customized at boot time using one of several different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep or cloud_init should be provided. Note that guest customization can currently only be set during VM creation. Attempting to change it after creation will result in an error. Additional properties can be specified. For example - in the context of VM template creation if \\\"override_script\\\" is set to \\\"True\\\" then the deployer can upload their own custom script.\n    guest_customization_sysprep = \"\"\n\n    # guest_customization_sysrep_custom_key_values - (Optional) Generic key value pair used for custom attributes in sysrep.\n    guest_customization_sysrep_custom_key_values = \"\"\n\n    # should_fail_on_script_failure - (Optional)  Extra configs related to power state transition. Indicates whether to abort ngt shutdown/reboot if script fails.\n    should_fail_on_script_failure = \"\"\n\n    # enable_script_exec - (Optional) Extra configs related to power state transition. Indicates whether to execute set script before ngt shutdown/reboot.\n    enable_script_exec = \"\"\n\n    # power_state_mechanism - (Optional) Indicates the mechanism guiding the VM power state transition. Currently used for the transition to \\\"OFF\\\" state. Power state mechanism (ACPI/GUEST/HARD).\n    power_state_mechanism = \"\"\n\n    # vga_console_enabled - (Optional) Indicates whether VGA console should be enabled or not.\n    vga_console_enabled = \"\"\n\n    # disk_list - (Optional) `disk_list` Disks attached to the VM.\n    disk_list = \"\"\n\n    # Exported Attributes\n    # \"metadata\": - The vm kind metadata.\n    # \"api_version\" - The version of the API.\n    # \"state\": - The state of the vm.\n    # \"ip_address\": - An IP address.\n    # \"host_reference\": - Reference to a host.\n    # \"hypervisor_type\": - The hypervisor type for the hypervisor the VM is hosted on.\n}",
        "description": "Provides a Nutanix Virtual Machine resource to Create a virtual machine.",
        "prefix": "nutanix-resource-virtual-machine"
    },
    "nutanix-resource-volume-group": {
        "body": "resource \"nutanix_volume_group\" \"$1\" {\n    # name - (Required) The name for the volume_group.\n    name = \"\"\n\n    # categories - (Optional) Categories for the volume_group.\n    categories = \"\"\n\n    # project_reference - (Optional) The reference to a project.\n    project_reference = \"\"\n\n    # owner_reference - (Optional) The reference to a user.\n    owner_reference = \"\"\n\n    # api_version - (Optional) Version of the API.\n    api_version = \"\"\n\n    # description - (Optional) A description for volume_group.\n    description = \"\"\n\n    # flash_mode - (Optional) Flash Mode, if enabled all volume disks of the VG will be pinned to SSD tier.\n    flash_mode = \"\"\n\n    # file_system_type - (Optional) File system to be used for volume.\n    file_system_type = \"\"\n\n    # sharing_status - (Optional) (Optiional) Whether the volume group can be shared across multiple iSCSI initiators.\n    sharing_status = \"\"\n\n    # attachment_list - (Optional) VMs attached to volume group.\n    attachment_list = \"\"\n\n    # disk_list - (Optional) Volume group disk specification.\n    disk_list = \"\"\n\n    # iscsi_target_prefix - (Optional) iSCSI target prefix-name.\n    iscsi_target_prefix = \"\"\n\n    # Exported Attributes\n    # \"metadata\": - The volume_group kind metadata.\n    # \"state\": - The state of the volume group.\n}",
        "description": "Provides a Nutanix Volume Group resource to Create a volume_group.",
        "prefix": "nutanix-resource-volume-group"
    }
}