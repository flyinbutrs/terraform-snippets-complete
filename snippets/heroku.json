{
    "heroku-datasource-addon-x": {
        "body": "data \"heroku_addon\" \"$1\" {\n    # name - (Required) The add-on name\n    name = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the add-on\n    # \"name\" - The add-on name\n    # \"plan\" - The plan name\n    # \"provider_id\" - The ID of the plan provider\n    # \"config_vars\" - The Configuration variables of the add-on\n}",
        "description": "Use this data source to get information about a Heroku Addon.",
        "prefix": "heroku-datasource-addon-x"
    },
    "heroku-datasource-app-x": {
        "body": "data \"heroku_app\" \"$1\" {\n    # name - (Required) The name of the application. In Heroku, this is also the\n    name = \"\"\n\n    # Exported Attributes\n    # \"name\" - (Required) The name of the application. In Heroku, this is also the\n    # \"stack\" - (Optional) The application stack is what platform to run the application\n    # \"buildpacks\" - (Optional) A list of buildpacks that this app uses.\n    # \"space\" - (Optional) The private space in which the app runs. Not present if this is a common runtime app.\n    # \"region\" - (Required) The region in which the app is deployed.\n    # \"git_url\" - (Required) The Git URL for the application. This is used for\n    # \"web_url\" - (Required) The web (HTTP) URL that the application can be accessed\n    # \"heroku_hostname\" - (Required) A hostname for the Heroku application, suitable\n    # \"config_vars\" - (Optional) A map of all of the configuration variables for the app.\n    # \"acm\" - (Required) True if Heroku ACM is enabled for this app, false otherwise.\n    # \"organization\" - (Optional) The organization that owns this app, if the app is owned by an organization. The fields for this block are documented below.\n    # \"name\" (string) - The name of the organization.\n    # \"locked\" (boolean)\n    # \"personal\" (boolean)\n}",
        "description": "Use this data source to get information about a Heroku App.",
        "prefix": "heroku-datasource-app-x"
    },
    "heroku-datasource-space-peering-info-x": {
        "body": "data \"heroku_space_peering_info\" \"$1\" {\n    # name - (Required) The name of the Heroku Private Space.\n    name = \"\"\n\n    # Exported Attributes\n    # \"aws_account_id\" - The AWS account ID that the Heroku Private Space runs in.\n    # \"aws_region\" - The AWS region that the Heroku Private Space runs in.\n    # \"vpc_id\" - The VPC ID of the Heroku Private Space.\n    # \"vpc_cidr\" - The CIDR block of the VPC ID.\n    # \"dyno_cidr_blocks\" - The CIDR blocks that the Dynos run on.\n    # \"unavailable_cidr_blocks\" - A list of unavailable CIDR blocks.\n}",
        "description": "Use this data source to get peering information about a [Heroku Private Space](https://www.heroku.com/private-spaces).",
        "prefix": "heroku-datasource-space-peering-info-x"
    },
    "heroku-datasource-space-x": {
        "body": "data \"heroku_space\" \"$1\" {\n    # name - (Required) The name of the Heroku Private Space.\n    name = \"\"\n\n    # Exported Attributes\n    # \"name\" - The name of the Heroku Private Space. In Heroku, this is also the unique .\n    # \"id\" - The unique ID of the Heroku Private Space.\n    # \"region\" - The region in which the Heroku Private Space is deployed.\n    # \"state\" - The state of the Heroku Private Space. Either \"allocating\" or \"allocated\".\n    # \"shield\" - Whether or not the space has [Shield](https://devcenter.heroku.com/articles/private-spaces#shield-private-spaces) turned on. One of \"on\" or \"off\".\n    # \"organization\" - The organization that owns this space, if the space is owned by an organization. The fields for this block are documented below.\n    # \"outbound_ips\" - The space's stable outbound [NAT IPs](https://devcenter.heroku.com/articles/platform-api-reference#space-network-address-translation).\n    # \"name\" (string) - The name of the organization.\n}",
        "description": "Use this data source to get information about a [Heroku Private Space](https://www.heroku.com/private-spaces).",
        "prefix": "heroku-datasource-space-x"
    },
    "heroku-resource-account-feature": {
        "body": "resource \"heroku_account_feature\" \"$1\" {\n    # enabled - (Required) Enable or disable the account feature\n    enabled = \"\"\n\n    # name - (Required) Name of the account feature\n    name = \"\"\n\n    # Exported Attributes\n    # \"id\" - Comprised of acount email & feature name\n    # \"description\" - Description of account feature\n    # \"state\" - State of account feature\n}",
        "description": "Provides a Heroku Account Feature resource. An account feature represents a Heroku labs capability\nthat can be enabled or disabled for an account on Heroku. ~> **NOTE:** If this resource's HCL is removed from a `.tf` file, the behavior is to disable account feature\nand remove resource from state.",
        "prefix": "heroku-resource-account-feature"
    },
    "heroku-resource-addon": {
        "body": "resource \"heroku_addon\" \"$1\" {\n    # plan - (Required) The addon to add.\n    plan = \"\"\n\n    # app - (Required) The Heroku app to add to.\n    app = \"\"\n\n    # config - (Optional) Optional plan configuration.\n    config = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the add-on\n    # \"name\" - The add-on name\n    # \"plan\" - The plan name\n    # \"provider_id\" - The ID of the plan provider\n    # \"config_vars\" - The Configuration variables of the add-on\n}",
        "description": "Provides a Heroku Add-On resource. These can be attach\nservices to a Heroku app.",
        "prefix": "heroku-resource-addon"
    },
    "heroku-resource-addon-attachment": {
        "body": "resource \"heroku_addon_attachment\" \"$1\" {\n    # addon_id - (Required) The ID of the existing Heroku Addon to attach.\n    addon_id = \"\"\n\n    # app_id - (Required) The ID of the Heroku App to attach to.\n    app_id = \"\"\n\n    # name - (Optional) A friendly name for the Heroku Addon Attachment.\n    name = \"\"\n\n    # Exported Attributes\n    # \"id\" - The unique ID of the add-on attachment\n}",
        "description": "Attaches a Heroku Addon Resource to an additional Heroku App.",
        "prefix": "heroku-resource-addon-attachment"
    },
    "heroku-resource-app-feature": {
        "body": "resource \"heroku_app_feature\" \"$1\" {\n    # name - (Required) The name of the App Feature to manage.\n    name = \"\"\n\n    # app - (Required) The Heroku app to link to.\n    app = \"\"\n\n    # enabled - (Optional) Whether to enable or disable the App Feature. The default value is true.\n    enabled = \"\"\n\n    # Exported Attributes\n}",
        "description": "Provides a Heroku App Feature resource. This can be used to create and manage App Features on Heroku.",
        "prefix": "heroku-resource-app-feature"
    },
    "heroku-resource-app-release": {
        "body": "resource \"heroku_app_release\" \"$1\" {\n    # app - (Required) The name of the application\n    app = \"\"\n\n    # slug_id - (Optional) unique identifier of slug\n    slug_id = \"\"\n\n    # description - (Optional) description of changes in this release\n    description = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the app release\n}",
        "description": "Provides a [Heroku App Release](https://devcenter.heroku.com/articles/platform-api-reference#release)\nresource. An app release represents a combination of code, config vars and add-ons for an app on Heroku. ~> **NOTE:** This resource requires the slug be uploaded to Heroku using [`heroku_slug`](slug.html) or with external tooling prior to running terraform.",
        "prefix": "heroku-resource-app-release"
    },
    "heroku-resource-app-x": {
        "body": "resource \"heroku_app\" \"$1\" {\n    # region - (Required) The region that the app should be deployed in.\n    region = \"\"\n\n    # name - (Required) The name of the application. In Heroku, this is also the\n    name = \"\"\n\n    # stack - (Optional) The application stack is what platform to run the application\n    stack = \"\"\n\n    # buildpacks - (Optional) Buildpack names or URLs for the application.\n    buildpacks = \"\"\n\n    # config_vars - (Optional) Configuration variables for the application.\n    config_vars = \"\"\n\n    # sensitive_config_vars - (Optional) This argument is the same as `config_vars`.\n    sensitive_config_vars = \"\"\n\n    # space - (Optional) The name of a private space to create the app in.\n    space = \"\"\n\n    # internal_routing - (Optional) If true, the application will be routable\n    internal_routing = \"\"\n\n    # organization - (Optional) A block that can be specified once to define\n    organization = \"\"\n\n    # acm - (Optional) The flag representing Automated Certificate Management for the app.\n    acm = \"\"\n\n    # name - (Optional) The name of the organization.\n    name = \"\"\n\n    # locked - (Optional) `locked` (boolean)\n    locked = \"\"\n\n    # personal - (Optional) `personal` (boolean)\n    personal = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the app. This is also the name of the application.\n    # \"name\" - The name of the application. In Heroku, this is also the\n    # \"stack\" - The application stack is what platform to run the application\n    # \"space\" - The private space the app should run in.\n    # \"internal_routing\" - Whether internal routing is enabled the private space\n    # \"region\" - The region that the app should be deployed in.\n    # \"git_url\" - The Git URL for the application. This is used for\n    # \"web_url\" - The web (HTTP) URL that the application can be accessed\n    # \"heroku_hostname\" - A hostname for the Heroku application, suitable\n    # \"all_config_vars\" - A map of all of the configuration variables that\n    # \"uuid\" - The unique UUID of the Heroku app. **NOTE:** Use this for \"null_resource\" triggers.\n}",
        "description": "Provides a Heroku App resource. This can be used to\ncreate and manage applications on Heroku.",
        "prefix": "heroku-resource-app-x"
    },
    "heroku-resource-build": {
        "body": "resource \"heroku_build\" \"$1\" {\n    # source - (Required) A block that specifies the source code to build & release:\n    source = \"\"\n\n    # app - (Required) The ID of the Heroku app\n    app = \"\"\n\n    # buildpacks - (Optional) List of buildpack GitHub URLs\n    buildpacks = \"\"\n\n    # checksum - (Optional) Hash of the source archive for verifying its integrity, auto-generated when `source.path` is set, `SHA256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855`\n    checksum = \"\"\n\n    # path - (Optional) (Required unless `source.url` is set) Local path to the source directory or tarball archive for the app\n    path = \"\"\n\n    # url - (Optional) (Required unless `source.path` is set) `https` location of the source archive for the app\n    url = \"\"\n\n    # version - (Optional) Use to track what version of your source originated this build. If you are creating builds from git-versioned source code, for example, the commit hash, or release tag would be a good value to use for the version parameter.\n    version = \"\"\n\n    # Exported Attributes\n    # \"uuid\" - The ID of the build\n    # \"output_stream_url\" - URL that [streams the log output from the build](https://devcenter.heroku.com/articles/build-and-release-using-the-api#streaming-build-output)\n    # \"release_id\" - The Heroku app release created with a build's slug\n    # \"slug_id\" - The Heroku slug created by a build\n    # \"stack\" - Name or ID of the [Heroku stack](https://devcenter.heroku.com/articles/stack)\n    # \"status\" - The status of a build. Possible values are \"pending\", \"successful\" and \"failed\"\n    # \"user\" - Heroku account that created a build\n    # \"email\"\n    # \"id\"\n}",
        "description": "Provides a [Heroku Build](https://devcenter.heroku.com/articles/platform-api-reference#build)\nresource, to deploy source code to a Heroku app. Either a URL or local path, pointing to a [tarball](https://en.wikipedia.org/wiki/Tar_(computing)) of the source code, may be deployed. If a local path is used, it may instead point to a directory of source code, which will be tarballed automatically and then deployed. This resource waits until the [build](https://devcenter.heroku.com/articles/build-and-release-using-the-api) & [release](https://devcenter.heroku.com/articles/release-phase) completes. If the build fails, the error will contain a URL to view the build log. `curl \"https://the-long-log-url-in-the-error\"`. To start the app from a successful build, use a [Formation resource](formation.html) to specify the process, dyno size, and dyno quantity.",
        "prefix": "heroku-resource-build"
    },
    "heroku-resource-cert": {
        "body": "resource \"heroku_cert\" \"$1\" {\n    # private_key - (Required) The private key for a given certificate chain\n    private_key = \"\"\n\n    # certificate_chain - (Required) The certificate chain to add\n    certificate_chain = \"\"\n\n    # app - (Required) The Heroku app to add to.\n    app = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the add-on\n    # \"cname\" - The CNAME for the SSL endpoint\n    # \"name\" - The name of the SSL certificate\n}",
        "description": "Provides a Heroku SSL certificate resource. It allows to set a given certificate for a Heroku app.",
        "prefix": "heroku-resource-cert"
    },
    "heroku-resource-domain": {
        "body": "resource \"heroku_domain\" \"$1\" {\n    # app - (Required) The Heroku app to link to.\n    app = \"\"\n\n    # hostname - (Required) The hostname to serve requests from.\n    hostname = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the of the domain record.\n    # \"hostname\" - The hostname traffic will be served as.\n    # \"cname\" - The CNAME traffic should route to.\n}",
        "description": "Provides a Heroku App resource. This can be used to\ncreate and manage applications on Heroku.",
        "prefix": "heroku-resource-domain"
    },
    "heroku-resource-drain": {
        "body": "resource \"heroku_drain\" \"$1\" {\n    # app - (Required) The Heroku app to link to.\n    app = \"\"\n\n    # url - (Required) The URL for Heroku to drain your logs to.\n    url = \"\"\n\n    # Exported Attributes\n    # \"token\" - The unique token for your created drain.\n}",
        "description": "Provides a Heroku Drain resource. This can be used to\ncreate and manage Log Drains on Heroku.",
        "prefix": "heroku-resource-drain"
    },
    "heroku-resource-formation": {
        "body": "resource \"heroku_formation\" \"$1\" {\n    # size - (Required) dyno size (Example: \u201cstandard-1X\u201d). Capitalization does not matter.\n    size = \"\"\n\n    # quantity - (Required) number of processes to maintain\n    quantity = \"\"\n\n    # type - (Required) type of process such as \"web\"\n    type = \"\"\n\n    # app - (Required) The name of the application\n    app = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the formation\n}",
        "description": "Provides a [Heroku Formation](https://devcenter.heroku.com/articles/platform-api-reference#formation)\nresource. A formation represents the formation of processes that should be set for an application. ~> **NOTE:**  The application must have a dyno in order to update its formation.  If the heroku formation resource is removed and deleted, this will be a no-op action in Heroku. The Heroku Platform does not have a `DELETE` endpoint for `formation`.  This resource works well with the `heroku_app_release` resource, which allows you to deploy a slug/release to an application before the formation can be updated. ",
        "prefix": "heroku-resource-formation"
    },
    "heroku-resource-pipeline-coupling": {
        "body": "resource \"heroku_pipeline_coupling\" \"$1\" {\n    # stage - (Required) The stage to couple this app to. Must be one of\n    stage = \"\"\n\n    # pipeline - (Required) The ID of the pipeline to add this app to.\n    pipeline = \"\"\n\n    # app - (Required) The name of the app for this coupling.\n    app = \"\"\n\n    # review - (Optional) `review`, `development`, `staging`, or `production`.\n    review = \"\"\n\n    # Exported Attributes\n    # \"id\" - The UUID of this pipeline coupling.\n    # \"app\" - The name of the application.\n    # \"app_id\" - The ID of the application.\n    # \"pipeline\" - The UUID of the pipeline.\n    # \"stage\" - The stage for this coupling.\n}",
        "description": "Provides a [Heroku Pipeline Coupling](https://devcenter.heroku.com/articles/pipelines)\nresource. A pipeline is a group of Heroku apps that share the same codebase. Once a\npipeline is created using [`heroku_pipeline`](./pipeline.html), and apps are added\nto different stages using `heroku_pipeline_coupling`, you can promote app slugs\nto the downstream stages.",
        "prefix": "heroku-resource-pipeline-coupling"
    },
    "heroku-resource-pipeline-x": {
        "body": "resource \"heroku_pipeline_\" \"$1\" {\n    # name - (Required) The name of the pipeline.\n    name = \"\"\n\n    # Exported Attributes\n    # \"id\" - The UUID of the pipeline.\n    # \"name\" - The name of the pipeline.\n}",
        "description": "Provides a [Heroku Pipeline](https://devcenter.heroku.com/articles/pipelines)\nresource. A pipeline is a group of Heroku apps that share the same codebase. Once a\npipeline is created, and apps are added to different stages using\n[`heroku_pipeline_coupling`](./pipeline_coupling.html), you can promote app\nslugs to the next stage.",
        "prefix": "heroku-resource-pipeline-x"
    },
    "heroku-resource-slug": {
        "body": "resource \"heroku_slug\" \"$1\" {\n    # process_types - (Required) Map of [processes to launch on Heroku Dynos](https://devcenter.heroku.com/articles/process-model)\n    process_types = \"\"\n\n    # app - (Required) The ID of the Heroku app\n    app = \"\"\n\n    # buildpack_provided_description - (Optional) Description of language or app framework, `\"Ruby/Rack\"`; displayed as the app's language in the Heroku Dashboard\n    buildpack_provided_description = \"\"\n\n    # checksum - (Optional) Hash of the slug for verifying its integrity, auto-generated from contents of `file_path` or `file_url`, `SHA256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855`\n    checksum = \"\"\n\n    # commit - (Optional) Identification of the code with your version control system (eg: SHA of the git HEAD), `\"60883d9e8947a57e04dc9124f25df004866a2051\"`\n    commit = \"\"\n\n    # commit_description - (Optional) Description of the provided commit\n    commit_description = \"\"\n\n    # file_path - (Optional) (Required unless `file_url` is set) Local path to a slug archive, `\"slugs/current.tgz\"`\n    file_path = \"\"\n\n    # file_url - (Optional) (Required unless `file_path` is set) **https** URL to a slug archive, `\"https://example.com/slugs/app-v1.tgz\"`\n    file_url = \"\"\n\n    # stack - (Optional) Name or ID of the [Heroku stack](https://devcenter.heroku.com/articles/stack)\n    stack = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the slug\n    # \"app\" - The ID or unique name of the Heroku app\n    # \"blob\" - Slug archive (compressed tar of executable code)\n    # \"method\" - HTTP method to upload the archive\n    # \"url\" - Pre-signed, expiring URL to upload the archive\n    # \"buildpack_provided_description\" - Description of language or app framework, \"\"Ruby/Rack\"\"\n    # \"checksum\" - Hash of the slug for verifying its integrity, auto-generated from contents of \"file_path\" or \"file_url\"\n    # \"commit\" - Identification of the code with your version control system (eg: SHA of the git HEAD), \"\"60883d9e8947a57e04dc9124f25df004866a2051\"\"\n    # \"commit_description\" - Description of the provided commit\n    # \"process_types\" - Map of [processes to launch on Heroku Dynos](https://devcenter.heroku.com/articles/process-model)\n    # \"size\" - Slug archive filesize in bytes\n    # \"stack\" - [Heroku stack](https://devcenter.heroku.com/articles/stack) name\n    # \"stack_id\" - [Heroku stack](https://devcenter.heroku.com/articles/stack) ID\n}",
        "description": "Provides a [Heroku Slug](https://devcenter.heroku.com/articles/platform-api-reference#slug)\nresource. This resource supports uploading a pre-generated archive file of executable code, making it possible to launch apps directly from a Terraform config. This resource does not itself generate the slug archive. [A guide to creating slug archives](https://devcenter.heroku.com/articles/platform-api-deploying-slugs) is available in the Heroku Dev Center.",
        "prefix": "heroku-resource-slug"
    },
    "heroku-resource-space": {
        "body": "resource \"heroku_space\" \"$1\" {\n    # organization - (Required) The name of the organization which will own the space.\n    organization = \"\"\n\n    # name - (Required) The name of the space.\n    name = \"\"\n\n    # region - (Optional) The region that the space should be created in.\n    region = \"\"\n\n    # shield - (Optional) Whether or not the private space should be [shielded](https://devcenter.heroku.com/articles/private-spaces#shield-private-spaces).\n    shield = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the space.\n    # \"name\" - The space's name.\n    # \"organization\" - The space's organization.\n    # \"region\" - The space's region.\n    # \"outbound_ips\" - The space's stable outbound [NAT IPs](https://devcenter.heroku.com/articles/platform-api-reference#space-network-address-translation).\n}",
        "description": "Provides a Heroku Space resource for running apps in isolated, highly available, secure app execution environments.",
        "prefix": "heroku-resource-space"
    },
    "heroku-resource-space-app-access": {
        "body": "resource \"heroku_space_app_access\" \"$1\" {\n    # permissions - (Required) The permissions to grant the team member for the space. Currently `create_apps` is the only supported permission. If not provided the member will have no permissions to the space. Members with admin role will always have `create_apps` permissions, which cannot be removed.\n    permissions = \"\"\n\n    # email - (Required) The email of the team member to set permissions for.\n    email = \"\"\n\n    # space - (Required) The name of the space.\n    space = \"\"\n\n    # Exported Attributes\n}",
        "description": "Provides a Heroku Space resource for managing app permissions for the entire space. Members with the admin role will always have full permissions to a Heroku Space, so using this resource on an admin will have no affect. The provided member must already exist in your Heroku organization. Currently the only supported permission is `create_apps`.",
        "prefix": "heroku-resource-space-app-access"
    },
    "heroku-resource-space-inbound-ruleset": {
        "body": "resource \"heroku_space_inbound_ruleset\" \"$1\" {\n    # source - (Required) A CIDR block source for the rule.\n    source = \"\"\n\n    # action - (Required) The action to apply this rule to. Must be one of `allow` or `deny`.\n    action = \"\"\n\n    # rule - (Required) At least one `rule` block. Rules are documented below.\n    rule = \"\"\n\n    # space - (Required) The name of the space.\n    space = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the inbound ruleset.\n}",
        "description": "Provides a resource for managing [inbound rulesets](https://devcenter.heroku.com/articles/platform-api-reference#inbound-ruleset) for Heroku Private Spaces.",
        "prefix": "heroku-resource-space-inbound-ruleset"
    },
    "heroku-resource-space-peering-connection-accepter": {
        "body": "resource \"heroku_space_peering_connection_accepter\" \"$1\" {\n    # vpc_peering_connection_id - (Required) The peering connection request ID.\n    vpc_peering_connection_id = \"\"\n\n    # space - (Required) The name of the space.\n    space = \"\"\n\n    # Exported Attributes\n    # \"status\" - The status of the peering connection request.\n    # \"type\" - The type of the peering connection.\n}",
        "description": "Provides a resource for accepting VPC peering requests to Heroku Private Spaces.",
        "prefix": "heroku-resource-space-peering-connection-accepter"
    },
    "heroku-resource-team-collaborator": {
        "body": "resource \"heroku_team_collaborator\" \"$1\" {\n    # permissions - (Required) List of permissions that will be granted to the team collaborator. The order in which\n    permissions = \"\"\n\n    # email - (Required) Email address of the team collaborator\n    email = \"\"\n\n    # app - (Required) The name of the team app that the team collaborator will be added to.\n    app = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the team collaborator\n}",
        "description": "Provides a [Heroku Team Collaborator](https://devcenter.heroku.com/articles/platform-api-reference#team-app-collaborator)\nresource. A team collaborator represents an account that has been given access to a team app on Heroku. ~> **NOTE:** Please only use this resource if you have team/organization apps",
        "prefix": "heroku-resource-team-collaborator"
    },
    "heroku-resource-team-member": {
        "body": "resource \"heroku_team_member\" \"$1\" {\n    # role - (Required) The role to assign the team member. See [the API docs](https://devcenter.heroku.com/articles/platform-api-reference#team-member) for available options.\n    role = \"\"\n\n    # email - (Required) Email address of the team collaborator\n    email = \"\"\n\n    # team - (Required) The name of the Heroku team that the team member will be added to.\n    team = \"\"\n\n    # Exported Attributes\n}",
        "description": "Provides a [Heroku Team Collaborator](https://devcenter.heroku.com/articles/platform-api-reference#team-member) resource. ~> **NOTE:** Please only use this resource if you have team/organization apps",
        "prefix": "heroku-resource-team-member"
    },
    "heroku-resource-vpn-connection-x": {
        "body": "resource \"heroku_space_vpn_connection\" \"$1\" {\n    # routable_cidrs - (Required) A list of IPv4 CIDR blocks used by the network where the VPN connection will be established.\n    routable_cidrs = \"\"\n\n    # public_ip - (Required) The public IP address of the VPN endpoint on the network where the VPN connection will be established.\n    public_ip = \"\"\n\n    # space - (Required) The name of the Heroku Private Space where the VPN connection will be established.\n    space = \"\"\n\n    # name - (Required) The name of the VPN connection.\n    name = \"\"\n\n    # Exported Attributes\n    # \"space_cidr_block\" - The CIDR block for the Heroku Private Space. The network where the VPN will be established should be configured to route traffic destined for this CIDR block over the VPN link.\n    # \"ike_version\" - The IKE version used to setup the IPsec tunnel.\n    # \"tunnels\" - Details about each VPN tunnel endpoint.\n    # \"ip\" - The public IP address of the tunnel.\n    # \"pre_shared_key\" - The pre-shared IPSec secret for the tunnel.\n}",
        "description": "Provides a resource for creating a VPN connection between a network and a Heroku Private Space. For more information, see [Private Spaces VPN Connection](https://devcenter.heroku.com/articles/private-space-vpn-connection?preview=1) in the Heroku DevCenter.",
        "prefix": "heroku-resource-vpn-connection-x"
    }
}