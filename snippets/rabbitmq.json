{
    "rabbitmq-resource-binding": {
        "body": "resource \"rabbitmq_binding\" \"$1\" {\n    # destination_type - (Required) The type of destination (queue or exchange).\n    destination_type = \"\"\n\n    # destination - (Required) The destination queue or exchange.\n    destination = \"\"\n\n    # vhost - (Required) The vhost to create the resource in.\n    vhost = \"\"\n\n    # source - (Required) The source exchange.\n    source = \"\"\n\n    # routing_key - (Optional) A routing key for the binding.\n    routing_key = \"\"\n\n    # arguments - (Optional) Additional key/value arguments for the binding.\n    arguments = \"\"\n\n    # Exported Attributes\n    # \"properties_key\" - A unique key to refer to the binding.\n    # \"arguments\" - (Optional) Additional key/value arguments for the binding.\n}",
        "description": "The ``rabbitmq_binding`` resource creates and manages a binding relationship\nbetween a queue an exchange.",
        "prefix": "rabbitmq-resource-binding"
    },
    "rabbitmq-resource-exchange": {
        "body": "resource \"rabbitmq_exchange\" \"$1\" {\n    # type - (Required) The type of exchange.\n    type = \"\"\n\n    # settings - (Required) The settings of the exchange. The structure is described below.\n    settings = \"\"\n\n    # vhost - (Required) The vhost to create the resource in.\n    vhost = \"\"\n\n    # name - (Required) The name of the exchange.\n    name = \"\"\n\n    # durable - (Optional) Whether the exchange survives server restarts. Defaults to `false`.\n    durable = \"\"\n\n    # auto_delete - (Optional) Whether the exchange will self-delete when all queues have finished using it.\n    auto_delete = \"\"\n\n    # arguments - (Optional) Additional key/value settings for the exchange.\n    arguments = \"\"\n\n    # Exported Attributes\n}",
        "description": "The ``rabbitmq_exchange`` resource creates and manages an exchange.",
        "prefix": "rabbitmq-resource-exchange"
    },
    "rabbitmq-resource-permissions": {
        "body": "resource \"rabbitmq_permissions\" \"$1\" {\n    # permissions - (Required) The settings of the permissions. The structure is described below.\n    permissions = \"\"\n\n    # read - (Required) The \"read\" ACL.\n    read = \"\"\n\n    # permissions - (Required) The settings of the permissions. The structure is described below.\n    permissions = \"\"\n\n    # write - (Required) The \"write\" ACL.\n    write = \"\"\n\n    # permissions - (Required) The settings of the permissions. The structure is described below.\n    permissions = \"\"\n\n    # configure - (Required) The \"configure\" ACL.\n    configure = \"\"\n\n    # permissions - (Required) The settings of the permissions. The structure is described below.\n    permissions = \"\"\n\n    # vhost - (Required) The vhost to create the resource in.\n    vhost = \"\"\n\n    # user - (Required) The user to apply the permissions to.\n    user = \"\"\n\n    # Exported Attributes\n}",
        "description": "The ``rabbitmq_permissions`` resource creates and manages a user's set of\npermissions.",
        "prefix": "rabbitmq-resource-permissions"
    },
    "rabbitmq-resource-policy": {
        "body": "resource \"rabbitmq_policy\" \"$1\" {\n    # policy - (Required) The settings of the policy. The structure is described below.\n    policy = \"\"\n\n    # definition - (Required) Key/value pairs of the policy definition. See the\n    definition = \"\"\n\n    # policy - (Required) The settings of the policy. The structure is described below.\n    policy = \"\"\n\n    # apply_to - (Required) Can either be \"exchange\", \"queues\", or \"all\".\n    apply_to = \"\"\n\n    # policy - (Required) The settings of the policy. The structure is described below.\n    policy = \"\"\n\n    # priority - (Required) The policy with the greater priority is applied first.\n    priority = \"\"\n\n    # policy - (Required) The settings of the policy. The structure is described below.\n    policy = \"\"\n\n    # pattern - (Required) A pattern to match an exchange or queue name.\n    pattern = \"\"\n\n    # policy - (Required) The settings of the policy. The structure is described below.\n    policy = \"\"\n\n    # vhost - (Required) The vhost to create the resource in.\n    vhost = \"\"\n\n    # name - (Required) The name of the policy.\n    name = \"\"\n\n    # Exported Attributes\n}",
        "description": "The ``rabbitmq_policy`` resource creates and manages policies for exchanges\nand queues.",
        "prefix": "rabbitmq-resource-policy"
    },
    "rabbitmq-resource-queue": {
        "body": "resource \"rabbitmq_queue\" \"$1\" {\n    # settings - (Required) The settings of the queue. The structure is described below.\n    settings = \"\"\n\n    # vhost - (Required) The vhost to create the resource in.\n    vhost = \"\"\n\n    # name - (Required) The name of the queue.\n    name = \"\"\n\n    # durable - (Optional) Whether the queue survives server restarts. Defaults to `false`.\n    durable = \"\"\n\n    # auto_delete - (Optional) Whether the queue will self-delete when all consumers have unsubscribed.\n    auto_delete = \"\"\n\n    # arguments - (Optional) Additional key/value settings for the queue. All values will be sent to RabbitMQ as a string. If you require non-string values, use `arguments_json`.\n    arguments = \"\"\n\n    # arguments_json - (Optional) A nested JSON string which contains additional settings for the queue. This is useful for when the arguments contain non-string values.\n    arguments_json = \"\"\n\n    # Exported Attributes\n}",
        "description": "The ``rabbitmq_queue`` resource creates and manages a queue.",
        "prefix": "rabbitmq-resource-queue"
    },
    "rabbitmq-resource-user": {
        "body": "resource \"rabbitmq_user\" \"$1\" {\n    # password - (Required) The password of the user. The value of this argument is plain-text so make sure to secure where this is defined.\n    password = \"\"\n\n    # name - (Required) The name of the user.\n    name = \"\"\n\n    # tags - (Optional) Which permission model to apply to the user. Valid options are: management, policymaker, monitoring, and administrator.\n    tags = \"\"\n\n    # Exported Attributes\n}",
        "description": "The ``rabbitmq_user`` resource creates and manages a user. ~> **Note:** All arguments including username and password will be stored in the raw state as plain-text.\n[Read more about sensitive data in state](/docs/state/sensitive-data.html).",
        "prefix": "rabbitmq-resource-user"
    },
    "rabbitmq-resource-vhost": {
        "body": "resource \"rabbitmq_vhost\" \"$1\" {\n    # name - (Required) The name of the vhost.\n    name = \"\"\n\n    # Exported Attributes\n}",
        "description": "The ``rabbitmq_vhost`` resource creates and manages a vhost.",
        "prefix": "rabbitmq-resource-vhost"
    }
}