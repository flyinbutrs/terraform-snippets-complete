{
    "vault-auth-backend": {
        "body": "resource \"resource\" \"$1\" {\n    # type - (Required) The name of the policy\n    type = \"\"\n\n    # path - (Optional) The path to mount the auth backend. This defaults to the name.\n    path = \"\"\n\n    # description - (Optional) A description of the auth backend\n    description = \"\"\n\n    # Exported Attributes\n}",
        "description": "",
        "prefix": "vault-auth-backend"
    },
    "vault-datasource-generic-secret": {
        "body": "data \"source\" \"$1\" {\n    # path - (Required) The full logical path from which to request data.\n    path = \"\"\n\n    # Exported Attributes\n    # \"data_json\" - A string containing the full data payload retrieved from Vault, serialized in JSON format.\n    # \"data\" - A mapping whose keys are the top-level data keys returned from Vault and whose values are the corresponding values. This map can only represent string data, so any non-string values returned from Vault are serialized as JSON.\n    # \"lease_id\" - The lease identifier assigned by Vault, if any.\n    # \"lease_duration\" - The duration of the secret lease, in seconds relative to the time the data was requested. Once this time has passed any plan generated with this data may fail to apply.\n    # \"lease_start_time\" - As a convenience, this records the current time on the computer where Terraform is running when the data is requested. This can be used to approximate the absolute time represented by \"lease_duration\", though users must allow for any clock drift and response latency relative to to the Vault server.\n    # \"lease_renewable\" - \"true\" if the lease can be renewed using Vault's \"sys/renew/{lease-id}\" endpoint. Terraform does not currently support lease renewal, and so it will request a new lease each time this data source is refreshed.\n}",
        "description": "Reads arbitrary data from a given path in Vault. This resource is primarily intended to be used with\n[Vault's \"generic\" secret backend](https://www.vaultproject.io/docs/secrets/generic/index.html),\nbut it is also compatible with any other Vault endpoint that supports\nthe `vault read` command. ~> **Important** All data retrieved from Vault will be\nwritten in cleartext to state file generated by Terraform, will appear in\nthe console output when Terraform runs, and may be included in plan files\nif secrets are interpolated into any resource attributes.\nProtect these artifacts accordingly. See\n[the main provider documentation](../index.html)\nfor more details.",
        "prefix": "vault-datasource-generic-secret"
    },
    "vault-resource-generic-secret": {
        "body": "resource \"resource\" \"$1\" {\n    # data_json - (Required) String containing a JSON-encoded object that will be written as the secret data at the given path.\n    data_json = \"\"\n\n    # path - (Required) The full logical path at which to write the given data. To write data into the \"generic\" secret backend mounted in Vault by default, this should be prefixed with `secret/`. Writing to other backends with this resource is possible; consult each backend's documentation to see which endpoints support the `PUT` and `DELETE` methods.\n    path = \"\"\n\n    # allow_read - (Optional) True/false. Set this to true if your vault authentication is able to read the data, this allows the resource to be compared and updated. Defaults to false.\n    allow_read = \"\"\n\n    # Exported Attributes\n}",
        "description": "Writes and manages arbitrary data at a given path in Vault. This resource is primarily intended to be used with\n[Vault's \"generic\" secret backend](https://www.vaultproject.io/docs/secrets/generic/index.html),\nbut it is also compatible with any other Vault endpoint that supports\nthe `vault write` command to create and the `vault delete` command to\ndelete. ~> **Important** All data provided in the resource configuration will be\nwritten in cleartext to state and plan files generated by Terraform, and\nwill appear in the console output when Terraform runs. Protect these\nartifacts accordingly. See\n[the main provider documentation](../index.html)\nfor more details.",
        "prefix": "vault-resource-generic-secret"
    },
    "vault-resource-mount": {
        "body": "resource \"resource\" \"$1\" {\n    # type - (Required) Type of the backend, such as \"aws\"\n    type = \"\"\n\n    # path - (Required) Where the secret backend will be mounted\n    path = \"\"\n\n    # description - (Optional) Human-friendly description of the mount\n    description = \"\"\n\n    # default_lease_ttl_seconds - (Optional) Default lease duration for tokens and secrets in seconds\n    default_lease_ttl_seconds = \"\"\n\n    # max_lease_ttl_seconds - (Optional) Maximum possible lease duration for tokens and secrets in seconds\n    max_lease_ttl_seconds = \"\"\n\n    # Exported Attributes\n}",
        "description": "",
        "prefix": "vault-resource-mount"
    },
    "vault-resource-policy": {
        "body": "resource \"resource\" \"$1\" {\n    # policy - (Required) String containing a Vault policy\n    policy = \"\"\n\n    # name - (Required) The name of the policy\n    name = \"\"\n\n    # Exported Attributes\n}",
        "description": "",
        "prefix": "vault-resource-policy"
    }
}