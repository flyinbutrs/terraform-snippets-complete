{
    "vsphere-data-source-cluster-datastore": {
        "body": "data \"vsphere_datastore_cluster\" \"$1\" {\n    # name - (Required) The name or absolute path to the datastore cluster.\n    name = \"\"\n\n    # datacenter_id - (Optional) The [managed object reference\n    datacenter_id = \"\"\n\n    # vsphere_datacenter - (Optional) `vsphere_datacenter` data source.\n    vsphere_datacenter = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_datastore_cluster` data source can be used to discover the ID of a\ndatastore cluster in vSphere. This is useful to fetch the ID of a datastore\ncluster that you want to use to assign datastores to using the\n[`vsphere_nas_datastore`][docs-nas-datastore-resource] or\n[`vsphere_vmfs_datastore`][docs-vmfs-datastore-resource] resources, or create\nvirtual machines in using the\n[`vsphere_virtual_machine`][docs-virtual-machine-resource] resource. ",
        "prefix": "vsphere-data-source-cluster-datastore"
    },
    "vsphere-data-source-compute-cluster": {
        "body": "data \"vsphere_compute_cluster\" \"$1\" {\n    # name - (Required) The name or absolute path to the cluster.\n    name = \"\"\n\n    # datacenter_id - (Optional) The [managed object reference\n    datacenter_id = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_compute_cluster` data source can be used to discover the ID of a\ncluster in vSphere. This is useful to fetch the ID of a cluster that you want\nto use for virtual machine placement via the\n[`vsphere_virtual_machine`][docs-virtual-machine-resource] resource, allowing\nyou to specify the cluster's root resource pool directly versus using the alias\navailable through the [`vsphere_resource_pool`][docs-resource-pool-data-source]\ndata source. -> You may also wish to see the\n[`vsphere_compute_cluster`][docs-compute-cluster-resource] resource for further\ndetails about clusters or how to work with them in Terraform.",
        "prefix": "vsphere-data-source-compute-cluster"
    },
    "vsphere-data-source-custom-attriubte": {
        "body": "data \"vsphere_custom_attribute\" \"$1\" {\n    # name - (Required) The name of the custom attribute.\n    name = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_custom_attribute` data source can be used to reference custom \nattributes that are not managed by Terraform. Its attributes are exactly the \nsame as the [`vsphere_custom_attribute` resource][resource-custom-attribute], \nand, like importing, the data source takes a name to search on. The `id` and \nother attributes are then populated with the data found by the search. ~> **NOTE:** Custom attributes are unsupported on direct ESXi connections \nand require vCenter.",
        "prefix": "vsphere-data-source-custom-attriubte"
    },
    "vsphere-data-source-datacenter": {
        "body": "data \"vsphere_datacenter\" \"$1\" {\n    # name - (Optional) The name of the datacenter. This can be a name or path.\n    name = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_datacenter` data source can be used to discover the ID of a\nvSphere datacenter. This can then be used with resources or data sources that\nrequire a datacenter, such as the [`vsphere_host`][data-source-vsphere-host]\ndata source.",
        "prefix": "vsphere-data-source-datacenter"
    },
    "vsphere-data-source-datastore": {
        "body": "data \"vsphere_datastore\" \"$1\" {\n    # name - (Required) The name of the datastore. This can be a name or path.\n    name = \"\"\n\n    # datacenter_id - (Optional) The [managed object reference\n    datacenter_id = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_datastore` data source can be used to discover the ID of a\ndatastore in vSphere. This is useful to fetch the ID of a datastore that you\nwant to use to create virtual machines in using the\n[`vsphere_virtual_machine`][docs-virtual-machine-resource] resource. ",
        "prefix": "vsphere-data-source-datastore"
    },
    "vsphere-data-source-distributed-virtual-switch": {
        "body": "data \"vsphere_distributed_virtual_switch\" \"$1\" {\n    # name - (Required) The name of the distributed virtual switch. This can be a\n    name = \"\"\n\n    # datacenter_id - (Optional) The [managed object reference\n    datacenter_id = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_distributed_virtual_switch` data source can be used to discover\nthe ID and uplink data of a of a vSphere distributed virtual switch (DVS). This\ncan then be used with resources or data sources that require a DVS, such as the\n[`vsphere_distributed_port_group`][distributed-port-group] resource, for which\nan example is shown below. ~> **NOTE:** This data source requires vCenter and is not available on direct\nESXi connections.",
        "prefix": "vsphere-data-source-distributed-virtual-switch"
    },
    "vsphere-data-source-host": {
        "body": "data \"vsphere_host\" \"$1\" {\n    # datacenter_id - (Required) The [managed object reference\n    datacenter_id = \"\"\n\n    # name - (Optional) The name of the host. This can be a name or path. Can be\n    name = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_host` data source can be used to discover the ID of a vSphere\nhost. This can then be used with resources or data sources that require a host\nmanaged object reference ID.",
        "prefix": "vsphere-data-source-host"
    },
    "vsphere-data-source-network": {
        "body": "data \"vsphere_network\" \"$1\" {\n    # name - (Required) The name of the network. This can be a name or path.\n    name = \"\"\n\n    # datacenter_id - (Optional) The [managed object reference\n    datacenter_id = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_network` data source can be used to discover the ID of a network\nin vSphere. This can be any network that can be used as the backing for a\nnetwork interface for `vsphere_virtual_machine` or any other vSphere resource\nthat requires a network. This includes standard (host-based) port groups, DVS\nport groups, or opaque networks such as those managed by NSX.",
        "prefix": "vsphere-data-source-network"
    },
    "vsphere-data-source-resource-pool": {
        "body": "data \"vsphere_resource_pool\" \"$1\" {\n    # name - (Optional) The name of the resource pool. This can be a name or\n    name = \"\"\n\n    # datacenter_id - (Optional) The [managed object reference\n    datacenter_id = \"\"\n\n    # vsphere_datacenter - (Optional) `vsphere_datacenter` data source.\n    vsphere_datacenter = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_resource_pool` data source can be used to discover the ID of a\nresource pool in vSphere. This is useful to fetch the ID of a resource pool\nthat you want to use to create virtual machines in using the\n[`vsphere_virtual_machine`][docs-virtual-machine-resource] resource. ",
        "prefix": "vsphere-data-source-resource-pool"
    },
    "vsphere-data-source-tag-category": {
        "body": "data \"vsphere_tag_category\" \"$1\" {\n    # name - (Required) The name of the tag category.\n    name = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_tag_category` data source can be used to reference tag categories\nthat are not managed by Terraform. Its attributes are exactly the same as the\n[`vsphere_tag_category` resource][resource-tag-category], and, like importing,\nthe data source takes a name to search on. The `id` and other attributes are\nthen populated with the data found by the search. ~> **NOTE:** Tagging support is unsupported on direct ESXi connections and\nrequires vCenter 6.0 or higher.",
        "prefix": "vsphere-data-source-tag-category"
    },
    "vsphere-data-source-tag-data-source": {
        "body": "data \"vsphere_tag\" \"$1\" {\n    # category_id - (Required) The ID of the tag category the tag is located in.\n    category_id = \"\"\n\n    # name - (Required) The name of the tag.\n    name = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_tag` data source can be used to reference tags that are not\nmanaged by Terraform. Its attributes are exactly the same as the [`vsphere_tag`\nresource][resource-tag], and, like importing, the data source takes a name and\ncategory to search on. The `id` and other attributes are then populated with\nthe data found by the search. ~> **NOTE:** Tagging support is unsupported on direct ESXi connections and\nrequires vCenter 6.0 or higher.",
        "prefix": "vsphere-data-source-tag-data-source"
    },
    "vsphere-data-source-virtual-machine": {
        "body": "data \"vsphere_virtual_machine\" \"$1\" {\n    # name - (Required) The name of the virtual machine. This can be a name or\n    name = \"\"\n\n    # datacenter_id - (Optional) The [managed object reference\n    datacenter_id = \"\"\n\n    # vsphere_datacenter - (Optional) `vsphere_datacenter` data source.\n    vsphere_datacenter = \"\"\n\n    # scsi_controller_scan_count - (Optional) The number of SCSI controllers to\n    scsi_controller_scan_count = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_virtual_machine` data source can be used to find the UUID of an\nexisting virtual machine or template. Its most relevant purpose is for finding\nthe UUID of a template to be used as the source for cloning into a new\n[`vsphere_virtual_machine`][docs-virtual-machine-resource] resource. It also\nreads the guest ID so that can be supplied as well.",
        "prefix": "vsphere-data-source-virtual-machine"
    },
    "vsphere-data-source-vmfs-disks": {
        "body": "data \"vsphere_vmfs_disks\" \"$1\" {\n    # host_system_id - (Required) The [managed object ID][docs-about-morefs] of\n    host_system_id = \"\"\n\n    # rescan - (Optional) Whether or not to rescan storage adapters before\n    rescan = \"\"\n\n    # filter - (Optional) A regular expression to filter the disks against. Only\n    filter = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_vmfs_disks` data source can be used to discover the storage\ndevices available on an ESXi host. This data source can be combined with the\n[`vsphere_vmfs_datastore`][data-source-vmfs-datastore] resource to create VMFS\ndatastores based off a set of discovered disks.",
        "prefix": "vsphere-data-source-vmfs-disks"
    },
    "vsphere-resource-admin-license": {
        "body": "resource \"vsphere_license\" \"$1\" {\n    # license_key - (Required) The license key to add.\n    license_key = \"\"\n\n    # labels - (Optional) A map of key/value pairs to be attached as labels (tags) to the license key.\n    labels = \"\"\n\n    # Exported Attributes\n    # \"edition_key\" - The product edition of the license key.\n    # \"total\" - Total number of units (example: CPUs) contained in the license.\n    # \"used\" - The number of units (example: CPUs) assigned to this license.\n    # \"name\" - The display name for the license.\n}",
        "description": "Provides a VMware vSphere license resource. This can be used to add and remove license keys.",
        "prefix": "vsphere-resource-admin-license"
    },
    "vsphere-resource-compute-cluster-host-group": {
        "body": "resource \"vsphere_compute_cluster_host_group\" \"$1\" {\n    # compute_cluster_id - (Required) The [managed object reference\n    compute_cluster_id = \"\"\n\n    # name - (Required) The name of the host group. This must be unique in the\n    name = \"\"\n\n    # host_system_ids - (Optional) The [managed object IDs][docs-about-morefs] of\n    host_system_ids = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_compute_cluster_host_group` resource can be used to manage groups\nof hosts in a cluster, either created by the\n[`vsphere_compute_cluster`][tf-vsphere-cluster-resource] resource or looked up\nby the [`vsphere_compute_cluster`][tf-vsphere-cluster-data-source] data source. This resource mainly serves as an input to the\n[`vsphere_compute_cluster_vm_host_rule`][tf-vsphere-cluster-vm-host-rule-resource]\nresource - see the documentation for that resource for further details on how\nto use host groups. ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi\nconnections. ~> **NOTE:** vSphere DRS requires a vSphere Enterprise Plus license.",
        "prefix": "vsphere-resource-compute-cluster-host-group"
    },
    "vsphere-resource-compute-cluster-vm-affinity-rule": {
        "body": "resource \"vsphere_compute_cluster_vm_affinity_rule\" \"$1\" {\n    # virtual_machine_ids - (Required) The UUIDs of the virtual machines to run\n    virtual_machine_ids = \"\"\n\n    # name - (Required) The name of the rule. This must be unique in the cluster.\n    name = \"\"\n\n    # compute_cluster_id - (Required) The [managed object reference\n    compute_cluster_id = \"\"\n\n    # enabled - (Optional) Enable this rule in the cluster. Default: `true`.\n    enabled = \"\"\n\n    # mandatory - (Optional) When this value is `true`, prevents any virtual\n    mandatory = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_compute_cluster_vm_affinity_rule` resource can be used to manage\nVM affinity rules in a cluster, either created by the\n[`vsphere_compute_cluster`][tf-vsphere-cluster-resource] resource or looked up\nby the [`vsphere_compute_cluster`][tf-vsphere-cluster-data-source] data source. This rule can be used to tell a set to virtual machines to run together on a\nsingle host within a cluster. When configured, DRS will make a best effort to\nensure that the virtual machines run on the same host, or prevent any operation\nthat would keep that from happening, depending on the value of the\n[`mandatory`](#mandatory) flag. -> Keep in mind that this rule can only be used to tell VMs to run together on\na _non-specific_ host - it can't be used to pin VMs to a host. For that, see\nthe\n[`vsphere_compute_cluster_vm_host_rule`][tf-vsphere-cluster-vm-host-rule-resource]\nresource. ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi\nconnections. ~> **NOTE:** vSphere DRS requires a vSphere Enterprise Plus license.",
        "prefix": "vsphere-resource-compute-cluster-vm-affinity-rule"
    },
    "vsphere-resource-compute-cluster-vm-anti-affinity-rule": {
        "body": "resource \"vsphere_compute_cluster_vm_anti_affinity_rule\" \"$1\" {\n    # virtual_machine_ids - (Required) The UUIDs of the virtual machines to run\n    virtual_machine_ids = \"\"\n\n    # name - (Required) The name of the rule. This must be unique in the cluster.\n    name = \"\"\n\n    # compute_cluster_id - (Required) The [managed object reference\n    compute_cluster_id = \"\"\n\n    # enabled - (Optional) Enable this rule in the cluster. Default: `true`.\n    enabled = \"\"\n\n    # mandatory - (Optional) When this value is `true`, prevents any virtual\n    mandatory = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_compute_cluster_vm_anti_affinity_rule` resource can be used to\nmanage VM anti-affinity rules in a cluster, either created by the\n[`vsphere_compute_cluster`][tf-vsphere-cluster-resource] resource or looked up\nby the [`vsphere_compute_cluster`][tf-vsphere-cluster-data-source] data source. This rule can be used to tell a set to virtual machines to run on different\nhosts within a cluster, useful for preventing single points of failure in\napplication cluster scenarios. When configured, DRS will make a best effort to\nensure that the virtual machines run on different hosts, or prevent any\noperation that would keep that from happening, depending on the value of the\n[`mandatory`](#mandatory) flag. -> Keep in mind that this rule can only be used to tell VMs to run separately\non _non-specific_ hosts - specific hosts cannot be specified with this rule.\nFor that, see the\n[`vsphere_compute_cluster_vm_host_rule`][tf-vsphere-cluster-vm-host-rule-resource]\nresource. ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi\nconnections. ~> **NOTE:** vSphere DRS requires a vSphere Enterprise Plus license.",
        "prefix": "vsphere-resource-compute-cluster-vm-anti-affinity-rule"
    },
    "vsphere-resource-compute-cluster-vm-dependency-rule": {
        "body": "resource \"vsphere_compute_cluster_vm_dependency_rule\" \"$1\" {\n    # vm_group_name - (Required) The name of the VM group that is the subject of\n    vm_group_name = \"\"\n\n    # dependency_vm_group_name - (Required) The name of the VM group that this\n    dependency_vm_group_name = \"\"\n\n    # name - (Required) The name of the rule. This must be unique in the\n    name = \"\"\n\n    # compute_cluster_id - (Required) The [managed object reference\n    compute_cluster_id = \"\"\n\n    # enabled - (Optional) Enable this rule in the cluster. Default: `true`.\n    enabled = \"\"\n\n    # mandatory - (Optional) When this value is `true`, prevents any virtual\n    mandatory = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_compute_cluster_vm_dependency_rule` resource can be used to manage\nVM dependency rules in a cluster, either created by the\n[`vsphere_compute_cluster`][tf-vsphere-cluster-resource] resource or looked up\nby the [`vsphere_compute_cluster`][tf-vsphere-cluster-data-source] data source. A virtual machine dependency rule applies to vSphere HA, and allows\nuser-defined startup orders for virtual machines in the case of host failure.\nVirtual machines are supplied via groups, which can be managed via the\n[`vsphere_compute_cluster_vm_group`][tf-vsphere-cluster-vm-group-resource]\nresource. ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi\nconnections.",
        "prefix": "vsphere-resource-compute-cluster-vm-dependency-rule"
    },
    "vsphere-resource-compute-cluster-vm-group": {
        "body": "resource \"vsphere_compute_cluster_vm_group\" \"$1\" {\n    # virtual_machine_ids - (Required) The UUIDs of the virtual machines in this\n    virtual_machine_ids = \"\"\n\n    # compute_cluster_id - (Required) The [managed object reference\n    compute_cluster_id = \"\"\n\n    # name - (Required) The name of the VM group. This must be unique in the\n    name = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_compute_cluster_vm_group` resource can be used to manage groups of\nvirtual machines in a cluster, either created by the\n[`vsphere_compute_cluster`][tf-vsphere-cluster-resource] resource or looked up\nby the [`vsphere_compute_cluster`][tf-vsphere-cluster-data-source] data source. This resource mainly serves as an input to the\n[`vsphere_compute_cluster_vm_dependency_rule`][tf-vsphere-cluster-vm-dependency-rule-resource]\nand\n[`vsphere_compute_cluster_vm_host_rule`][tf-vsphere-cluster-vm-host-rule-resource]\nresources. See the individual resource documentation pages for more information. ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi\nconnections. ~> **NOTE:** vSphere DRS requires a vSphere Enterprise Plus license.",
        "prefix": "vsphere-resource-compute-cluster-vm-group"
    },
    "vsphere-resource-compute-cluster-vm-host-rule": {
        "body": "resource \"vsphere_compute_cluster_vm_host_rule\" \"$1\" {\n    # vm_group_name - (Required) The name of the virtual machine group to use\n    vm_group_name = \"\"\n\n    # name - (Required) The name of the rule. This must be unique in the\n    name = \"\"\n\n    # compute_cluster_id - (Required) The [managed object reference\n    compute_cluster_id = \"\"\n\n    # affinity_host_group_name - (Optional) When this field is used, the virtual\n    affinity_host_group_name = \"\"\n\n    # anti_affinity_host_group_name - (Optional) When this field is used, the\n    anti_affinity_host_group_name = \"\"\n\n    # enabled - (Optional) Enable this rule in the cluster. Default: `true`.\n    enabled = \"\"\n\n    # mandatory - (Optional) When this value is `true`, prevents any virtual\n    mandatory = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_compute_cluster_vm_host_rule` resource can be used to manage\nVM-to-host rules in a cluster, either created by the\n[`vsphere_compute_cluster`][tf-vsphere-cluster-resource] resource or looked up\nby the [`vsphere_compute_cluster`][tf-vsphere-cluster-data-source] data source. This resource can create both _affinity rules_, where virtual machines run on\nspecified hosts, or _anti-affinity_ rules, where virtual machines run on hosts\noutside of the ones specified in the rule. Virtual machines and hosts are\nsupplied via groups, which can be managed via the\n[`vsphere_compute_cluster_vm_group`][tf-vsphere-cluster-vm-group-resource] and\n[`vsphere_compute_cluster_host_group`][tf-vsphere-cluster-host-group-resource]\nresources. ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi\nconnections. ~> **NOTE:** vSphere DRS requires a vSphere Enterprise Plus license.",
        "prefix": "vsphere-resource-compute-cluster-vm-host-rule"
    },
    "vsphere-resource-compute-compute-cluster": {
        "body": "resource \"vsphere_compute_cluster\" \"$1\" {\n    # datacenter_id - (Required) The [managed object ID][docs-about-morefs] of\n    datacenter_id = \"\"\n\n    # name - (Required) The name of the cluster.\n    name = \"\"\n\n    # folder - (Optional) The relative path to a folder to put this cluster in.\n    folder = \"\"\n\n    # tags - (Optional) The IDs of any tags to attach to this resource. See\n    tags = \"\"\n\n    # custom_attributes - (Optional) A map of custom attribute ids to attribute\n    custom_attributes = \"\"\n\n    # Exported Attributes\n}",
        "description": "-> **A note on the naming of this resource:** VMware refers to clusters of\nhosts in the UI and documentation as _clusters_, _HA clusters_, or _DRS\nclusters_. All of these refer to the same kind of resource (with the latter two\nreferring to specific features of clustering). In Terraform, we use\n`vsphere_compute_cluster` to differentiate host clusters from _datastore\nclusters_, which are clusters of datastores that can be used to distribute load\nand ensure fault tolerance via distribution of virtual machines. Datastore\nclusters can also be managed through Terraform, via the\n[`vsphere_datastore_cluster` resource][docs-r-vsphere-datastore-cluster]. The `vsphere_compute_cluster` resource can be used to create and manage\nclusters of hosts allowing for resource control of compute resources, load\nbalancing through DRS, and high availability through vSphere HA. For more information on vSphere clusters and DRS, see [this\npage][ref-vsphere-drs-clusters]. For more information on vSphere HA, see [this\npage][ref-vsphere-ha-clusters]. ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi\nconnections. ~> **NOTE:** vSphere DRS requires a vSphere Enterprise Plus license.",
        "prefix": "vsphere-resource-compute-compute-cluster"
    },
    "vsphere-resource-compute-dpm-host-override": {
        "body": "resource \"vsphere_dpm_host_override\" \"$1\" {\n    # compute_cluster_id - (Required) The [managed object reference\n    compute_cluster_id = \"\"\n\n    # host_system_ids - (Optional) The [managed object ID][docs-about-morefs] of\n    host_system_ids = \"\"\n\n    # dpm_enabled - (Optional) Enable DPM support for this host. Default:\n    dpm_enabled = \"\"\n\n    # false - (Optional) `false`. \n    false = \"\"\n\n    # dpm_automation_level - (Optional) The automation level for host power\n    dpm_automation_level = \"\"\n\n    # manual - (Optional) `manual`.\n    manual = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_dpm_host_override` resource can be used to add a DPM override to a\ncluster for a particular host. This allows you to control the power management\nsettings for individual hosts in the cluster while leaving any unspecified ones\nat the default power management settings. For more information on DPM within vSphere clusters, see [this\npage][ref-vsphere-cluster-dpm]. ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi\nconnections. ~> **NOTE:** vSphere DRS requires a vSphere Enterprise Plus license.",
        "prefix": "vsphere-resource-compute-dpm-host-override"
    },
    "vsphere-resource-compute-drs-vm-override": {
        "body": "resource \"vsphere_drs_vm_override\" \"$1\" {\n    # virtual_machine_id - (Required) The UUID of the virtual machine to create\n    virtual_machine_id = \"\"\n\n    # compute_cluster_id - (Required) The [managed object reference\n    compute_cluster_id = \"\"\n\n    # drs_enabled - (Optional) Overrides the default DRS setting for this virtual\n    drs_enabled = \"\"\n\n    # drs_automation_level - (Optional) Overrides the automation level for this virtual\n    drs_automation_level = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_drs_vm_override` resource can be used to add a DRS override to a\ncluster for a specific virtual machine. With this resource, one can enable or\ndisable DRS and control the automation level for a single virtual machine\nwithout affecting the rest of the cluster. For more information on vSphere clusters and DRS, see [this\npage][ref-vsphere-drs-clusters]. ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi\nconnections. ~> **NOTE:** vSphere DRS requires a vSphere Enterprise Plus license.",
        "prefix": "vsphere-resource-compute-drs-vm-override"
    },
    "vsphere-resource-compute-ha-vm-override": {
        "body": "resource \"vsphere_ha_vm_override\" \"$1\" {\n    # Exported Attributes\n}",
        "description": "The `vsphere_ha_vm_override` resource can be used to add an override for\nvSphere HA settings on a cluster for a specific virtual machine. With this\nresource, one can control specific HA settings so that they are different than\nthe cluster default, accommodating the needs of that specific virtual machine,\nwhile not affecting the rest of the cluster. For more information on vSphere HA, see [this page][ref-vsphere-ha-clusters]. ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi\nconnections.",
        "prefix": "vsphere-resource-compute-ha-vm-override"
    },
    "vsphere-resource-compute-resource-pool": {
        "body": "resource \"vsphere_resource_pool\" \"$1\" {\n    # parent_resource_pool_id - (Required) The [managed object ID][docs-about-morefs]\n    parent_resource_pool_id = \"\"\n\n    # name - (Required) The name of the resource pool.\n    name = \"\"\n\n    # cpu_share_level - (Optional) The CPU allocation level. The level is a\n    cpu_share_level = \"\"\n\n    # low - (Optional) `low`, `normal`, or `high` are specified values in `cpu_shares` will be\n    low = \"\"\n\n    # cpu_shares - (Optional) The number of shares allocated for CPU. Used to\n    cpu_shares = \"\"\n\n    # cpu_share_level - (Optional) `cpu_share_level` must be `custom`.\n    cpu_share_level = \"\"\n\n    # cpu_reservation - (Optional) Amount of CPU (MHz) that is guaranteed\n    cpu_reservation = \"\"\n\n    # cpu_expandable - (Optional) Determines if the reservation on a resource\n    cpu_expandable = \"\"\n\n    # cpu_limit - (Optional) The CPU utilization of a resource pool will not exceed\n    cpu_limit = \"\"\n\n    # memory_share_level - (Optional) The CPU allocation level. The level is a\n    memory_share_level = \"\"\n\n    # low - (Optional) `low`, `normal`, or `high` are specified values in `memory_shares` will be\n    low = \"\"\n\n    # memory_shares - (Optional) The number of shares allocated for CPU. Used to\n    memory_shares = \"\"\n\n    # memory_share_level - (Optional) `memory_share_level` must be `custom`.\n    memory_share_level = \"\"\n\n    # memory_reservation - (Optional) Amount of CPU (MHz) that is guaranteed\n    memory_reservation = \"\"\n\n    # memory_expandable - (Optional) Determines if the reservation on a resource\n    memory_expandable = \"\"\n\n    # memory_limit - (Optional) The CPU utilization of a resource pool will not exceed\n    memory_limit = \"\"\n\n    # tags - (Optional) The IDs of any tags to attach to this resource. See\n    tags = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_resource_pool` resource can be used to create and manage\nresource pools in standalone hosts or on compute clusters. For more information on vSphere resource pools, see [this\npage][ref-vsphere-resource_pools].",
        "prefix": "vsphere-resource-compute-resource-pool"
    },
    "vsphere-resource-compute-vapp-container": {
        "body": "resource \"vsphere_vapp_container\" \"$1\" {\n    # parent_resource_pool_id - (Required) The [managed object ID][docs-about-morefs]\n    parent_resource_pool_id = \"\"\n\n    # name - (Required) The name of the vApp container.\n    name = \"\"\n\n    # parent_folder_id - (Optional) The [managed object ID][docs-about-morefs] of\n    parent_folder_id = \"\"\n\n    # cpu_share_level - (Optional) The CPU allocation level. The level is a\n    cpu_share_level = \"\"\n\n    # low - (Optional) `low`, `normal`, or `high` are specified values in `cpu_shares` will be\n    low = \"\"\n\n    # cpu_shares - (Optional) The number of shares allocated for CPU. Used to\n    cpu_shares = \"\"\n\n    # cpu_share_level - (Optional) `cpu_share_level` must be `custom`.\n    cpu_share_level = \"\"\n\n    # cpu_reservation - (Optional) Amount of CPU (MHz) that is guaranteed\n    cpu_reservation = \"\"\n\n    # cpu_expandable - (Optional) Determines if the reservation on a vApp\n    cpu_expandable = \"\"\n\n    # cpu_limit - (Optional) The CPU utilization of a vApp container will not\n    cpu_limit = \"\"\n\n    # memory_share_level - (Optional) The CPU allocation level. The level is a\n    memory_share_level = \"\"\n\n    # low - (Optional) `low`, `normal`, or `high` are specified values in `memory_shares` will be\n    low = \"\"\n\n    # memory_shares - (Optional) The number of shares allocated for CPU. Used to\n    memory_shares = \"\"\n\n    # memory_share_level - (Optional) `memory_share_level` must be `custom`.\n    memory_share_level = \"\"\n\n    # memory_reservation - (Optional) Amount of CPU (MHz) that is guaranteed\n    memory_reservation = \"\"\n\n    # memory_expandable - (Optional) Determines if the reservation on a vApp\n    memory_expandable = \"\"\n\n    # memory_limit - (Optional) The CPU utilization of a vApp container will not\n    memory_limit = \"\"\n\n    # tags - (Optional) The IDs of any tags to attach to this resource. See\n    tags = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_vapp_container` resource can be used to create and manage\nvApps. For more information on vSphere vApps, see [this\npage][ref-vsphere-vapp].",
        "prefix": "vsphere-resource-compute-vapp-container"
    },
    "vsphere-resource-compute-vapp-entity": {
        "body": "resource \"vsphere_vapp_entity\" \"$1\" {\n    # container_id - (Required) [Managed object ID|docs-about-morefs] of the vApp\n    container_id = \"\"\n\n    # target_id - (Required) [Managed object ID|docs-about-morefs] of the entity\n    target_id = \"\"\n\n    # start_order - (Optional) Order to start and stop target in vApp. Default: 1\n    start_order = \"\"\n\n    # start_action - (Optional) How to start the entity. Valid settings are none\n    start_action = \"\"\n\n    # start_delay - (Optional) Delay in seconds before continuing with the next\n    start_delay = \"\"\n\n    # stop_action - (Optional) Defines the stop action for the entity. Can be set\n    stop_action = \"\"\n\n    # stop_delay - (Optional) Delay in seconds before continuing with the next\n    stop_delay = \"\"\n\n    # wait_for_guest - (Optional) Determines if the VM should be marked as being\n    wait_for_guest = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_vapp_entity` resource can be used to describe the behavior of an\nentity (virtual machine or sub-vApp container) in a vApp container. For more information on vSphere vApps, see [this\npage][ref-vsphere-vapp].",
        "prefix": "vsphere-resource-compute-vapp-entity"
    },
    "vsphere-resource-inventory-custom-attribute": {
        "body": "resource \"vsphere_custom_attribute\" \"$1\" {\n    # name - (Required) The name of the custom attribute.\n    name = \"\"\n\n    # managed_object_type - (Optional) The object type that this attribute may be\n    managed_object_type = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_custom_attribute` resource can be used to create and manage custom\nattributes, which allow users to associate user-specific meta-information with \nvSphere managed objects. Custom attribute values must be strings and are stored \non the vCenter Server and not the managed object. For more information about custom attributes, click [here][ext-custom-attributes]. ~> **NOTE:** Custom attributes are unsupported on direct ESXi connections \nand require vCenter.",
        "prefix": "vsphere-resource-inventory-custom-attribute"
    },
    "vsphere-resource-inventory-datacenter": {
        "body": "resource \"vsphere_datacenter\" \"$1\" {\n    # name - (Required) The name of the datacenter. This name needs to be unique\n    name = \"\"\n\n    # folder - (Optional) The folder where the datacenter should be created.\n    folder = \"\"\n\n    # tags - (Optional) The IDs of any tags to attach to this resource. See\n    tags = \"\"\n\n    # custom_attributes - (Optional) Map of custom attribute ids to value \n    custom_attributes = \"\"\n\n    # Exported Attributes\n}",
        "description": "Provides a VMware vSphere datacenter resource. This can be used as the primary\ncontainer of inventory objects such as hosts and virtual machines.",
        "prefix": "vsphere-resource-inventory-datacenter"
    },
    "vsphere-resource-inventory-folder": {
        "body": "resource \"vsphere_folder\" \"$1\" {\n    # type - (Required) The type of folder to create. Allowed options are\n    type = \"\"\n\n    # path - (Required) The path of the folder to be created. This is relative to\n    path = \"\"\n\n    # vm - (Optional) `vm` (denoting a virtual machine folder), and a supplied folder of\n    vm = \"\"\n\n    # datacenter - (Optional) `datacenter` for datacenter folders, `host` for host and cluster folders,\n    datacenter = \"\"\n\n    # vm - (Optional) `vm` for virtual machine folders, `datastore` for datastore folders, and\n    vm = \"\"\n\n    # network - (Optional) `network` for network folders. Forces a new resource if changed.\n    network = \"\"\n\n    # datacenter_id - (Optional) The ID of the datacenter the folder will be created in.\n    datacenter_id = \"\"\n\n    # tags - (Optional) The IDs of any tags to attach to this resource. See\n    tags = \"\"\n\n    # custom_attributes - (Optional) Map of custom attribute ids to attribute \n    custom_attributes = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_folder` resource can be used to manage vSphere inventory folders.\nThe resource supports creating folders of the 5 major types - datacenter\nfolders, host and cluster folders, virtual machine folders, datastore folders,\nand network folders. Paths are always relative to the specific type of folder you are creating.\nSubfolders are discovered by parsing the relative path specified in `path`, so\n`foo/bar` will create a folder named `bar` in the parent folder `foo`, as long\nas that folder exists.",
        "prefix": "vsphere-resource-inventory-folder"
    },
    "vsphere-resource-inventory-tag-category": {
        "body": "resource \"vsphere_tag_category\" \"$1\" {\n    # associable_types - (Required) A list object types that this category is\n    associable_types = \"\"\n\n    # cardinality - (Required) The number of tags that can be assigned from this\n    cardinality = \"\"\n\n    # name - (Required) The name of the category.\n    name = \"\"\n\n    # description - (Optional) A description for the category.\n    description = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_tag_category` resource can be used to create and manage tag\ncategories, which determine how tags are grouped together and applied to\nspecific objects. For more information about tags, click [here][ext-tags-general]. For more\ninformation about tag categories specifically, click\n[here][ext-tag-categories]. ~> **NOTE:** Tagging support is unsupported on direct ESXi connections and\nrequires vCenter 6.0 or higher.",
        "prefix": "vsphere-resource-inventory-tag-category"
    },
    "vsphere-resource-inventory-tag-resource": {
        "body": "resource \"vsphere_tag\" \"$1\" {\n    # category_id - (Required) The unique identifier of the parent category in\n    category_id = \"\"\n\n    # name - (Required) The display name of the tag. The name must be unique\n    name = \"\"\n\n    # description - (Optional) A description for the tag.\n    description = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_tag` resource can be used to create and manage tags, which allow\nyou to attach metadata to objects in the vSphere inventory to make these\nobjects more sortable and searchable. For more information about tags, click [here][ext-tags-general]. ~> **NOTE:** Tagging support is unsupported on direct ESXi connections and\nrequires vCenter 6.0 or higher.",
        "prefix": "vsphere-resource-inventory-tag-resource"
    },
    "vsphere-resource-networking-distributed-port-group": {
        "body": "resource \"vsphere_distributed_port_group\" \"$1\" {\n    # distributed_virtual_switch_uuid - (Required) The ID of the DVS to add the\n    distributed_virtual_switch_uuid = \"\"\n\n    # name - (Required) The name of the port group.\n    name = \"\"\n\n    # type - (Optional) The port group type. Can be one of `earlyBinding` (static\n    type = \"\"\n\n    # description - (Optional) An optional description for the port group.\n    description = \"\"\n\n    # number_of_ports - (Optional) The number of ports available on this port\n    number_of_ports = \"\"\n\n    # auto_expand - (Optional) Allows the port group to create additional ports\n    auto_expand = \"\"\n\n    # port_name_format - (Optional) An optional formatting policy for naming of\n    port_name_format = \"\"\n\n    # network_resource_pool_key - (Optional) The key of a network resource pool\n    network_resource_pool_key = \"\"\n\n    # custom_attributes - (Optional) Map of custom attribute ids to attribute\n    custom_attributes = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_distributed_port_group` resource can be used to manage vSphere\ndistributed virtual port groups. These port groups are connected to distributed\nvirtual switches, which can be managed by the\n[`vsphere_distributed_virtual_switch`][distributed-virtual-switch] resource. Distributed port groups can be used as networks for virtual machines, allowing\nVMs to use the networking supplied by a distributed virtual switch (DVS), with\na set of policies that apply to that individual newtork, if desired. For an overview on vSphere networking concepts, see [this\npage][ref-vsphere-net-concepts]. For more information on vSphere DVS\nportgroups, see [this page][ref-vsphere-dvportgroup]. ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi\nconnections.",
        "prefix": "vsphere-resource-networking-distributed-port-group"
    },
    "vsphere-resource-networking-distributed-virtual-switch": {
        "body": "resource \"vsphere_distributed_virtual_switch\" \"$1\" {\n    # datacenter_id - (Required) The ID of the datacenter where the distributed\n    datacenter_id = \"\"\n\n    # name - (Required) The name of the distributed virtual switch.\n    name = \"\"\n\n    # folder - (Optional) The folder to create the DVS in. Forces a new resource\n    folder = \"\"\n\n    # description - (Optional) A detailed description for the DVS.\n    description = \"\"\n\n    # contact_name - (Optional) The name of the person who is responsible for the\n    contact_name = \"\"\n\n    # contact_detail - (Optional) The detailed contact information for the person\n    contact_detail = \"\"\n\n    # lacp_api_version - (Optional) The Link Aggregation Control Protocol group\n    lacp_api_version = \"\"\n\n    # link_discovery_operation - (Optional) Whether to `advertise` or `listen`\n    link_discovery_operation = \"\"\n\n    # link_discovery_protocol - (Optional) The discovery protocol type. Valid\n    link_discovery_protocol = \"\"\n\n    # max_mtu - (Optional) The maximum transmission unit (MTU) for the virtual\n    max_mtu = \"\"\n\n    # multicast_filtering_mode - (Optional) The multicast filtering mode to use\n    multicast_filtering_mode = \"\"\n\n    # version - (Optional) - The version of the DVS to create. The default is to\n    version = \"\"\n\n    # tags - (Optional) The IDs of any tags to attach to this resource. See\n    tags = \"\"\n\n    # custom_attributes - (Optional) Map of custom attribute ids to attribute\n    custom_attributes = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_distributed_virtual_switch` resource can be used to manage VMware\nDistributed Virtual Switches. An essential component of a distributed, scalable VMware datacenter, the\nvSphere Distributed Virtual Switch (DVS) provides centralized management and\nmonitoring of the networking configuration of all the hosts that are associated\nwith the switch. In addition to adding port groups (see the\n[`vsphere_distributed_port_group`][distributed-port-group] resource) that can\nbe used as networks for virtual machines, a DVS can be configured to perform\nadvanced high availability, traffic shaping, network monitoring, and more. For an overview on vSphere networking concepts, see [this\npage][ref-vsphere-net-concepts]. For more information on vSphere DVS, see [this\npage][ref-vsphere-dvs]. ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi\nconnections.",
        "prefix": "vsphere-resource-networking-distributed-virtual-switch"
    },
    "vsphere-resource-networking-host-port-group": {
        "body": "resource \"vsphere_host_port_group\" \"$1\" {\n    # virtual_switch_name - (Required) The name of the virtual switch to bind\n    virtual_switch_name = \"\"\n\n    # host_system_id - (Required) The [managed object ID][docs-about-morefs] of\n    host_system_id = \"\"\n\n    # name - (Required) The name of the port group.  Forces a new resource if\n    name = \"\"\n\n    # vlan_id - (Optional) The VLAN ID/trunk mode for this port group.  An ID of\n    vlan_id = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_host_port_group` resource can be used to manage vSphere standard\nport groups on an ESXi host. These port groups are connected to standard\nvirtual switches, which can be managed by the\n[`vsphere_host_virtual_switch`][host-virtual-switch] resource. For an overview on vSphere networking concepts, see [this page][ref-vsphere-net-concepts].",
        "prefix": "vsphere-resource-networking-host-port-group"
    },
    "vsphere-resource-networking-host-virtual-switch": {
        "body": "resource \"vsphere_host_virtual_switch\" \"$1\" {\n    # host_system_id - (Required) The [managed object ID][docs-about-morefs] of\n    host_system_id = \"\"\n\n    # name - (Required) The name of the virtual switch. Forces a new resource if\n    name = \"\"\n\n    # mtu - (Optional) The maximum transmission unit (MTU) for the virtual\n    mtu = \"\"\n\n    # number_of_ports - (Optional) The number of ports to create with this\n    number_of_ports = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_host_virtual_switch` resource can be used to manage vSphere\nstandard switches on an ESXi host. These switches can be used as a backing for\nstandard port groups, which can be managed by the\n[`vsphere_host_port_group`][host-port-group] resource. For an overview on vSphere networking concepts, see [this\npage][ref-vsphere-net-concepts].",
        "prefix": "vsphere-resource-networking-host-virtual-switch"
    },
    "vsphere-resource-storage-cluster-datastore-vm-anti-affinity-rule": {
        "body": "resource \"vsphere_datastore_cluster_vm_anti_affinity_rule\" \"$1\" {\n    # virtual_machine_ids - (Required) The UUIDs of the virtual machines to run\n    virtual_machine_ids = \"\"\n\n    # name - (Required) The name of the rule. This must be unique in the cluster.\n    name = \"\"\n\n    # datastore_cluster_id - (Required) The [managed object reference\n    datastore_cluster_id = \"\"\n\n    # enabled - (Optional) Enable this rule in the cluster. Default: `true`.\n    enabled = \"\"\n\n    # mandatory - (Optional) When this value is `true`, prevents any virtual\n    mandatory = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_datastore_cluster_vm_anti_affinity_rule` resource can be used to\nmanage VM anti-affinity rules in a datastore cluster, either created by the\n[`vsphere_datastore_cluster`][tf-vsphere-datastore-cluster-resource] resource or looked up\nby the [`vsphere_datastore_cluster`][tf-vsphere-datastore-cluster-data-source] data source. This rule can be used to tell a set to virtual machines to run on different\ndatastores within a cluster, useful for preventing single points of failure in\napplication cluster scenarios. When configured, Storage DRS will make a best effort to\nensure that the virtual machines run on different datastores, or prevent any\noperation that would keep that from happening, depending on the value of the\n[`mandatory`](#mandatory) flag. ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi\nconnections. ~> **NOTE:** Storage DRS requires a vSphere Enterprise Plus license.",
        "prefix": "vsphere-resource-storage-cluster-datastore-vm-anti-affinity-rule"
    },
    "vsphere-resource-storage-datastore-cluster": {
        "body": "resource \"vsphere_datastore_cluster\" \"$1\" {\n    # datacenter_id - (Required) The [managed object ID][docs-about-morefs] of\n    datacenter_id = \"\"\n\n    # name - (Required) The name of the datastore cluster.\n    name = \"\"\n\n    # folder - (Optional) The relative path to a folder to put this datastore\n    folder = \"\"\n\n    # sdrs_enabled - (Optional) Enable Storage DRS for this datastore cluster.\n    sdrs_enabled = \"\"\n\n    # tags - (Optional) The IDs of any tags to attach to this resource. See\n    tags = \"\"\n\n    # custom_attributes - (Optional) A map of custom attribute ids to attribute\n    custom_attributes = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_datastore_cluster` resource can be used to create and manage\ndatastore clusters. This can be used to create groups of datastores with a\nshared management interface, allowing for resource control and load balancing\nthrough Storage DRS. For more information on vSphere datastore clusters and Storage DRS, see [this\npage][ref-vsphere-datastore-clusters]. ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi\nconnections. ~> **NOTE:** Storage DRS requires a vSphere Enterprise Plus license.",
        "prefix": "vsphere-resource-storage-datastore-cluster"
    },
    "vsphere-resource-storage-file": {
        "body": "resource \"vsphere_file\" \"$1\" {\n    # datastore - (Required) The name of the datastore in which to upload the\n    datastore = \"\"\n\n    # destination_file - (Required) The path to where the file should be uploaded\n    destination_file = \"\"\n\n    # source_file - (Required) The path to the file being uploaded from the\n    source_file = \"\"\n\n    # source_datacenter - (Optional) The name of a datacenter in which the file\n    source_datacenter = \"\"\n\n    # datacenter - (Optional) The name of a datacenter in which the file will be\n    datacenter = \"\"\n\n    # source_datastore - (Optional) The name of the datastore in which file will\n    source_datastore = \"\"\n\n    # create_directories - (Optional) Create directories in `destination_file` path parameter if any missing for copy operation.  ~> **NOTE:** Any directory created as part of the operation when `create_directories` is enabled will not be deleted when the resource is destroyed.\n    create_directories = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_file` resource can be used to upload files (such as virtual disk\nfiles) from the host machine that Terraform is running on to a target\ndatastore.  The resource can also be used to copy files between datastores, or\nfrom one location to another on the same datastore. Updates to destination parameters such as `datacenter`, `datastore`, or\n`destination_file` will move the managed file a new destination based on the\nvalues of the new settings.  If any source parameter is changed, such as\n`source_datastore`, `source_datacenter` or `source_file`), the resource will be\nre-created. Depending on if destination parameters are being changed as well,\nthis may result in the destination file either being overwritten or deleted at\nthe old location.",
        "prefix": "vsphere-resource-storage-file"
    },
    "vsphere-resource-storage-nas-datastore": {
        "body": "resource \"vsphere_nas_datastore\" \"$1\" {\n    # remote_path - (Required) The remote path of the mount point. Forces a new\n    remote_path = \"\"\n\n    # remote_hosts - (Required) The hostnames or IP addresses of the remote\n    remote_hosts = \"\"\n\n    # host_system_ids - (Required) The [managed object IDs][docs-about-morefs] of\n    host_system_ids = \"\"\n\n    # name - (Required) The name of the datastore. Forces a new resource if\n    name = \"\"\n\n    # type - (Optional) The type of NAS volume. Can be one of `NFS` (to denote\n    type = \"\"\n\n    # access_mode - (Optional) Access mode for the mount point. Can be one of\n    access_mode = \"\"\n\n    # security_type - (Optional) The security type to use when using NFS v4.1.\n    security_type = \"\"\n\n    # folder - (Optional) The relative path to a folder to put this datastore in.\n    folder = \"\"\n\n    # datastore_cluster_id - (Optional) `datastore_cluster_id`.\n    datastore_cluster_id = \"\"\n\n    # datastore_cluster_id - (Optional) The [managed object\n    datastore_cluster_id = \"\"\n\n    # tags - (Optional) The IDs of any tags to attach to this resource. See\n    tags = \"\"\n\n    # custom_attributes - (Optional) Map of custom attribute ids to attribute \n    custom_attributes = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_nas_datastore` resource can be used to create and manage NAS\ndatastores on an ESXi host or a set of hosts. The resource supports mounting\nNFS v3 and v4.1 shares to be used as datastores. ~> **NOTE:** Unlike [`vsphere_vmfs_datastore`][resource-vmfs-datastore], a NAS\ndatastore is only mounted on the hosts you choose to mount it on. To mount on\nmultiple hosts, you must specify each host that you want to add in the\n`host_system_ids` argument.",
        "prefix": "vsphere-resource-storage-nas-datastore"
    },
    "vsphere-resource-storage-storage-drs-vm-override": {
        "body": "resource \"vsphere_storage_drs_vm_override\" \"$1\" {\n    # virtual_machine_id - (Required) The UUID of the virtual machine to create\n    virtual_machine_id = \"\"\n\n    # datastore_cluster_id - (Required) The [managed object reference\n    datastore_cluster_id = \"\"\n\n    # sdrs_enabled - (Optional) Overrides the default Storage DRS setting for\n    sdrs_enabled = \"\"\n\n    # sdrs_automation_level - (Optional) Overrides any Storage DRS automation\n    sdrs_automation_level = \"\"\n\n    # sdrs_intra_vm_affinity - (Optional) Overrides the intra-VM affinity setting\n    sdrs_intra_vm_affinity = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_storage_drs_vm_override` resource can be used to add a Storage DRS\noverride to a datastore cluster for a specific virtual machine. With this\nresource, one can enable or disable Storage DRS, and control the automation\nlevel and disk affinity for a single virtual machine without affecting the rest\nof the datastore cluster. For more information on vSphere datastore clusters and Storage DRS, see [this\npage][ref-vsphere-datastore-clusters].",
        "prefix": "vsphere-resource-storage-storage-drs-vm-override"
    },
    "vsphere-resource-storage-vmfs-datastore": {
        "body": "resource \"vsphere_vmfs_datastore\" \"$1\" {\n    # disks - (Required) The disks to use with the datastore.\n    disks = \"\"\n\n    # host_system_id - (Required) The [managed object ID][docs-about-morefs] of\n    host_system_id = \"\"\n\n    # name - (Required) The name of the datastore. Forces a new resource if\n    name = \"\"\n\n    # folder - (Optional) The relative path to a folder to put this datastore in.\n    folder = \"\"\n\n    # datastore_cluster_id - (Optional) `datastore_cluster_id`.\n    datastore_cluster_id = \"\"\n\n    # datastore_cluster_id - (Optional) The [managed object\n    datastore_cluster_id = \"\"\n\n    # tags - (Optional) The IDs of any tags to attach to this resource. See\n    tags = \"\"\n\n    # custom_attributes - (Optional) Map of custom attribute ids to attribute \n    custom_attributes = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_vmfs_datastore` resource can be used to create and manage VMFS\ndatastores on an ESXi host or a set of hosts. The resource supports using any\nSCSI device that can generally be used in a datastore, such as local disks, or\ndisks presented to a host or multiple hosts over Fibre Channel or iSCSI.\nDevices can be specified manually, or discovered using the\n[`vsphere_vmfs_disks`][data-source-vmfs-disks] data source.",
        "prefix": "vsphere-resource-storage-vmfs-datastore"
    },
    "vsphere-resource-vm-virtual-disk": {
        "body": "resource \"vsphere_virtual_disk\" \"$1\" {\n    # size - (Required) Size of the disk (in GB).\n    size = \"\"\n\n    # datastore - (Required) The name of the datastore in which to create the\n    datastore = \"\"\n\n    # vmdk_path - (Required) The path, including filename, of the virtual disk to\n    vmdk_path = \"\"\n\n    # datacenter - (Optional) The name of the datacenter in which to create the\n    datacenter = \"\"\n\n    # type - (Optional) The type of disk to create. Can be one of\n    type = \"\"\n\n    # adapter_type - (Optional) The adapter type for this virtual disk. Can be\n    adapter_type = \"\"\n\n    # create_directories - (Optional) Tells the resource to create any\n    create_directories = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_virtual_disk` resource can be used to create virtual disks outside\nof any given [`vsphere_virtual_machine`][docs-vsphere-virtual-machine]\nresource. These disks can be attached to a virtual machine by creating a disk\nblock with the [`attach`][docs-vsphere-virtual-machine-disk-attach] parameter.",
        "prefix": "vsphere-resource-vm-virtual-disk"
    },
    "vsphere-resource-vm-virtual-machine-resource": {
        "body": "resource \"vsphere_virtual_machine\" \"$1\" {\n    # Exported Attributes\n}",
        "description": "The `vsphere_virtual_machine` resource can be used to manage the complex\nlifecycle of a virtual machine. It supports management of disk, network\ninterface, and CDROM devices, creation from scratch or cloning from template,\nand migration through both host and storage vMotion. For more details on working with virtual machines in vSphere, see [this\npage][vmware-docs-vm-management].",
        "prefix": "vsphere-resource-vm-virtual-machine-resource"
    },
    "vsphere-resource-vm-virtual-machine-snapshot": {
        "body": "resource \"vsphere_virtual_machine_snapshot\" \"$1\" {\n    # quiesce - (Required) If set to `true`, and the virtual machine is powered\n    quiesce = \"\"\n\n    # memory - (Required) If set to `true`, a dump of the internal state of the\n    memory = \"\"\n\n    # description - (Required) A description for the snapshot.\n    description = \"\"\n\n    # snapshot_name - (Required) The name of the snapshot.\n    snapshot_name = \"\"\n\n    # virtual_machine_uuid - (Required) The virtual machine UUID.\n    virtual_machine_uuid = \"\"\n\n    # remove_children - (Optional) If set to `true`, the entire snapshot subtree\n    remove_children = \"\"\n\n    # consolidate - (Optional) If set to `true`, the delta disks involved in this\n    consolidate = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_virtual_machine_snapshot` resource can be used to manage snapshots\nfor a virtual machine. For more information on managing snapshots and how they work in VMware, see\n[here][ext-vm-snapshot-management]. ~> **NOTE:** A snapshot in VMware differs from traditional disk snapshots, and\ncan contain the actual running state of the virtual machine, data for all disks\nthat have not been set to be independent from the snapshot (including ones that\nhave been attached via the [attach][docs-vsphere-virtual-machine-disk-attach]\nparameter to the `vsphere_virtual_machine` `disk` block), and even the\nconfiguration of the virtual machine at the time of the snapshot. Virtual\nmachine, disk activity, and configuration changes post-snapshot are not\nincluded in the original state. Use this resource with care! Neither VMware nor\nHashiCorp recommends retaining snapshots for a extended period of time and does\nNOT recommend using them as as backup feature. For more information on the\nlimitation of virtual machine snapshots, see [here][ext-vm-snap-limitations].",
        "prefix": "vsphere-resource-vm-virtual-machine-snapshot"
    }
}