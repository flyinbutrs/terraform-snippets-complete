{
    "vsphere-data-source-datacenter": {
        "body": "data \"vsphere_datacenter\" \"$1\" {\n    # name - (Optional) (String) The name of the datacenter. This can be a name or path.\tCan\n    name = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_datacenter` data source can be used to discover the ID of a\nvSphere datacenter. This can then be used with resources or data sources that\nrequire a datacenter, such as the [`vsphere_host`][data-source-vsphere-host]\ndata source.",
        "prefix": "vsphere-data-source-datacenter"
    },
    "vsphere-data-source-distributed-virtual-switch": {
        "body": "data \"vsphere_distributed_virtual_switch\" \"$1\" {\n    # name - (Required) The name of the distributed virtual switch. This can be a\n    name = \"\"\n\n    # datacenter_id - (Optional) The managed object reference ID of the\n    datacenter_id = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_distributed_virtual_switch` data source can be used to discover\nthe ID and uplink data of a of a vSphere distributed virtual switch (DVS). This\ncan then be used with resources or data sources that require a DVS, such as the\n[`vsphere_distributed_port_group`][distributed-port-group] resource, for which\nan example is shown below. ~> **NOTE:** This data source requires vCenter and is not available on direct\nESXi connections.",
        "prefix": "vsphere-data-source-distributed-virtual-switch"
    },
    "vsphere-data-source-host": {
        "body": "data \"vsphere_host\" \"$1\" {\n    # name - (Optional) (String) The name of the host. This can be a name or path.\tCan be\n    name = \"\"\n\n    # datacenter_id - (Optional) (String, required) The managed object reference ID of a\n    datacenter_id = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_host` data source can be used to discover the ID of a vSphere\nhost. This can then be used with resources or data sources that require a host\nmanaged object reference ID.",
        "prefix": "vsphere-data-source-host"
    },
    "vsphere-data-source-network": {
        "body": "data \"vsphere_network\" \"$1\" {\n    # name - (Required) The name of the network. This can be a name or path.\n    name = \"\"\n\n    # datacenter_id - (Optional) The managed object reference ID of the\n    datacenter_id = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_network` data source can be used to discover the ID of a network\nin vSphere. This can be any network that can be used as the backing for a\nnetwork interface for `vsphere_virtual_machine` or any other vSphere resource\nthat requires a network. This includes standard (host-based) port groups, DVS\nport groups, or opaque networks such as those managed by NSX. ~> **NOTE:** This data source requires vCenter and is not available on direct\nESXi connections.",
        "prefix": "vsphere-data-source-network"
    },
    "vsphere-data-source-tag-category": {
        "body": "data \"vsphere_tag_category\" \"$1\" {\n    # name - (Optional) (String, required) The name of the tag category.\n    name = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_tag_category` data source can be used to reference tag categories\nthat are not managed by Terraform. Its attributes are exactly the same as the\n[`vsphere_tag_category` resource][resource-tag-category], and, like importing,\nthe data source takes a name to search on. The `id` and other attributes are\nthen populated with the data found by the search. ~> **NOTE:** Tagging support is unsupported on direct ESXi connections and\nrequires vCenter 6.0 or higher.",
        "prefix": "vsphere-data-source-tag-category"
    },
    "vsphere-data-source-tag-data-source": {
        "body": "data \"vsphere_tag\" \"$1\" {\n    # name - (Optional) (String, required) The name of the tag.\n    name = \"\"\n\n    # category_id - (Optional) (String, required) The ID of the tag category the tag is\n    category_id = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_tag` data source can be used to reference tags that are not\nmanaged by Terraform. Its attributes are exactly the same as the [`vsphere_tag`\nresource][resource-tag], and, like importing, the data source takes a name and\ncategory to search on. The `id` and other attributes are then populated with\nthe data found by the search. ~> **NOTE:** Tagging support is unsupported on direct ESXi connections and\nrequires vCenter 6.0 or higher.",
        "prefix": "vsphere-data-source-tag-data-source"
    },
    "vsphere-data-source-vmfs-disks": {
        "body": "data \"vsphere_vmfs_disks\" \"$1\" {\n    # host_system_id - (Optional) (String, required) The managed object ID of the host to\n    host_system_id = \"\"\n\n    # rescan - (Optional) (Boolean, optional) Whether or not to rescan storage adapters\n    rescan = \"\"\n\n    # filter - (Optional) (String, optional) A regular expression to filter the disks\n    filter = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_vmfs_disks` data source can be used to discover the storage\ndevices available on an ESXi host. This data source can be combined with the\n[`vsphere_vmfs_datastore`][data-source-vmfs-datastore] resource to create VMFS\ndatastores based off a set of discovered disks.",
        "prefix": "vsphere-data-source-vmfs-disks"
    },
    "vsphere-resource-admin-license": {
        "body": "resource \"vsphere_license\" \"$1\" {\n    # license_key - (Required) The license key to add.\n    license_key = \"\"\n\n    # labels - (Optional) A map of key/value pairs to be attached as labels (tags) to the license key.\n    labels = \"\"\n\n    # Exported Attributes\n    # \"edition_key\" - The product edition of the license key.\n    # \"total\" - Total number of units (example: CPUs) contained in the license.\n    # \"used\" - The number of units (example: CPUs) assigned to this license.\n    # \"name\" - The display name for the license.\n}",
        "description": "Provides a VMware vSphere license resource. This can be used to add and remove license keys.",
        "prefix": "vsphere-resource-admin-license"
    },
    "vsphere-resource-inventory-datacenter": {
        "body": "resource \"vsphere_datacenter\" \"$1\" {\n    # name - (Required) The name of the datacenter. This name needs to be unique\n    name = \"\"\n\n    # folder - (Optional) The folder where the datacenter should be created.\n    folder = \"\"\n\n    # tags - (Optional) The IDs of any tags to attach to this resource. See\n    tags = \"\"\n\n    # Exported Attributes\n}",
        "description": "Provides a VMware vSphere datacenter resource. This can be used as the primary\ncontainer of inventory objects such as hosts and virtual machines.",
        "prefix": "vsphere-resource-inventory-datacenter"
    },
    "vsphere-resource-inventory-folder": {
        "body": "resource \"vsphere_folder\" \"$1\" {\n    # type - (Required) The type of folder to create. Allowed options are\n    type = \"\"\n\n    # path - (Required) The path of the folder to be created. This is relative to\n    path = \"\"\n\n    # vm - (Optional) `vm` (denoting a virtual machine folder), and a supplied folder of\n    vm = \"\"\n\n    # datacenter - (Optional) `datacenter` for datacenter folders, `host` for host and cluster folders,\n    datacenter = \"\"\n\n    # vm - (Optional) `vm` for virtual machine folders, `datastore` for datastore folders, and\n    vm = \"\"\n\n    # network - (Optional) `network` for network folders. Forces a new resource if changed.\n    network = \"\"\n\n    # datacenter_id - (Optional) The ID of the datacenter the folder will be created in.\n    datacenter_id = \"\"\n\n    # tags - (Optional) The IDs of any tags to attach to this resource. See\n    tags = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_folder` resource can be used to manage vSphere inventory folders.\nThe resource supports creating folders of the 5 major types - datacenter\nfolders, host and cluster folders, virtual machine folders, datastore folders,\nand network folders. Paths are always relative to the specific type of folder you are creating.\nSubfolders are discovered by parsing the relative path specified in `name`, so\n`foo/bar` will create a folder named `bar` in the parent folder `foo`, as long\nas that folder exists.",
        "prefix": "vsphere-resource-inventory-folder"
    },
    "vsphere-resource-inventory-tag-category": {
        "body": "resource \"vsphere_tag_category\" \"$1\" {\n    # name - (Optional) (String, required) The name of the category.\n    name = \"\"\n\n    # description - (Optional) (String, optional) A description for the category.\n    description = \"\"\n\n    # cardinality - (Optional) (String, required, forces new resource) The number of tags\n    cardinality = \"\"\n\n    # associable_types - (Optional) (List of strings, required) A list object types that\n    associable_types = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_tag_category` resource can be used to create and manage tag\ncategories, which determine how tags are grouped together and applied to\nspecific objects. For more information about tags, click [here][ext-tags-general]. For more\ninformation about tag categories specifically, click\n[here][ext-tag-categories]. ~> **NOTE:** Tagging support is unsupported on direct ESXi connections and\nrequires vCenter 6.0 or higher.",
        "prefix": "vsphere-resource-inventory-tag-category"
    },
    "vsphere-resource-inventory-tag-resource": {
        "body": "resource \"vsphere_tag\" \"$1\" {\n    # name - (Optional) (String, required) The display name of the tag. The name must be\n    name = \"\"\n\n    # category_id - (Optional) (String, required, forces new resource) The unique identifier\n    category_id = \"\"\n\n    # description - (Optional) (String, optional) A description for the tag.\n    description = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_tag` resource can be used to create and manage tags, which allow\nyou to attach metadata to objects in the vSphere inventory to make these\nobjects more sortable and searchable. For more information about tags, click [here][ext-tags-general]. ~> **NOTE:** Tagging support is unsupported on direct ESXi connections and\nrequires vCenter 6.0 or higher.",
        "prefix": "vsphere-resource-inventory-tag-resource"
    },
    "vsphere-resource-network-distributed-port-group": {
        "body": "resource \"vsphere_distributed_port_group\" \"$1\" {\n    # distributed_virtual_switch_uuid - (Required) The ID of the DVS to add the\n    distributed_virtual_switch_uuid = \"\"\n\n    # name - (Required) The name of the port group.\n    name = \"\"\n\n    # type - (Optional) The port group type. Can be one of `earlyBinding` (static\n    type = \"\"\n\n    # description - (Optional) An optional description for the port group.\n    description = \"\"\n\n    # number_of_ports - (Optional) The number of ports available on this port\n    number_of_ports = \"\"\n\n    # auto_expand - (Optional) Allows the port group to create additional ports\n    auto_expand = \"\"\n\n    # port_name_format - (Optional) An optional formatting policy for naming of\n    port_name_format = \"\"\n\n    # network_resource_pool_key - (Optional) The key of a network resource pool\n    network_resource_pool_key = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_distributed_port_group` resource can be used to manage vSphere\ndistributed virtual port groups. These port groups are connected to distributed\nvirtual switches, which can be managed by the\n[`vsphere_distributed_virtual_switch`][distributed-virtual-switch] resource. Distributed port groups can be used as networks for virtual machines, allowing\nVMs to use the networking supplied by a distributed virtual switch (DVS), with\na set of policies that apply to that individual newtork, if desired. For an overview on vSphere networking concepts, see [this\npage][ref-vsphere-net-concepts]. For more information on vSphere DVS\nportgroups, see [this page][ref-vsphere-dvportgroup]. ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi\nconnections.",
        "prefix": "vsphere-resource-network-distributed-port-group"
    },
    "vsphere-resource-network-distributed-virtual-switch": {
        "body": "resource \"vsphere_distributed_virtual_switch\" \"$1\" {\n    # datacenter_id - (Required) The ID of the datacenter where the distributed\n    datacenter_id = \"\"\n\n    # name - (Required) The name of the distributed virtual switch.\n    name = \"\"\n\n    # folder - (Optional) The folder to create the DVS in. Forces a new resource\n    folder = \"\"\n\n    # description - (Optional) A detailed description for the DVS.\n    description = \"\"\n\n    # contact_name - (Optional) The name of the person who is responsible for the\n    contact_name = \"\"\n\n    # contact_detail - (Optional) The detailed contact information for the person\n    contact_detail = \"\"\n\n    # lacp_api_version - (Optional) The Link Aggregation Control Protocol group\n    lacp_api_version = \"\"\n\n    # link_discovery_operation - (Optional) Whether to `advertise` or `listen`\n    link_discovery_operation = \"\"\n\n    # link_discovery_protocol - (Optional) The discovery protocol type. Valid\n    link_discovery_protocol = \"\"\n\n    # max_mtu - (Optional) The maximum transmission unit (MTU) for the virtual\n    max_mtu = \"\"\n\n    # multicast_filtering_mode - (Optional) The multicast filtering mode to use\n    multicast_filtering_mode = \"\"\n\n    # version - (Optional) - The version of the DVS to create. The default is to\n    version = \"\"\n\n    # tags - (Optional) The IDs of any tags to attach to this resource. See\n    tags = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_distributed_virtual_switch` resource can be used to manage VMware\nDistributed Virtual Switches. An essential component of a distributed, scalable VMware datacenter, the\nvSphere Distributed Virtual Switch (DVS) provides centralized management and\nmonitoring of the networking configuration of all the hosts that are associated\nwith the switch. In addition to adding port groups (see the\n[`vsphere_distributed_port_group`][distributed-port-group] resource) that can\nbe used as networks for virtual machines, a DVS can be configured to perform\nadvanced high availability, traffic shaping, network monitoring, and more. For an overview on vSphere networking concepts, see [this\npage][ref-vsphere-net-concepts]. For more information on vSphere DVS, see [this\npage][ref-vsphere-dvs]. ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi\nconnections.",
        "prefix": "vsphere-resource-network-distributed-virtual-switch"
    },
    "vsphere-resource-networking-host-port-group": {
        "body": "resource \"vsphere_host_port_group\" \"$1\" {\n    # name - (Optional) (String, required, forces new resource) The name of the port group.\n    name = \"\"\n\n    # host_system_id - (Optional) (String, required, forces new resource) The managed object\n    host_system_id = \"\"\n\n    # virtual_switch_name - (Optional) (String, required, forces new resource) The name of\n    virtual_switch_name = \"\"\n\n    # vlan_id - (Optional) (Integer, optional) The VLAN ID/trunk mode for this port group.\n    vlan_id = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_host_port_group` resource can be used to manage vSphere standard\nport groups on an ESXi host. These port groups are connected to standard\nvirtual switches, which can be managed by the\n[`vsphere_host_virtual_switch`][host-virtual-switch] resource. For an overview on vSphere networking concepts, see [this page][ref-vsphere-net-concepts].",
        "prefix": "vsphere-resource-networking-host-port-group"
    },
    "vsphere-resource-networking-host-virtual-switch": {
        "body": "resource \"vsphere_host_virtual_switch\" \"$1\" {\n    # name - (Optional) (String, required, forces new resource) The name of the virtual switch.\n    name = \"\"\n\n    # host_system_id - (Optional) (String, required, forces new resource) The managed object\n    host_system_id = \"\"\n\n    # mtu - (Optional) (Integer, optional) The maximum transmission unit (MTU) for the virtual\n    mtu = \"\"\n\n    # number_of_ports - (Optional) (Integer, optional) The number of ports to create with\n    number_of_ports = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_host_virtual_switch` resource can be used to manage vSphere\nstandard switches on an ESXi host. These switches can be used as a backing for\nstandard port groups, which can be managed by the\n[`vsphere_host_port_group`][host-port-group] resource. For an overview on vSphere networking concepts, see [this\npage][ref-vsphere-net-concepts].",
        "prefix": "vsphere-resource-networking-host-virtual-switch"
    },
    "vsphere-resource-storage-file": {
        "body": "resource \"vsphere_file\" \"$1\" {\n    # datastore - (Required) The name of the Datastore in which to upload the file to.\n    datastore = \"\"\n\n    # destination_file - (Required) The path to where the file should be uploaded or copied to on vSphere.\n    destination_file = \"\"\n\n    # source_file - (Required) The path to the file being uploaded from the Terraform host to vSphere or copied within vSphere.\n    source_file = \"\"\n\n    # source_datacenter - (Optional) The name of a Datacenter in which the file will be copied from.\n    source_datacenter = \"\"\n\n    # datacenter - (Optional) The name of a Datacenter in which the file will be uploaded to.\n    datacenter = \"\"\n\n    # source_datastore - (Optional) The name of the Datastore in which file will be copied from.\n    source_datastore = \"\"\n\n    # create_directories - (Optional) Create directories in `destination_file` path parameter if any missing for copy operation.  *Note: Directories are not deleted on destroy operation.\n    create_directories = \"\"\n\n    # Exported Attributes\n}",
        "description": "Provides a VMware vSphere virtual machine file resource. This can be used to upload files (e.g. vmdk disks) from the Terraform host machine to a remote vSphere.  The file resource can also be used to copy files within vSphere.  Files can be copied between Datacenters and/or Datastores. Updates to file resources will handle moving a file to a new destination (datacenter and/or datastore and/or destination_file).  If any source parameter (e.g. `source_datastore`, `source_datacenter` or `source_file`) are changed, this results in a new resource (new file uploaded or copied and old one being deleted).",
        "prefix": "vsphere-resource-storage-file"
    },
    "vsphere-resource-storage-nas-datastore": {
        "body": "resource \"vsphere_nas_datastore\" \"$1\" {\n    # name - (Optional) (String, required, forces new resource) The name of the datastore.\n    name = \"\"\n\n    # host_system_ids - (Optional) (List of strings, required) The managed object\n    host_system_ids = \"\"\n\n    # folder - (Optional) (String, optional) The relative path to a folder to put this\n    folder = \"\"\n\n    # type - (Optional) (String, optional, forces new resource) The type of NAS volume. Can\n    type = \"\"\n\n    # remote_hosts - (Optional) (List of strings, required, forces new resource) The\n    remote_hosts = \"\"\n\n    # remote_path - (Optional) (String, required, forces new resource) The remote path of\n    remote_path = \"\"\n\n    # access_mode - (Optional) (String, optional, forces new resource) Access mode for the\n    access_mode = \"\"\n\n    # security_type - (Optional) (String, optional, forces new resource) The security type\n    security_type = \"\"\n\n    # tags - (Optional) (List of strings, optional) The IDs of any tags to attach to this\n    tags = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_nas_datastore` resource can be used to create and manage NAS\ndatastores on an ESXi host or a set of hosts. The resource supports mounting\nNFS v3 and v4.1 shares to be used as datastores. ~> **NOTE:** Unlike [`vsphere_vmfs_datastore`][resource-vmfs-datastore], a NAS\ndatastore is only mounted on the hosts you choose to mount it on. To mount on\nmultiple hosts, you must specify each host that you want to add in the\n`host_system_ids` argument.",
        "prefix": "vsphere-resource-storage-nas-datastore"
    },
    "vsphere-resource-storage-vmfs-datastore": {
        "body": "resource \"vsphere_vmfs_datastore\" \"$1\" {\n    # name - (Optional) (String, required, forces new resource) The name of the datastore.\n    name = \"\"\n\n    # host_system_id - (Optional) (String, required, forces new resource) The managed object\n    host_system_id = \"\"\n\n    # folder - (Optional) (String, optional) The relative path to a folder to put this\n    folder = \"\"\n\n    # disks - (Optional) (List of strings, required) The disks to use with the datastore.\n    disks = \"\"\n\n    # tags - (Optional) (List of strings, optional) The IDs of any tags to attach to this\n    tags = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_vmfs_datastore` resource can be used to create and manage VMFS\ndatastores on an ESXi host or a set of hosts. The resource supports using any\nSCSI device that can generally be used in a datastore, such as local disks, or\ndisks presented to a host or multiple hosts over Fibre Channel or iSCSI.\nDevices can be specified manually, or discovered using the\n[`vsphere_vmfs_disks`][data-source-vmfs-disks] data source.",
        "prefix": "vsphere-resource-storage-vmfs-datastore"
    },
    "vsphere-resource-vm-virtual-disk": {
        "body": "resource \"vsphere_virtual_disk\" \"$1\" {\n    # datastore - (Required) The name of the Datastore in which to create the disk.\n    datastore = \"\"\n\n    # vmdk_path - (Required) The path, including filename, of the virtual disk to be created.  This should end with '.vmdk'.\n    vmdk_path = \"\"\n\n    # size - (Required) Size of the disk (in GB).\n    size = \"\"\n\n    # type - (Optional) 'eagerZeroedThick' (the default), 'lazy', or 'thin' are supported options.\n    type = \"\"\n\n    # adapter_type - (Optional) set adapter type, 'ide' (the default), 'lsiLogic', or 'busLogic' are supported options.\n    adapter_type = \"\"\n\n    # datacenter - (Optional) The name of a Datacenter in which to create the disk.\n    datacenter = \"\"\n\n    # Exported Attributes\n}",
        "description": "Provides a VMware virtual disk resource.  This can be used to create and delete virtual disks.",
        "prefix": "vsphere-resource-vm-virtual-disk"
    },
    "vsphere-resource-vm-virtual-machine": {
        "body": "resource \"vsphere_virtual_machine\" \"$1\" {\n    # label - (Required) Label to assign to this network interface\n    label = \"\"\n\n    # disk - (Required) Configures virtual disks; see [Disks](#disks) below for\n    disk = \"\"\n\n    # network_interface - (Required) Configures virtual network interfaces; see\n    network_interface = \"\"\n\n    # memory - (Required) The amount of RAM (in MB) to allocate to the virtual\n    memory = \"\"\n\n    # vcpu - (Required) The number of virtual CPUs to allocate to the virtual\n    vcpu = \"\"\n\n    # name - (Required) The virtual machine name (cannot contain underscores and\n    name = \"\"\n\n    # folder - (Optional) The folder to group the VM in.\n    folder = \"\"\n\n    # hostname - (Optional) The virtual machine hostname used during the OS\n    hostname = \"\"\n\n    # memory_reservation - (Optional) The amount of RAM (in MB) to reserve\n    memory_reservation = \"\"\n\n    # datacenter - (Optional) The name of a Datacenter in which to launch the\n    datacenter = \"\"\n\n    # cluster - (Optional) Name of a Cluster in which to launch the virtual\n    cluster = \"\"\n\n    # resource_pool - (Optional) The name of a Resource Pool in which to launch the\n    resource_pool = \"\"\n\n    # gateway - (Optional) __Deprecated, please use `network_interface.ipv4_gateway`\n    gateway = \"\"\n\n    # domain - (Optional) A FQDN for the virtual machine; defaults to\n    domain = \"\"\n\n    # time_zone - (Optional) The\n    time_zone = \"\"\n\n    # dns_suffixes - (Optional) List of name resolution suffixes for the virtual\n    dns_suffixes = \"\"\n\n    # dns_servers - (Optional) List of DNS servers for the virtual network\n    dns_servers = \"\"\n\n    # detach_unknown_disks_on_delete - (Optional) will detach disks not managed\n    detach_unknown_disks_on_delete = \"\"\n\n    # cdrom - (Optional) Configures a CDROM device and mounts an image as its\n    cdrom = \"\"\n\n    # windows_opt_config - (Optional) Extra options for clones of Windows\n    windows_opt_config = \"\"\n\n    # linked_clone - (Optional) Specifies if the new machine is a [linked\n    linked_clone = \"\"\n\n    # enable_disk_uuid - (Optional) This option causes the vm to mount disks by\n    enable_disk_uuid = \"\"\n\n    # custom_configuration_parameters - (Optional) Map of values that is set as\n    custom_configuration_parameters = \"\"\n\n    # skip_customization - (Optional) Skip virtual machine customization (useful\n    skip_customization = \"\"\n\n    # wait_for_customization_timeout - (Optional) The amount of time, in minutes,\n    wait_for_customization_timeout = \"\"\n\n    # wait_for_guest_net - (Optional) Whether or not to wait for a VM to have\n    wait_for_guest_net = \"\"\n\n    # network_interface - (Optional) `network_interface`s has a gateway assigned, or if all interfaces have been\n    network_interface = \"\"\n\n    # annotation - (Optional) Edit the annotation notes field\n    annotation = \"\"\n\n    # tags - (Optional) The IDs of any tags to attach to this resource. See\n    tags = \"\"\n\n    # adapter_type - (Optional) The adapter type on the network interface. Can be\n    adapter_type = \"\"\n\n    # mac_address - (Optional) Manual MAC address to assign to this network\n    mac_address = \"\"\n\n    # ip_address - (Optional) __Deprecated, please use `ipv4_address` instead__.\n    ip_address = \"\"\n\n    # subnet_mask - (Optional) __Deprecated, please use `ipv4_prefix_length` instead__.\n    subnet_mask = \"\"\n\n    # product_key - (Optional) Serial number for new installation of Windows.\n    product_key = \"\"\n\n    # admin_password - (Optional) The password for the new `administrator`\n    admin_password = \"\"\n\n    # domain - (Optional) Domain that the new machine will be placed into. If\n    domain = \"\"\n\n    # domain - (Optional) `domain`, `domain_user`, and `domain_user_password` are not all set, all\n    domain = \"\"\n\n    # domain_user - (Optional) User that is a member of the specified domain.\n    domain_user = \"\"\n\n    # domain_user_password - (Optional) Password for domain user, in plain text.\n    domain_user_password = \"\"\n\n    # Exported Attributes\n    # \"id\" - The instance ID.\n    # \"uuid\" - The instance UUID.\n    # \"moid\" - The instance MOID (Managed Object Reference ID).\n    # \"name\" - See Argument Reference above.\n    # \"vcpu\" - See Argument Reference above.\n    # \"memory\" - See Argument Reference above.\n    # \"datacenter\" - See Argument Reference above.\n    # \"network_interface/label\" - See Argument Reference above.\n    # \"network_interface/ipv4_address\" - See Argument Reference above.\n    # \"network_interface/ipv4_prefix_length\" - See Argument Reference above.\n    # \"network_interface/ipv6_address\" - Assigned static IPv6 address.\n    # \"network_interface/ipv6_prefix_length\" - Prefix length of assigned static\n    # \"power_state\" - The power state of the virtual machine. Can be one of\n    # \"poweredOff\", \"poweredOn\", or \"suspended\".\n}",
        "description": "Provides a VMware vSphere virtual machine resource. This can be used to create,\nmodify, and delete virtual machines.",
        "prefix": "vsphere-resource-vm-virtual-machine"
    },
    "vsphere-resource-vm-virtual-machine-snapshot": {
        "body": "resource \"vsphere_virtual_machine_snapshot\" \"$1\" {\n    # quiesce - (Required) If set to `true`, and the virtual machine is powered\n    quiesce = \"\"\n\n    # memory - (Required) If set to `true`, a dump of the internal state of the\n    memory = \"\"\n\n    # description - (Required) A description for the snapshot.\n    description = \"\"\n\n    # snapshot_name - (Required) The name of the snapshot.\n    snapshot_name = \"\"\n\n    # virtual_machine_uuid - (Required) The virtual machine UUID.\n    virtual_machine_uuid = \"\"\n\n    # remove_children - (Optional) If set to `true`, the entire snapshot subtree\n    remove_children = \"\"\n\n    # consolidate - (Optional) If set to `true`, the delta disks involved in this\n    consolidate = \"\"\n\n    # Exported Attributes\n}",
        "description": "The `vsphere_virtual_machine_snapshot` resource can be used to manage snapshots\nfor a virtual machine. For more information on managing snapshots and how they work in VMware, see\n[here][ext-vm-snapshot-management]. ~> **NOTE:** A snapshot in VMware differs from traditional disk snapshots in\nthat the actual running state of the virtual machine can be taken with the\nsnapshot as well, all non-independent disks are included in the snapshot\n(including any disks that have been attached externally but are not\nindependent), and VM and disk activity post-snapshot is not included in the\noriginal state. Use this resource with care! VMware nor HashiCorp recommends\nretaining snapshots for a extended period of time and does NOT recommend using\nthem as as backup feature. For more information on the limitation of virtual\nmachine snapshots, see [here][ext-vm-snap-limitations].",
        "prefix": "vsphere-resource-vm-virtual-machine-snapshot"
    }
}