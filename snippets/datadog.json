{
    "datadog-resource-downtime": {
        "body": "resource \"datadog_downtime\" \"$1\" {\n    # scope - (Required) A list of items to apply the downtime to, e.g. host:X\n    scope = \"\"\n\n    # active - (Optional) A flag indicating if the downtime is active now.\n    active = \"\"\n\n    # disabled - (Optional) A flag indicating if the downtime was disabled.\n    disabled = \"\"\n\n    # start - (Optional) POSIX timestamp to start the downtime.\n    start = \"\"\n\n    # start_date - (Optional) String representing date and time to start the downtime in RFC3339 format.\n    start_date = \"\"\n\n    # end - (Optional) POSIX timestamp to end the downtime.\n    end = \"\"\n\n    # end_date - (Optional) String representing date and time to end the downtime in RFC3339 format.\n    end_date = \"\"\n\n    # recurrence - (Optional) A dictionary to configure the downtime to be recurring.\n    recurrence = \"\"\n\n    # type - (Optional) days, weeks, months, or years\n    type = \"\"\n\n    # period - (Optional) How often to repeat as an integer. For example to repeat every 3 days, select a type of days and a period of 3.\n    period = \"\"\n\n    # week_days - (Optional) A list of week days to repeat on. Choose from: Mon, Tue, Wed, Thu, Fri, Sat or Sun. Only applicable when type is weeks. First letter must be capitalized.\n    week_days = \"\"\n\n    # until_occurrences - (Optional) How many times the downtime will be rescheduled. `until_occurrences` and `until_date` are mutually exclusive.\n    until_occurrences = \"\"\n\n    # until_date - (Optional) The date at which the recurrence should end as a POSIX timestamp. `until_occurrences` and `until_date` are mutually exclusive.\n    until_date = \"\"\n\n    # message - (Optional) A message to include with notifications for this downtime.\n    message = \"\"\n\n    # monitor_id - (Optional) Reference to which monitor this downtime is applied. When scheduling downtime for a given monitor, datadog changes `silenced` property of the monitor  to match the `end` POSIX timestamp.\n    monitor_id = \"\"\n\n    # Exported Attributes\n    # \"id\" - ID of the Datadog downtime\n}",
        "description": "Provides a Datadog downtime resource. This can be used to create and manage Datadog downtimes.",
        "prefix": "datadog-resource-downtime"
    },
    "datadog-resource-integration_aws": {
        "body": "resource \"datadog_integration_aws\" \"$1\" {\n    # role_name - (Required) Your Datadog role delegation name.\n    role_name = \"\"\n\n    # account_id - (Required) Your AWS Account ID without dashes.\n    account_id = \"\"\n\n    # filter_tags - (Optional) Array of EC2 tags (in the form `key:value`) defines a filter that Datadog use when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used. Only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. Host matching a given tag can also be excluded by adding `!` before the tag. e.x. `env:production,instance-type:c1.*,!region:us-east-1`\n    filter_tags = \"\"\n\n    # host_tags - (Optional) (Optinal) Array of tags (in the form key:value) to add to all hosts and metrics reporting through this integration.\n    host_tags = \"\"\n\n    # account_specific_namespace_rules - (Optional) (Optinal) Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be found at the [available namespace rules API endpoint](https://api.datadoghq.com/api/v1/integration/aws/available_namespace_rules).\n    account_specific_namespace_rules = \"\"\n\n    # host_tags - (Optional) (Optinal) Array of tags (in the form key:value) to add to all hosts and metrics reporting through this integration.\n    host_tags = \"\"\n\n    # Exported Attributes\n    # \"external_id\" - AWS External ID\n    # \"host_tags\" - (Optinal) Array of tags (in the form key:value) to add to all hosts and metrics reporting through this integration.\n}",
        "description": "Provides a Datadog - Amazon Web Services integration resource. This can be used to create and manage Datadog - Amazon Web Services integration. Update operations are currently not supported with datadog API so any change forces a new resource.",
        "prefix": "datadog-resource-integration_aws"
    },
    "datadog-resource-integration_gcp": {
        "body": "resource \"datadog_integration_gcp\" \"$1\" {\n    # client_id - (Required) Your ID found in your JSON service account key.\n    client_id = \"\"\n\n    # client_email - (Required) Your email found in your JSON service account key.\n    client_email = \"\"\n\n    # private_key - (Required) Your private key name found in your JSON service account key.\n    private_key = \"\"\n\n    # private_key_id - (Required) Your private key ID found in your JSON service account key.\n    private_key_id = \"\"\n\n    # project_id - (Required) Your Google Cloud project ID found in your JSON service account key.\n    project_id = \"\"\n\n    # host_filters - (Optional) Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n    host_filters = \"\"\n\n    # Exported Attributes\n    # \"project_id\" - Google Cloud project ID\n    # \"client_email\" - Google Cloud project service account email\n    # \"host_filters\" - Host filters\n}",
        "description": "Provides a Datadog - Google Cloud Platform integration resource. This can be used to create and manage Datadog - Google Cloud Platform integration.",
        "prefix": "datadog-resource-integration_gcp"
    },
    "datadog-resource-metric_metadata": {
        "body": "resource \"datadog_metric_metadata\" \"$1\" {\n    # metric - (Required) The name of the metric.\n    metric = \"\"\n\n    # description - (Optional) A description of the metric.\n    description = \"\"\n\n    # short_name - (Optional) A short name of the metric.\n    short_name = \"\"\n\n    # unit - (Optional) Primary unit of the metric such as 'byte' or 'operation'.\n    unit = \"\"\n\n    # per_unit - (Optional) 'Per' unit of the metric such as 'second' in 'bytes per second'.\n    per_unit = \"\"\n\n    # statsd_interval - (Optional) If applicable, stasd flush interval in seconds for the metric.\n    statsd_interval = \"\"\n\n    # Exported Attributes\n}",
        "description": "Provides a Datadog metric_metadata resource. This can be used to manage a metric's metadata.",
        "prefix": "datadog-resource-metric_metadata"
    },
    "datadog-resource-monitor": {
        "body": "resource \"datadog_monitor\" \"$1\" {\n    # message - (Required) A message to include with notifications for this monitor.\n    message = \"\"\n\n    # query - (Required) The monitor query to notify on. Note this is not the same query you see in the UI and\n    query = \"\"\n\n    # name - (Required) Name of Datadog monitor\n    name = \"\"\n\n    # type - (Required) The type of the monitor, chosen from:\n    type = \"\"\n\n    # composite - (Optional) `composite`\n    composite = \"\"\n\n    # escalation_message - (Optional) A message to include with a re-notification. Supports the '@username'\n    escalation_message = \"\"\n\n    # thresholds - (Optional) Metric alerts: A dictionary of thresholds by threshold type. Currently we have four threshold types for metric alerts: critical, critical recovery, warning, and warning recovery. Critical is defined in the query, but can also be specified in this option. Warning and recovery thresholds can only be specified using the thresholds option. Example usage:   thresholds {\n    thresholds = \"\"\n\n    # thresholds - (Optional) Metric alerts: A dictionary of thresholds by threshold type. Currently we have four threshold types for metric alerts: critical, critical recovery, warning, and warning recovery. Critical is defined in the query, but can also be specified in this option. Warning and recovery thresholds can only be specified using the thresholds option. Example usage:   thresholds {\n    thresholds = \"\"\n\n    # thresholds - (Optional) Metric alerts: A dictionary of thresholds by threshold type. Currently we have four threshold types for metric alerts: critical, critical recovery, warning, and warning recovery. Critical is defined in the query, but can also be specified in this option. Warning and recovery thresholds can only be specified using the thresholds option. Example usage:   thresholds {\n    thresholds = \"\"\n\n    # notify_no_data - (Optional) A boolean indicating whether this monitor will notify when data stops reporting. Defaults   to false.\n    notify_no_data = \"\"\n\n    # new_host_delay - (Optional) Time (in seconds) to allow a host to boot and\n    new_host_delay = \"\"\n\n    # notify_no_data - (Optional) A boolean indicating whether this monitor will notify when data stops reporting. Defaults   to false.\n    notify_no_data = \"\"\n\n    # evaluation_delay - (Optional) `evaluation_delay` (Optional, only applies to metric alert) Time (in seconds) to delay evaluation, as a non-negative integer.\n    evaluation_delay = \"\"\n\n    # notify_no_data - (Optional) A boolean indicating whether this monitor will notify when data stops reporting. Defaults   to false.\n    notify_no_data = \"\"\n\n    # no_data_timeframe - (Optional) The number of minutes before a monitor will notify when data stops reporting. Must be at\n    no_data_timeframe = \"\"\n\n    # notify_no_data - (Optional) A boolean indicating whether this monitor will notify when data stops reporting. Defaults   to false.\n    notify_no_data = \"\"\n\n    # renotify_interval - (Optional) The number of minutes after the last notification before a monitor will re-notify\n    renotify_interval = \"\"\n\n    # notify_no_data - (Optional) A boolean indicating whether this monitor will notify when data stops reporting. Defaults   to false.\n    notify_no_data = \"\"\n\n    # notify_audit - (Optional) A boolean indicating whether tagged users will be notified on changes to this monitor.\n    notify_audit = \"\"\n\n    # notify_no_data - (Optional) A boolean indicating whether this monitor will notify when data stops reporting. Defaults   to false.\n    notify_no_data = \"\"\n\n    # timeout_h - (Optional) The number of hours of the monitor not reporting data before it will automatically resolve\n    timeout_h = \"\"\n\n    # notify_no_data - (Optional) A boolean indicating whether this monitor will notify when data stops reporting. Defaults   to false.\n    notify_no_data = \"\"\n\n    # include_tags - (Optional) A boolean indicating whether notifications from this monitor will automatically insert its\n    include_tags = \"\"\n\n    # notify_no_data - (Optional) A boolean indicating whether this monitor will notify when data stops reporting. Defaults   to false.\n    notify_no_data = \"\"\n\n    # require_full_window - (Optional) A boolean indicating whether this monitor needs a full window of data before it's evaluated.\n    require_full_window = \"\"\n\n    # notify_no_data - (Optional) A boolean indicating whether this monitor will notify when data stops reporting. Defaults   to false.\n    notify_no_data = \"\"\n\n    # locked - (Optional) A boolean indicating whether changes to to this monitor should be restricted to the creator or admins. Defaults to False.\n    locked = \"\"\n\n    # notify_no_data - (Optional) A boolean indicating whether this monitor will notify when data stops reporting. Defaults   to false.\n    notify_no_data = \"\"\n\n    # tags - (Optional) A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n    tags = \"\"\n\n    # notify_no_data - (Optional) A boolean indicating whether this monitor will notify when data stops reporting. Defaults   to false.\n    notify_no_data = \"\"\n\n    # silenced - (Optional) Each scope will be muted until the given POSIX timestamp or forever if the value is 0.   To mute the alert completely:   silenced {\n    silenced = \"\"\n\n    # Exported Attributes\n    # \"id\" - ID of the Datadog monitor\n    # \"silenced\" (Optional) Each scope will be muted until the given POSIX timestamp or forever if the value is 0.   To mute the alert completely:   silenced {\n    \"*\" =  0\n  }\n\n   To mute role:db for a short time:   silenced {\n    \"role:db\" = 1412798116\n  }\n}",
        "description": "Provides a Datadog monitor resource. This can be used to create and manage Datadog monitors.",
        "prefix": "datadog-resource-monitor"
    },
    "datadog-resource-screenboard": {
        "body": "resource \"datadog_screenboard\" \"$1\" {\n    # widget - (Required) Nested block describing a widget. The structure of this block is described below. Multiple widget blocks are allowed within a datadog_screenboard resource.\n    widget = \"\"\n\n    # title - (Required) The name of the screenboard.\n    title = \"\"\n\n    # height - (Optional) The screenboard's height.\n    height = \"\"\n\n    # width - (Optional) The screenboard's width.\n    width = \"\"\n\n    # read_only - (Optional) The read-only status of the screenboard. Default is false.\n    read_only = \"\"\n\n    # shared - (Optional) Whether the screenboard is shared or not. Default is false.\n    shared = \"\"\n\n    # template_variable - (Optional) Nested block describing a template variable. The structure of this block is described below. Multiple template_variable blocks are allowed within a datadog_screenboard resource.\n    template_variable = \"\"\n\n    # Exported Attributes\n    # \"id\" - The unique ID of this screenboard in your Datadog account. The web interface URL to this screenboard can be generated by appending this ID to \"https://app.datadoghq.com/screen/\"\n}",
        "description": "Provides a Datadog screenboard resource. This can be used to create and manage Datadog screenboards.",
        "prefix": "datadog-resource-screenboard"
    },
    "datadog-resource-timeboard": {
        "body": "resource \"datadog_timeboard\" \"$1\" {\n    # graph - (Required) Nested block describing a graph definition. The structure of this block is described below. Multiple graph blocks are allowed within a datadog_timeboard resource.\n    graph = \"\"\n\n    # description - (Required) A description of the dashboard's content.\n    description = \"\"\n\n    # title - (Required) The name of the dashboard.\n    title = \"\"\n\n    # read_only - (Optional) The read-only status of the timeboard. Default is false.\n    read_only = \"\"\n\n    # template_variable - (Optional) Nested block describing a template variable. The structure of this block is described below. Multiple template_variable blocks are allowed within a datadog_timeboard resource.\n    template_variable = \"\"\n\n    # Exported Attributes\n    # \"id\" - The unique ID of this timeboard in your Datadog account. The web interface URL to this timeboard can be generated by appending this ID to \"\"https://app.datadoghq.com/dash/\"\"\n}",
        "description": "Provides a Datadog timeboard resource. This can be used to create and manage Datadog timeboards.",
        "prefix": "datadog-resource-timeboard"
    },
    "datadog-resource-user": {
        "body": "resource \"datadog_user\" \"$1\" {\n    # name - (Required) Name for user\n    name = \"\"\n\n    # handle - (Required) The user handle, must be a valid email.\n    handle = \"\"\n\n    # email - (Required) Email address for user\n    email = \"\"\n\n    # disabled - (Optional) Whether the user is disabled\n    disabled = \"\"\n\n    # is_admin - (Optional) (Deprecated) (Optional) Whether the user is an administrator\n    is_admin = \"\"\n\n    # role - (Optional) (Deprecated) Role description for user. **Warning**: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan.\n    role = \"\"\n\n    # Exported Attributes\n    # \"disabled\" - Returns true if Datadog user is disabled (NOTE: Datadog does not actually delete users so this will be true for those as well)\n    # \"id\" - ID of the Datadog user\n    # \"verified\" - Returns true if Datadog user is verified\n}",
        "description": "Provides a Datadog user resource. This can be used to create and manage Datadog users.",
        "prefix": "datadog-resource-user"
    }
}