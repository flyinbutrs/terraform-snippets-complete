{
    "fastly-datasource-ip_ranges": {
        "body": "data \"fastly_ip_ranges\" \"$1\" {\n    # Exported Attributes\n    # \"cidr_blocks\" - The lexically ordered list of CIDR blocks.\n}",
        "description": "Use this data source to get the [IP ranges][1] of Fastly edge nodes.",
        "prefix": "fastly-datasource-ip_ranges"
    },
    "fastly-resource-service-v1": {
        "body": "resource \"service_v1\" \"$1\" {\n    # content - (Required) The custom VCL code to upload.\n    content = \"\"\n\n    # name - (Required) A unique name for this configuration block.\n    name = \"\"\n\n    # name - (Required) A unique name to identify this Response Object.\n    name = \"\"\n\n    # secret_key - (Required) The secret key associated with the target gcs bucket on your account. You may optionally provide this secret via an environment variable, `FASTLY_GCS_SECRET_KEY`.\n    secret_key = \"\"\n\n    # bucket_name - (Required) The name of the bucket in which to store the logs.\n    bucket_name = \"\"\n\n    # email - (Required) The email address associated with the target GCS bucket on your account. You may optionally provide this secret via an environment variable, `FASTLY_GCS_EMAIL`.\n    email = \"\"\n\n    # name - (Required) A unique name to identify this GCS endpoint.\n    name = \"\"\n\n    # url - (Required) The URL to Sumologic collector endpoint\n    url = \"\"\n\n    # name - (Required) A unique name to identify this Sumologic endpoint.\n    name = \"\"\n\n    # port - (Required) The port associated with the address where the Papertrail endpoint can be accessed.\n    port = \"\"\n\n    # address - (Required) The address of the Papertrail endpoint.\n    address = \"\"\n\n    # name - (Required) A unique name to identify this Papertrail endpoint.\n    name = \"\"\n\n    # name - (Required) A unique name to identify this S3 Logging Bucket.\n    name = \"\"\n\n    # name - (Required) The domain for this request setting.\n    name = \"\"\n\n    # path - (Required) The path to check.\n    path = \"\"\n\n    # host - (Required) Address of the host to check.\n    host = \"\"\n\n    # name - (Required) A unique name to identify this Healthcheck.\n    name = \"\"\n\n    # destination - (Required) The name of the header that is going to be affected by the Action.\n    destination = \"\"\n\n    # type - (Required) The Request type on which to apply the selected Action; must be one of `request`, `fetch`, `cache` or `response`.\n    type = \"\"\n\n    # action - (Required) The Header manipulation action to take; must be one of\n    action = \"\"\n\n    # name - (Required) Unique name for this header attribute.\n    name = \"\"\n\n    # name - (Required) A unique name.\n    name = \"\"\n\n    # action - (Required) One of `cache`, `pass`, or `restart`, as defined\n    action = \"\"\n\n    # name - (Required) Unique name for this Cache Setting.\n    name = \"\"\n\n    # type - (Required) Type of condition, either `REQUEST` (req), `RESPONSE`\n    type = \"\"\n\n    # priority - (Required) A number used to determine the order in which multiple\n    priority = \"\"\n\n    # statement - (Required) The statement used to determine if the condition is met.\n    statement = \"\"\n\n    # name - (Required) The unique name for the condition.\n    name = \"\"\n\n    # name - (Required) The domain to which this Service will respond.\n    name = \"\"\n\n    # gzip - (Required) A set of gzip rules to control automatic gzipping of\n    gzip = \"\"\n\n    # domain - (Required) A set of Domain names to serve as entry points for your\n    domain = \"\"\n\n    # name - (Required) The unique name for the Service to create.\n    name = \"\"\n\n    # backend - (Optional) A set of Backends to service requests from your Domains.\n    backend = \"\"\n\n    # vcl - (Optional) `vcl` argument below\n    vcl = \"\"\n\n    # condition - (Optional) A set of conditions to add logic to any basic\n    condition = \"\"\n\n    # cache_setting - (Optional) A set of Cache Settings, allowing you to override\n    cache_setting = \"\"\n\n    # header - (Optional) A set of Headers to manipulate for each request. Defined\n    header = \"\"\n\n    # healthcheck - (Optional) Automated healthchecks on the cache that can change how fastly interacts with the cache based on its health.\n    healthcheck = \"\"\n\n    # default_host - (Optional) The default hostname.\n    default_host = \"\"\n\n    # default_ttl - (Optional) The default Time-to-live (TTL) for\n    default_ttl = \"\"\n\n    # force_destroy - (Optional) Services that are active cannot be destroyed. In\n    force_destroy = \"\"\n\n    # request_setting - (Optional) A set of Request modifiers. Defined below\n    request_setting = \"\"\n\n    # papertrail - (Optional) A Papertrail endpoint to send streaming logs too.\n    papertrail = \"\"\n\n    # sumologic - (Optional) A Sumologic endpoint to send streaming logs too.\n    sumologic = \"\"\n\n    # gcslogging - (Optional) A gcs endpoint to send streaming logs too.\n    gcslogging = \"\"\n\n    # response_object - (Optional) Allows you to create synthetic responses that exist entirely on the varnish machine. Useful for creating error or maintenance pages that exists outside the scope of your datacenter. Best when used with Condition objects.\n    response_object = \"\"\n\n    # vcl - (Optional) A set of custom VCL configuration blocks. The\n    vcl = \"\"\n\n    # comment - (Optional) An optional comment about the Domain.\n    comment = \"\"\n\n    # name - (Optional) (Required, string) Name for this Backend. Must be unique to this Service.\n    name = \"\"\n\n    # address - (Optional) (Required, string) An IPv4, hostname, or IPv6 address for the Backend.\n    address = \"\"\n\n    # auto_loadbalance - (Optional) (Optional, boolean) Denotes if this Backend should be\n    auto_loadbalance = \"\"\n\n    # between_bytes_timeout - (Optional) How long to wait between bytes in milliseconds. Default `10000`.\n    between_bytes_timeout = \"\"\n\n    # connect_timeout - (Optional) How long to wait for a timeout in milliseconds.\n    connect_timeout = \"\"\n\n    # error_threshold - (Optional) Number of errors to allow before the Backend is marked as down. Default `0`.\n    error_threshold = \"\"\n\n    # first_byte_timeout - (Optional) How long to wait for the first bytes in milliseconds. Default `15000`.\n    first_byte_timeout = \"\"\n\n    # max_conn - (Optional) Maximum number of connections for this Backend.\n    max_conn = \"\"\n\n    # port - (Optional) The port number on which the Backend responds. Default `80`.\n    port = \"\"\n\n    # request_condition - (Optional) (Optional, string) Name of already defined `condition`, which if met, will select this backend during a request.\n    request_condition = \"\"\n\n    # ssl_check_cert - (Optional) Be strict about checking SSL certs. Default `true`.\n    ssl_check_cert = \"\"\n\n    # ssl_hostname - (Optional) (Optional, deprecated by Fastly) Used for both SNI during the TLS handshake and to validate the cert.\n    ssl_hostname = \"\"\n\n    # ssl_cert_hostname - (Optional) Overrides ssl_hostname, but only for cert verification. Does not affect SNI at all.\n    ssl_cert_hostname = \"\"\n\n    # ssl_sni_hostname - (Optional) Overrides ssl_hostname, but only for SNI in the handshake. Does not affect cert validation at all.\n    ssl_sni_hostname = \"\"\n\n    # shield - (Optional) The POP of the shield designated to reduce inbound load.\n    shield = \"\"\n\n    # weight - (Optional) The [portion of traffic](https://docs.fastly.com/guides/performance-tuning/load-balancing-configuration.html#how-weight-affects-load-balancing) to send to this Backend. Each Backend receives `weight / total` of the traffic. Default `100`.\n    weight = \"\"\n\n    # healthcheck - (Optional) Name of a defined `healthcheck` to assign to this backend.\n    healthcheck = \"\"\n\n    # cache_condition - (Optional) Name of already defined `condition` used to test whether this settings object should be used. This `condition` must be of type `CACHE`.\n    cache_condition = \"\"\n\n    # stale_ttl - (Optional) Max \"Time To Live\" for stale (unreachable) objects.\n    stale_ttl = \"\"\n\n    # ttl - (Optional) The Time-To-Live (TTL) for the object.\n    ttl = \"\"\n\n    # content_types - (Optional) The content-type for each type of content you wish to\n    content_types = \"\"\n\n    # extensions - (Optional) File extensions for each file type to dynamically\n    extensions = \"\"\n\n    # cache_condition - (Optional) Name of already defined `condition` controlling when this gzip configuration applies. This `condition` must be of type `CACHE`. For detailed information about Conditionals,\n    cache_condition = \"\"\n\n    # set - (Optional) `set`, `append`, `delete`, `regex`, or `regex_repeat`.\n    set = \"\"\n\n    # ignore_if_set - (Optional) Do not add the header if it is already present. (Only applies to the `set` action.). Default `false`.\n    ignore_if_set = \"\"\n\n    # source - (Optional) Variable to be used as a source for the header\n    source = \"\"\n\n    # regex - (Optional) Regular expression to use (Only applies to the `regex` and `regex_repeat` actions.)\n    regex = \"\"\n\n    # substitution - (Optional) Value to substitute in place of regular expression. (Only applies to the `regex` and `regex_repeat` actions.)\n    substitution = \"\"\n\n    # priority - (Optional) Lower priorities execute first. Default: `100`.\n    priority = \"\"\n\n    # request_condition - (Optional) Name of already defined `condition` to apply. This `condition` must be of type `REQUEST`.\n    request_condition = \"\"\n\n    # cache_condition - (Optional) Name of already defined `condition` to apply. This `condition` must be of type `CACHE`.\n    cache_condition = \"\"\n\n    # response_condition - (Optional) Name of already defined `condition` to apply. This `condition` must be of type `RESPONSE`. For detailed information about Conditionals,\n    response_condition = \"\"\n\n    # check_interval - (Optional) How often to run the Healthcheck in milliseconds. Default `5000`.\n    check_interval = \"\"\n\n    # expected_response - (Optional) The status code expected from the host. Default `200`.\n    expected_response = \"\"\n\n    # http_version - (Optional) Whether to use version 1.0 or 1.1 HTTP. Default `1.1`.\n    http_version = \"\"\n\n    # initial - (Optional) When loading a config, the initial number of probes to be seen as OK. Default `2`.\n    initial = \"\"\n\n    # method - (Optional) Which HTTP method to use. Default `HEAD`.\n    method = \"\"\n\n    # threshold - (Optional) How many Healthchecks must succeed to be considered healthy. Default `3`.\n    threshold = \"\"\n\n    # timeout - (Optional) Timeout in milliseconds. Default `500`.\n    timeout = \"\"\n\n    # window - (Optional) The number of most recent Healthcheck queries to keep for this Healthcheck. Default `5`.\n    window = \"\"\n\n    # request_condition - (Optional) Name of already defined `condition` to\n    request_condition = \"\"\n\n    # max_stale_age - (Optional) How old an object is allowed to be to serve\n    max_stale_age = \"\"\n\n    # force_miss - (Optional) Force a cache miss for the request. If specified,\n    force_miss = \"\"\n\n    # force_ssl - (Optional) Forces the request to use SSL (Redirects a non-SSL request to SSL).\n    force_ssl = \"\"\n\n    # action - (Optional) Allows you to terminate request handling and immediately\n    action = \"\"\n\n    # bypass_busy_wait - (Optional) Disable collapsed forwarding, so you don't wait\n    bypass_busy_wait = \"\"\n\n    # hash_keys - (Optional) Comma separated list of varnish request object fields\n    hash_keys = \"\"\n\n    # xff - (Optional) X-Forwarded-For, should be `clear`, `leave`, `append`,\n    xff = \"\"\n\n    # append_all - (Optional) `append_all`, or `overwrite`. Default `append`.\n    append_all = \"\"\n\n    # timer_support - (Optional) Injects the X-Timer info into the request for\n    timer_support = \"\"\n\n    # geo_headers - (Optional) Injects Fastly-Geo-Country, Fastly-Geo-City, and\n    geo_headers = \"\"\n\n    # default_host - (Optional) Sets the host header.\n    default_host = \"\"\n\n    # bucket_name - (Optional) An optional comment about the Domain.\n    bucket_name = \"\"\n\n    # path - (Optional) Path to store the files. Must end with a trailing slash.\n    path = \"\"\n\n    # domain - (Optional) If you created the S3 bucket outside of `us-east-1`,\n    domain = \"\"\n\n    # period - (Optional) How frequently the logs should be transferred, in\n    period = \"\"\n\n    # gzip_level - (Optional) Level of GZIP compression, from `0-9`. `0` is no\n    gzip_level = \"\"\n\n    # format - (Optional) Apache-style string or VCL variables to use for log formatting. Defaults to Apache Common Log format (`%h %l %u %t %r %>s`)\n    format = \"\"\n\n    # message_type - (Optional) How the message should be formatted; one of: `classic`, `loggly`, `logplex` or `blank`.  Default `classic`.\n    message_type = \"\"\n\n    # timestamp_format - (Optional) `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`).\n    timestamp_format = \"\"\n\n    # response_condition - (Optional) Name of already defined `condition` to apply. This `condition` must be of type `RESPONSE`. For detailed information about Conditionals,\n    response_condition = \"\"\n\n    # format - (Optional) Apache-style string or VCL variables to use for log formatting. Defaults to Apache Common Log format (`%h %l %u %t %r %>s`)\n    format = \"\"\n\n    # response_condition - (Optional) Name of already defined `condition` to apply. This `condition` must be of type `RESPONSE`. For detailed information about Conditionals,\n    response_condition = \"\"\n\n    # format - (Optional) Apache-style string or VCL variables to use for log formatting. Defaults to Apache Common Log format (`%h %l %u %t %r %>s`)\n    format = \"\"\n\n    # format_version - (Optional) The version of the custom logging format used for the configured endpoint. Can be either 1 (the default, version 1 log format) or 2 (the version 2 log format).\n    format_version = \"\"\n\n    # response_condition - (Optional) Name of already defined `condition` to apply. This `condition` must be of type `RESPONSE`. For detailed information about Conditionals, see [Fastly's Documentation on Conditionals][fastly-conditionals].\n    response_condition = \"\"\n\n    # message_type - (Optional) How the message should be formatted. One of: classic, loggly, logplex, blank. See [Fastly's Documentation on Sumologic][fastly-sumologic]\n    message_type = \"\"\n\n    # path - (Optional) Path to store the files. Must end with a trailing slash.\n    path = \"\"\n\n    # period - (Optional) How frequently the logs should be transferred, in\n    period = \"\"\n\n    # gzip_level - (Optional) Level of GZIP compression, from `0-9`. `0` is no\n    gzip_level = \"\"\n\n    # format - (Optional) Apache-style string or VCL variables to use for log formatting. Defaults to Apache Common Log format (`%h %l %u %t %r %>s`)\n    format = \"\"\n\n    # response_condition - (Optional) Name of already defined `condition` to apply. This `condition` must be of type `RESPONSE`. For detailed information about Conditionals, see [Fastly's Documentation on Conditionals][fastly-conditionals].\n    response_condition = \"\"\n\n    # status - (Optional) The HTTP Status Code. Default `200`.\n    status = \"\"\n\n    # response - (Optional) The HTTP Response. Default `Ok`.\n    response = \"\"\n\n    # content - (Optional) The content to deliver for the response object.\n    content = \"\"\n\n    # content_type - (Optional) The MIME type of the content.\n    content_type = \"\"\n\n    # request_condition - (Optional) Name of already defined `condition` to be checked during the request phase. If the condition passes then this object will be delivered. This `condition` must be of type `REQUEST`.\n    request_condition = \"\"\n\n    # cache_condition - (Optional) Name of already defined `condition` to check after we have retrieved an object. If the condition passes then deliver this Request Object instead. This `condition` must be of type `CACHE`. For detailed information about Conditionals,\n    cache_condition = \"\"\n\n    # main - (Optional) If `true`, use this block as the main configuration. If\n    main = \"\"\n\n    # false - (Optional) `false`, use this block as an includable library. Only a single VCL block can be\n    false = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the Service.\n    # \"name\" \u2013 Name of this service.\n    # \"active_version\" - The currently active version of your Fastly\n    # \"domain\" \u2013\u00a0Set of Domains. See above for details.\n    # \"backend\" \u2013\u00a0Set of Backends. See above for details.\n    # \"header\" \u2013\u00a0Set of Headers. See above for details.\n    # \"s3logging\" \u2013\u00a0Set of S3 Logging configurations. See above for details.\n    # \"papertrail\" \u2013\u00a0Set of Papertrail configurations. See above for details.\n    # \"response_object\" - Set of Response Object configurations. See above for details.\n    # \"vcl\" \u2013\u00a0Set of custom VCL configurations. See above for details.\n    # \"default_host\" \u2013\u00a0Default host specified.\n    # \"default_ttl\" - Default TTL.\n    # \"force_destroy\" - Force the destruction of the Service on delete.\n}",
        "description": "Provides a Fastly Service, representing the configuration for a website, app,\nAPI, or anything else to be served through Fastly. A Service encompasses Domains\nand Backends. The Service resource requires a domain name that is correctly set up to direct\ntraffic to the Fastly service. See Fastly's guide on [Adding CNAME Records][fastly-cname]\non their documentation site for guidance.",
        "prefix": "fastly-resource-service-v1"
    }
}