{
    "circonus-datasource-account": {
        "body": "data \"account\" \"$1\" {\n    # id - (Optional) The Circonus ID of a given account.\n    id = \"\"\n\n    # current - (Optional) Automatically use the current Circonus Account attached\n    current = \"\"\n\n    # Exported Attributes\n    # \"address1\" - The first line of the address associated with the account.\n    # \"address2\" - The second line of the address associated with the account.\n    # \"cc_email\" - An optionally specified email address used in the CC line of invoices.\n    # \"id\" - The Circonus ID of the selected Account.\n    # \"city\" - The city part of the address associated with the account.\n    # \"contact_groups\" - A list of IDs for each contact group in the account.\n    # \"country\" - The country of the user's address.\n    # \"description\" - Description of the account.\n    # \"invites\" - An list of users invited to use the platform.  Each element in the list has both an \"email\" and \"role\" attribute.\n    # \"name\" - The name of the account.\n    # \"owner\" - The Circonus ID of the user who owns this account.\n    # \"state_prov\" - The state or province of the address associated with the account.\n    # \"timezone\" - The timezone that events will be displayed in the web interface for this account.\n    # \"ui_base_url\" - The base URL of this account.\n    # \"usage\" - A list of account usage limits.  Each element in the list will have a \"limit\" attribute, a limit \"type\", and a \"used\" attribute.\n    # \"users\" - A list of users who have access to this account.  Each element in the list has both an \"id\" and a \"role\".  The \"id\" is a Circonus ID referencing the user.\n}",
        "description": "`circonus_account` provides\n[details](https://login.circonus.com/resources/api/calls/account) about a specific\n[Circonus Account](https://login.circonus.com/user/docs/Administration/Account). The `circonus_account` data source can be used for pulling various attributes\nabout a specific Circonus Account.",
        "prefix": "circonus-datasource-account"
    },
    "circonus-datasource-collector": {
        "body": "data \"collector\" \"$1\" {\n    # id - (Optional) The Circonus ID of a given collector.\n    id = \"\"\n\n    # Exported Attributes\n    # \"id\" - The Circonus ID of the selected Collector.\n    # \"details\" - A list of details about the individual Collector instances that make up the group of collectors.  See below for a list of attributes within each collector.\n    # \"latitude\" - The latitude of the selected Collector.\n    # \"longitude\" - The longitude of the selected Collector.\n    # \"name\" - The name of the selected Collector.\n    # \"tags\" - A list of tags assigned to the selected Collector.\n    # \"type\" - The of the selected Collector.  This value is either \"circonus\" for a Circonus-managed, public Collector, or \"enterprise\" for a private collector that is private to an account.\n}",
        "description": "`circonus_collector` provides\n[details](https://login.circonus.com/resources/api/calls/broker) about a specific\n[Circonus Collector](https://login.circonus.com/user/docs/Administration/Brokers). As well as validating a given Circonus ID, this resource can be used to discover\nthe additional details about a collector configured within the provider.  The\nresults of a `circonus_collector` API call can return more than one collector\nper Circonus ID.  Details of each individual collector in the group of\ncollectors can be found via the `details` attribute described below. ~> **NOTE regarding `cirocnus_collector`:** The `circonus_collector` data source\nactually queries and operates on Circonus \"brokers\" at the broker group level.\nThe `circonus_collector` is simply a renamed Circonus \"broker\" to make it clear\nwhat the function of the \"broker\" actually does: act as a fan-in agent that\neither pulls or has metrics pushed into it and funneled back through Circonus.",
        "prefix": "circonus-datasource-collector"
    },
    "circonus-resource-circonus_check": {
        "body": "resource \"circonus_check\" \"$1\" {\n    # target - (Required) A string containing the location of the thing being checked.  This value changes based on the check type.  For example, for an `http` check type this would be the URL you're checking. For a DNS check it would be the hostname you wanted to look up.\n    target = \"\"\n\n    # metric - (Required) A list of one or more `metric` configurations.  All metrics obtained from this check instance will be available as individual metric streams.  See below for a list of supported `metric` attrbutes.\n    metric = \"\"\n\n    # collector - (Required) A collector ID.  The collector(s) that are responsible for running a `circonus_check`. The `id` can be the Circonus ID for a Circonus collector (a.k.a. \"broker\") running in the cloud or an enterprise collector running in your datacenter.  One collection of metrics will be automatically created for each `collector` specified.\n    collector = \"\"\n\n    # active - (Optional) Whether or not the check is enabled or not (default `true`).\n    active = \"\"\n\n    # caql - (Optional) A [Circonus Analytics Query Language (CAQL)](https://login.circonus.com/user/docs/CAQL) check.  See below for details on how to configure a `caql` check.\n    caql = \"\"\n\n    # cloudwatch - (Optional) A [CloudWatch check](https://login.circonus.com/user/docs/Data/CheckTypes/CloudWatch) check. See below for details on how to configure a `cloudwatch` check.\n    cloudwatch = \"\"\n\n    # consul - (Optional) A native Consul check.  See below for details on how to configure a `consul` check.\n    consul = \"\"\n\n    # http - (Optional) A poll-based HTTP check.  See below for details on how to configure the `http` check.\n    http = \"\"\n\n    # httptrap - (Optional) An push-based HTTP check.  This check method expects clients to send a specially crafted HTTP JSON payload.  See below for details on how to configure the `httptrap` check.\n    httptrap = \"\"\n\n    # icmp_ping - (Optional) An ICMP ping check.  See below for details on how to configure the `icmp_ping` check.\n    icmp_ping = \"\"\n\n    # json - (Optional) A JSON check.  See below for details on how to configure the `json` check.\n    json = \"\"\n\n    # metric_limit - (Optional) Setting a metric limit will tell the Circonus backend to periodically look at the check to see if there are additional metrics the collector has seen that we should collect. It will not reactivate metrics previously collected and then marked as inactive. Values are `0` to disable, `-1` to enable all metrics or `N+` to collect up to the value `N` (both `-1` and `N+` can not exceed other account restrictions).\n    metric_limit = \"\"\n\n    # mysql - (Optional) A MySQL check.  See below for details on how to configure the `mysql` check.\n    mysql = \"\"\n\n    # name - (Optional) The name of the check that will be displayed in the web interface.\n    name = \"\"\n\n    # notes - (Optional) Notes about this check.\n    notes = \"\"\n\n    # period - (Optional) The period between each time the check is made in seconds.\n    period = \"\"\n\n    # postgresql - (Optional) A PostgreSQL check.  See below for details on how to configure the `postgresql` check.\n    postgresql = \"\"\n\n    # statsd - (Optional) A statsd check.  See below for details on how to configure the `statsd` check.\n    statsd = \"\"\n\n    # tags - (Optional) A list of tags assigned to this check.\n    tags = \"\"\n\n    # tcp - (Optional) A TCP check.  See below for details on how to configure the `tcp` check (includes TLS support).\n    tcp = \"\"\n\n    # timeout - (Optional) A floating point number representing the maximum number of seconds this check should wait for a result.  Defaults to `10.0`.\n    timeout = \"\"\n\n    # Exported Attributes\n}",
        "description": "The ``circonus_check`` resource creates and manages a\n[Circonus Check](https://login.circonus.com/resources/api/calls/check_bundle). ~> **NOTE regarding `cirocnus_check` vs a Circonus Check Bundle:** The\n`circonus_check` resource is implemented in terms of a\n[Circonus Check Bundle](https://login.circonus.com/resources/api/calls/check_bundle).\nThe `circonus_check` creates a higher-level abstraction over the implementation\nof a Check Bundle.  As such, the naming and structure does not map 1:1 with the\nunderlying Circonus API.",
        "prefix": "circonus-resource-circonus_check"
    },
    "circonus-resource-circonus_contact_group": {
        "body": "resource \"circonus_contact_group\" \"$1\" {\n    # name - (Required) The name of the contact group.\n    name = \"\"\n\n    # aggregation_window - (Optional) The aggregation window for batching up alert notifications.\n    aggregation_window = \"\"\n\n    # alert_option - (Optional) There is one `alert_option` per severity, where severity can be any number between 1 (high) and 5 (low).  If configured, the alerting system will remind or escalate alerts to further contact groups if an alert sent to this contact group is not acknowledged or resolved.  See below for details.\n    alert_option = \"\"\n\n    # email - (Optional) Zero or more `email` attributes may be present to dispatch email to Circonus users by referencing their user ID, or by specifying an email address.  See below for details on supported attributes.\n    email = \"\"\n\n    # http - (Optional) Zero or more `http` attributes may be present to dispatch [Webhook/HTTP requests](https://login.circonus.com/user/docs/Alerting/ContactGroups#WebhookNotifications) by Circonus.  See below for details on supported attributes.\n    http = \"\"\n\n    # irc - (Optional) Zero or more `irc` attributes may be present to dispatch IRC notifications to users.  See below for details on supported attributes.\n    irc = \"\"\n\n    # long_message - (Optional) The bulk of the message used in long form alert messages.\n    long_message = \"\"\n\n    # long_subject - (Optional) The subject used in long form alert messages.\n    long_subject = \"\"\n\n    # long_summary - (Optional) The brief summary used in long form alert messages.\n    long_summary = \"\"\n\n    # pager_duty - (Optional) Zero or more `pager_duty` attributes may be present to dispatch to [Pager Duty teams](https://login.circonus.com/user/docs/Alerting/ContactGroups#PagerDutyOptions). See below for details on supported attributes.\n    pager_duty = \"\"\n\n    # short_message - (Optional) The subject used in short form alert messages.\n    short_message = \"\"\n\n    # short_summary - (Optional) The brief summary used in short form alert messages.\n    short_summary = \"\"\n\n    # slack - (Optional) Zero or more `slack` attributes may be present to dispatch to Slack teams.  See below for details on supported attributes.\n    slack = \"\"\n\n    # sms - (Optional) Zero or more `sms` attributes may be present to dispatch SMS messages to Circonus users by referencing their user ID, or by specifying an SMS Phone Number.  See below for details on supported attributes.\n    sms = \"\"\n\n    # tags - (Optional) A list of tags attached to the Contact Group.\n    tags = \"\"\n\n    # victorops - (Optional) Zero or more `victorops` attributes may be present to dispatch to [VictorOps teams](https://login.circonus.com/user/docs/Alerting/ContactGroups#VictorOps). See below for details on supported attributes.\n    victorops = \"\"\n\n    # Exported Attributes\n}",
        "description": "The ``circonus_contact_group`` resource creates and manages a\n[Circonus Contact Group](https://login.circonus.com/user/docs/Alerting/ContactGroups).",
        "prefix": "circonus-resource-circonus_contact_group"
    },
    "circonus-resource-circonus_graph": {
        "body": "resource \"circonus_graph\" \"$1\" {\n    # name - (Required) The title of the graph.\n    name = \"\"\n\n    # description - (Optional) Description of what the graph is for.\n    description = \"\"\n\n    # graph_style - (Optional) How the graph should be rendered.  Valid options are `area` or `line` (default).\n    graph_style = \"\"\n\n    # left - (Optional) A map of graph left axis options.  Valid values in `left` include: `logarithmic` can be set to `0` (default) or `1`; `min` is the `min` Y axis value on the left; and `max` is the Y axis max value on the left.\n    left = \"\"\n\n    # line_style - (Optional) How the line should change between points.  Can be either `stepped` (default) or `interpolated`.\n    line_style = \"\"\n\n    # notes - (Optional) A place for storing notes about this graph.\n    notes = \"\"\n\n    # right - (Optional) A map of graph right axis options.  Valid values in `right` include: `logarithmic` can be set to `0` (default) or `1`; `min` is the `min` Y axis value on the right; and `max` is the Y axis max value on the right.\n    right = \"\"\n\n    # metric - (Optional) A list of metric streams to graph.  See below for options.\n    metric = \"\"\n\n    # metric_cluster - (Optional) A metric cluster to graph.  See below for options.\n    metric_cluster = \"\"\n\n    # tags - (Optional) A list of tags assigned to this graph.\n    tags = \"\"\n\n    # Exported Attributes\n}",
        "description": "The ``circonus_graph`` resource creates and manages a\n[Circonus Graph](https://login.circonus.com/user/docs/Visualization/Graph/Create). https://login.circonus.com/resources/api/calls/graph).",
        "prefix": "circonus-resource-circonus_graph"
    },
    "circonus-resource-circonus_metric": {
        "body": "resource \"circonus_metric\" \"$1\" {\n    # type - (Required) The type of metric.  This value must be present and can be one of the following values: `numeric`, `text`, `histogram`, `composite`, or `caql`.\n    type = \"\"\n\n    # name - (Required) The name of the metric.  A `name` must be unique within a `circonus_check` and its meaning is `circonus_check.type` specific.\n    name = \"\"\n\n    # active - (Optional) A boolean indicating if the metric is being filtered out at the `circonus_check`'s collector(s) or not.\n    active = \"\"\n\n    # tags - (Optional) A list of tags assigned to the metric.\n    tags = \"\"\n\n    # unit - (Optional) The unit of measurement for this `circonus_metric`.\n    unit = \"\"\n\n    # Exported Attributes\n}",
        "description": "The ``circonus_metric`` resource creates and manages a\nsingle [metric resource](https://login.circonus.com/resources/api/calls/metric)\nthat will be instantiated only once a referencing `circonus_check` has been\ncreated.",
        "prefix": "circonus-resource-circonus_metric"
    },
    "circonus-resource-circonus_metric_cluster": {
        "body": "resource \"circonus_metric_cluster\" \"$1\" {\n    # query - (Required) One or more `query` attributes must be present.  Each `query` must contain both a `definition` and a `type`.  See below for details on supported attributes.\n    query = \"\"\n\n    # name - (Required) The name of the metric cluster.  This name must be unique across all metric clusters in a given Circonus Account.\n    name = \"\"\n\n    # description - (Optional) A long-form description of the metric cluster.\n    description = \"\"\n\n    # tags - (Optional) A list of tags attached to the metric cluster.\n    tags = \"\"\n\n    # Exported Attributes\n}",
        "description": "The ``circonus_metric_cluster`` resource creates and manages a\n[Circonus Metric Cluster](https://login.circonus.com/user/docs/Data/View/MetricClusters).",
        "prefix": "circonus-resource-circonus_metric_cluster"
    },
    "circonus-resource-circonus_rule_set": {
        "body": "resource \"circonus_rule_set\" \"$1\" {\n    # metric_name - (Required) The name of the metric stream within a given check that this rule set is active on.\n    metric_name = \"\"\n\n    # if - (Required) One or more ordered predicate clauses that describe when Circonus should generate a notification.  See below for details on the structure of an `if` configuration clause.\n    if = \"\"\n\n    # check - (Required) The Circonus ID that this Rule Set will use to search for a metric stream to alert on.\n    check = \"\"\n\n    # link - (Optional) A link to external documentation (or anything else you feel is important) when a notification is sent.  This value will show up in email alerts and the Circonus UI.\n    link = \"\"\n\n    # metric_type - (Optional) The type of metric this rule set will operate on. Valid values are `numeric` (the default) and `text`.\n    metric_type = \"\"\n\n    # notes - (Optional) Notes about this rule set.\n    notes = \"\"\n\n    # parent - (Optional) A Circonus Metric ID that, if specified and active with a severity 1 alert, will silence this rule set until all of the severity 1 alerts on the parent clear.  This value must match the format `${check_id}_${metric_name}`.\n    parent = \"\"\n\n    # tags - (Optional) A list of tags assigned to this rule set.\n    tags = \"\"\n\n    # Exported Attributes\n}",
        "description": "The ``circonus_rule_set`` resource creates and manages a\n[Circonus Rule Set](https://login.circonus.com/resources/api/calls/rule_set).",
        "prefix": "circonus-resource-circonus_rule_set"
    }
}