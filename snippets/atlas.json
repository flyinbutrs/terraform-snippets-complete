{
    "terraform-enterprise-data-artifact": {
        "body": "data \"atlas_artifact\" \"$1\" {\n    # type - (Required) The type of artifact to query for.\n    type = \"\"\n\n    # name - (Required) Name of the artifact in Atlas. This is given in slug format like \"organization/artifact\".\n    name = \"\"\n\n    # build - (Optional) The build number responsible for creating the version of the artifact to filter on. This can be \"latest\", to find a matching artifact in the latest build, \"any\" to find a matching artifact in any build, or a specific number to pin to that build. If `build` and `version` are unspecified, `version` will default to \"latest\". Cannot be specified with `version`. Note: `build` is only present if Atlas builds the image.\n    build = \"\"\n\n    # version - (Optional)  The version of the artifact to filter on. This can be \"latest\", to match against the latest version, \"any\" to find a matching artifact in any version, or a specific number to pin to that version. Defaults to \"latest\" if neither `build` or `version` is specified. Cannot be specified with `build`.\n    version = \"\"\n\n    # metadata_keys - (Optional) If given, only an artifact containing the given keys will be returned. This is used to disambiguate when multiple potential artifacts match. An example is \"aws\" to filter on an AMI.\n    metadata_keys = \"\"\n\n    # metadata - (Optional) If given, only an artifact matching the metadata filters will be returned. This is used to disambiguate when multiple potential artifacts match. An example is \"arch\" = \"386\" to filter on architecture.\n    metadata = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the artifact. This could be an AMI ID, GCE Image ID, etc.\n    # \"metadata\" - (Optional) If given, only an artifact matching the metadata filters will be returned. This is used to disambiguate when multiple potential artifacts match. An example is \"arch\" = \"386\" to filter on architecture.\n    # \"file_url\" - For artifacts that are binaries, this is a download path.\n    # \"metadata\" - (Optional) If given, only an artifact matching the metadata filters will be returned. This is used to disambiguate when multiple potential artifacts match. An example is \"arch\" = \"386\" to filter on architecture.\n    # \"metadata_full\" - Contains the full metadata of the artifact. The keys are sanitized\n    # \"metadata\" - (Optional) If given, only an artifact matching the metadata filters will be returned. This is used to disambiguate when multiple potential artifacts match. An example is \"arch\" = \"386\" to filter on architecture.\n    # \"version_real\" - The matching version of the artifact\n    # \"metadata\" - (Optional) If given, only an artifact matching the metadata filters will be returned. This is used to disambiguate when multiple potential artifacts match. An example is \"arch\" = \"386\" to filter on architecture.\n    # \"slug\" - The artifact slug in Atlas\n    # \"metadata\" - (Optional) If given, only an artifact matching the metadata filters will be returned. This is used to disambiguate when multiple potential artifacts match. An example is \"arch\" = \"386\" to filter on architecture.\n}",
        "description": "Provides a [Data Source](/docs/configuration/data-sources.html) to access to deployment\nartifacts managed by Atlas. This can be used to dynamically configure instantiation\nand provisioning of resources. ~> **This provider is deprecated,** and the service it interacts with has been discontinued.",
        "prefix": "terraform-enterprise-data-artifact"
    },
    "terraform-enterprise-resource-artifact": {
        "body": "resource \"atlas_artifact\" \"$1\" {\n    # type - (Required) The type of artifact to query for.\n    type = \"\"\n\n    # name - (Required) Name of the artifact in Atlas. This is given in slug format like \"organization/artifact\".\n    name = \"\"\n\n    # build - (Optional) The build number responsible for creating the version of the artifact to filter on. This can be \"latest\", to find a matching artifact in the latest build, \"any\" to find a matching artifact in any build, or a specific number to pin to that build. If `build` and `version` are unspecified, `version` will default to \"latest\". Cannot be specified with `version`. Note: `build` is only present if Atlas builds the image.\n    build = \"\"\n\n    # version - (Optional)  The version of the artifact to filter on. This can be \"latest\", to match against the latest version, \"any\" to find a matching artifact in any version, or a specific number to pin to that version. Defaults to \"latest\" if neither `build` or `version` is specified. Cannot be specified with `build`.\n    version = \"\"\n\n    # metadata_keys - (Optional) If given, only an artifact containing the given keys will be returned. This is used to disambiguate when multiple potential artifacts match. An example is \"aws\" to filter on an AMI.\n    metadata_keys = \"\"\n\n    # metadata - (Optional) If given, only an artifact matching the metadata filters will be returned. This is used to disambiguate when multiple potential artifacts match. An example is \"arch\" = \"386\" to filter on architecture.\n    metadata = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the artifact. This could be an AMI ID, GCE Image ID, etc.\n    # \"metadata\" - (Optional) If given, only an artifact matching the metadata filters will be returned. This is used to disambiguate when multiple potential artifacts match. An example is \"arch\" = \"386\" to filter on architecture.\n    # \"file_url\" - For artifacts that are binaries, this is a download path.\n    # \"metadata\" - (Optional) If given, only an artifact matching the metadata filters will be returned. This is used to disambiguate when multiple potential artifacts match. An example is \"arch\" = \"386\" to filter on architecture.\n    # \"metadata_full\" - Contains the full metadata of the artifact. The keys are sanitized\n    # \"metadata\" - (Optional) If given, only an artifact matching the metadata filters will be returned. This is used to disambiguate when multiple potential artifacts match. An example is \"arch\" = \"386\" to filter on architecture.\n    # \"version_real\" - The matching version of the artifact\n    # \"metadata\" - (Optional) If given, only an artifact matching the metadata filters will be returned. This is used to disambiguate when multiple potential artifacts match. An example is \"arch\" = \"386\" to filter on architecture.\n    # \"slug\" - The artifact slug in Atlas\n    # \"metadata\" - (Optional) If given, only an artifact matching the metadata filters will be returned. This is used to disambiguate when multiple potential artifacts match. An example is \"arch\" = \"386\" to filter on architecture.\n}",
        "description": "Provides access to deployment artifacts managed by Atlas. This\ncan be used to dynamically configure instantiation and provisioning of\nresources. ~> **This provider is deprecated,** and the service it interacts with has been discontinued. ~> **This resource is deprecated!** Please use the\n[Artifact Data Source](/docs/providers/terraform-enterprise/d/artifact.html)",
        "prefix": "terraform-enterprise-resource-artifact"
    }
}