{
    "newrelic-datasource-alert-channel": {
        "body": "data \"newrelic_alert_channel\" \"$1\" {\n    # name - (Required) The name of the alert channel in New Relic.\n    name = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the alert channel.\n    # \"type\" - Alert channel type, either: \"campfire\", \"email\", \"hipchat\", \"opsgenie\", \"pagerduty\", \"slack\", \"victorops\", or \"webhook\"..\n    # \"policy_ids\" - A list of policy IDs associated with the alert channel.\n}",
        "description": "Use this data source to get information about an specific alert channel in New Relic which already exists (e.g newrelic user).",
        "prefix": "newrelic-datasource-alert-channel"
    },
    "newrelic-datasource-application": {
        "body": "data \"newrelic_application\" \"$1\" {\n    # name - (Required) The name of the application in New Relic.\n    name = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the application.\n    # \"instance_ids\" - A list of instance IDs associated with the application.\n    # \"host_ids\" - A list of host IDs associated with the application.\n}",
        "description": "Use this data source to get information about a specific application in New Relic.",
        "prefix": "newrelic-datasource-application"
    },
    "newrelic-datasource-key-transaction": {
        "body": "data \"newrelic_key_transaction\" \"$1\" {\n    # name - (Required) The name of the application in New Relic.\n    name = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the application.\n}",
        "description": "Use this data source to get information about a specific key transaction in New Relic.",
        "prefix": "newrelic-datasource-key-transaction"
    },
    "newrelic-resource-alert-channel": {
        "body": "resource \"newrelic_alert_channel\" \"$1\" {\n    # configuration - (Required) A map of key / value pairs with channel type specific values.\n    configuration = \"\"\n\n    # type - (Required) The type of channel.  One of: `campfire`, `email`, `hipchat`, `opsgenie`, `pagerduty`, `slack`, `victorops`, or `webhook`.\n    type = \"\"\n\n    # name - (Required) The name of the channel.\n    name = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the channel.\n}",
        "description": "",
        "prefix": "newrelic-resource-alert-channel"
    },
    "newrelic-resource-alert-condition": {
        "body": "resource \"newrelic_alert_condition\" \"$1\" {\n    # term - (Required) A list of terms for this condition. See [Terms](#terms) below for details.\n    term = \"\"\n\n    # metric - (Required) The metric field accepts parameters based on the `type` set.\n    metric = \"\"\n\n    # entities - (Required) The instance IDS associated with this condition.\n    entities = \"\"\n\n    # type - (Required) The type of condition. One of: `apm_app_metric`, `apm_jvm_metric`, `apm_kt_metric`, `servers_metric`, `browser_metric`, `mobile_metric`\n    type = \"\"\n\n    # name - (Required) The title of the condition\n    name = \"\"\n\n    # policy_id - (Required) The ID of the policy where this condition should be used.\n    policy_id = \"\"\n\n    # gc_metric - (Optional) A valid Garbage Collection metric e.g. `GC/G1 Young Generation`. This is required if you are using `apm_jvm_metric` with `gc_cpu_time` condition type.\n    gc_metric = \"\"\n\n    # violation_close_timer - (Optional) Automatically close instance-based violations, including JVM health metric violations, after the number of hours specified. Must be: `1`, `2`, `4`, `8`, `12` or `24`.\n    violation_close_timer = \"\"\n\n    # runbook_url - (Optional) Runbook URL to display in notifications.\n    runbook_url = \"\"\n\n    # condition_scope - (Optional) `instance` or `application`.  This is required if you are using the JVM plugin in New Relic.\n    condition_scope = \"\"\n\n    # user_defined_metric - (Optional) A custom metric to be evaluated.\n    user_defined_metric = \"\"\n\n    # user_defined_value_function - (Optional) One of: `average`, `min`, `max`, `total`, or `sample_size`.\n    user_defined_value_function = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the alert condition.\n}",
        "description": "",
        "prefix": "newrelic-resource-alert-condition"
    },
    "newrelic-resource-alert-policy": {
        "body": "resource \"newrelic_alert_policy\" \"$1\" {\n    # name - (Required) The name of the policy.\n    name = \"\"\n\n    # incident_preference - (Optional) The rollup strategy for the policy.  Options include: `PER_POLICY`, `PER_CONDITION`, or `PER_CONDITION_AND_TARGET`.  The default is `PER_POLICY`.\n    incident_preference = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the policy.\n    # \"created_at\" - The time the policy was created.\n    # \"updated_at\" - The time the policy was last updated.\n}",
        "description": "",
        "prefix": "newrelic-resource-alert-policy"
    },
    "newrelic-resource-alert-policy-channel": {
        "body": "resource \"newrelic_alert_policy_channel\" \"$1\" {\n    # channel_id - (Required) The ID of the channel.\n    channel_id = \"\"\n\n    # policy_id - (Required) The ID of the policy.\n    policy_id = \"\"\n\n    # Exported Attributes\n}",
        "description": "",
        "prefix": "newrelic-resource-alert-policy-channel"
    },
    "newrelic-resource-dashboard": {
        "body": "resource \"newrelic_dashboard\" \"$1\" {\n    # title - (Required) The title of the dashboard.\n    title = \"\"\n\n    # icon - (Optional) The icon for the dashboard.  Defaults to `bar-chart`.\n    icon = \"\"\n\n    # visibility - (Optional) Who can see the dashboard in an account. Must be `owner` or `all`. Defaults to `all`.\n    visibility = \"\"\n\n    # widget - (Optional) A widget that describes a visualization. See [Widgets](#widgets) below for details.\n    widget = \"\"\n\n    # editable - (Optional) Who can edit the dashboard in an account. Must be `read_only`, `editable_by_owner`, `editable_by_all`, or `all`. Defaults to `editable_by_all`.\n    editable = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the dashboard.\n}",
        "description": "",
        "prefix": "newrelic-resource-dashboard"
    },
    "newrelic-resource-infra-alert-condition": {
        "body": "resource \"newrelic_infra_alert_condition\" \"$1\" {\n    # critical - (Required) Identifies the critical threshold parameters for triggering an alert notification. See [Thresholds](#thresholds) below for details.\n    critical = \"\"\n\n    # comparison - (Required) The operator used to evaluate the threshold value; \"above\", \"below\", \"equal\".\n    comparison = \"\"\n\n    # select - (Required) The attribute name to identify the type of metric condition; for example, \"network\", \"process\", \"system\", or \"storage\".\n    select = \"\"\n\n    # event - (Required) The metric event; for example, system metrics, process metrics, storage metrics, or network metrics.\n    event = \"\"\n\n    # type - (Required) The type of Infrastructure alert condition: \"infra_process_running\", \"infra_metric\", or \"infra_host_not_reporting\".\n    type = \"\"\n\n    # name - (Required) The Infrastructure alert condition's name.\n    name = \"\"\n\n    # policy_id - (Required) The ID of the alert policy where this condition should be used.\n    policy_id = \"\"\n\n    # enabled - (Optional) Set whether to enable the alert condition. Defaults to `true`.\n    enabled = \"\"\n\n    # warning - (Optional) Identifies the warning threshold parameters. See [Thresholds](#thresholds) below for details.\n    warning = \"\"\n\n    # where - (Optional) Infrastructure host filter for the alert condition.\n    where = \"\"\n\n    # process_where - (Optional) Any filters applied to processes; for example: `\"commandName = 'java'\"`.\n    process_where = \"\"\n\n    # integration_provider - (Optional) For alerts on integrations, use this instead of `event`. \n    integration_provider = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the Infrastructure alert condition.\n}",
        "description": "",
        "prefix": "newrelic-resource-infra-alert-condition"
    },
    "newrelic-resource-nrql-alert-condition": {
        "body": "resource \"newrelic_nrql_alert_condition\" \"$1\" {\n    # nrql - (Required) A NRQL query. See [NRQL](#nrql) below for details.\n    nrql = \"\"\n\n    # term - (Required) A list of terms for this condition. See [Terms](#terms) below for details.\n    term = \"\"\n\n    # name - (Required) The title of the condition\n    name = \"\"\n\n    # policy_id - (Required) The ID of the policy where this condition should be used.\n    policy_id = \"\"\n\n    # runbook_url - (Optional) Runbook URL to display in notifications.\n    runbook_url = \"\"\n\n    # enabled - (Optional) Set whether to enable the alert condition. Defaults to `true`.\n    enabled = \"\"\n\n    # value_function - (Optional) Possible values are `single_value`, `sum`.\n    value_function = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the NRQL alert condition.\n}",
        "description": "",
        "prefix": "newrelic-resource-nrql-alert-condition"
    },
    "newrelic-resource-synthetics-alert-condition": {
        "body": "resource \"newrelic_synthetics_alert_condition\" \"$1\" {\n    # monitor_id - (Required) The ID of the Synthetics monitor to be referenced in the alert condition. \n    monitor_id = \"\"\n\n    # name - (Required) The title of this condition.\n    name = \"\"\n\n    # policy_id - (Required) The ID of the policy where this condition should be used.\n    policy_id = \"\"\n\n    # runbook_url - (Optional) Runbook URL to display in notifications.\n    runbook_url = \"\"\n\n    # enabled - (Optional) Set whether to enable the alert condition. Defaults to `true`.\n    enabled = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the Synthetics alert condition.\n}",
        "description": "",
        "prefix": "newrelic-resource-synthetics-alert-condition"
    },
    "newrelic-synthetics-monitor": {
        "body": "data \"newrelic_synthetics_monitor\" \"$1\" {\n    # name - (Required) The name of the synthetics monitor in New Relic.\n    name = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the synthetics monitor.\n}",
        "description": "Use this data source to get information about a specific synthetics monitor in New Relic. This can then be used to set up a synthetics alert condition.",
        "prefix": "newrelic-synthetics-monitor"
    }
}