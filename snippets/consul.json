{
    "consul-data-source-agent-self": {
        "body": "data \"consul_agent_self\" \"$1\" {\n    # Exported Attributes\n    # \"acl_disabled_ttl\"\n    # \"check_deregister_interval_min\"\n    # \"check_reap_interval\"\n    # \"dns\" - A map of DNS configuration attributes.  See below for details on the\n    # \"enable_coordinates\"\n    # \"version\" - The version of the Consul agent.\n    # \"version_prerelease\"\n    # \"version_revision\"\n}",
        "description": "The `consul_agent_self` data source returns\n[configuration and status data](https://www.consul.io/docs/agent/http/agent.html#agent_self)\nfrom the agent specified in the `provider`.",
        "prefix": "consul-data-source-agent-self"
    },
    "consul-data-source-catalog-nodes": {
        "body": "data \"consul_catalog_nodes\" \"$1\" {\n    # datacenter - (Optional) The Consul datacenter to query.  Defaults to the same value found in `query_options` parameter specified below, or if that is empty, the `datacenter` value found in the Consul agent that this provider is configured to talk to.\n    datacenter = \"\"\n\n    # query_options - (Optional) See below.\n    query_options = \"\"\n\n    # allow_stale - (Optional) When `true`, the default, allow responses from Consul servers that are followers.\n    allow_stale = \"\"\n\n    # require_consistent - (Optional) When `true` force the client to perform a read on at least quorum servers and verify the result is the same.  Defaults to `false`.\n    require_consistent = \"\"\n\n    # token - (Optional) Specify the Consul ACL token to use when performing the request.  This defaults to the same API token configured by the `consul` provider but may be overriden if necessary.\n    token = \"\"\n\n    # wait_index - (Optional) Index number used to enable blocking quereis.\n    wait_index = \"\"\n\n    # wait_time - (Optional) Max time the client should wait for a blocking query to return.\n    wait_time = \"\"\n\n    # Exported Attributes\n    # \"datacenter\" - The datacenter the keys are being read from to.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"node_ids\" - A list of the Consul node IDs.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"node_names\" - A list of the Consul node names.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"nodes\" - A list of nodes and details about each Consul agent.  The list of\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"id\" - The Node ID of the Consul agent.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n}",
        "description": "The `consul_catalog_nodes` data source returns a list of Consul nodes that have\nbeen registered with the Consul cluster in a given datacenter.  By specifying a\ndifferent datacenter in the `query_options` it is possible to retrieve a list of\nnodes from a different WAN-attached Consul datacenter.",
        "prefix": "consul-data-source-catalog-nodes"
    },
    "consul-data-source-catalog-service": {
        "body": "data \"consul_catalog_service\" \"$1\" {\n    # name - (Required) The service name to select.\n    name = \"\"\n\n    # datacenter - (Optional) The Consul datacenter to query.  Defaults to the same value found in `query_options` parameter specified below, or if that is empty, the `datacenter` value found in the Consul agent that this provider is configured to talk to.\n    datacenter = \"\"\n\n    # query_options - (Optional) See below.\n    query_options = \"\"\n\n    # tag - (Optional) A single tag that can be used to filter the list of nodes to return based on a single matching tag..\n    tag = \"\"\n\n    # allow_stale - (Optional) When `true`, the default, allow responses from Consul servers that are followers.\n    allow_stale = \"\"\n\n    # require_consistent - (Optional) When `true` force the client to perform a read on at least quorum servers and verify the result is the same.  Defaults to `false`.\n    require_consistent = \"\"\n\n    # token - (Optional) Specify the Consul ACL token to use when performing the request.  This defaults to the same API token configured by the `consul` provider but may be overriden if necessary.\n    token = \"\"\n\n    # wait_index - (Optional) Index number used to enable blocking quereis.\n    wait_index = \"\"\n\n    # wait_time - (Optional) Max time the client should wait for a blocking query to return.\n    wait_time = \"\"\n\n    # Exported Attributes\n    # \"datacenter\" - The datacenter the keys are being read from to.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"name\" - The name of the service\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"tag\" - The name of the tag used to filter the list of nodes in \"service\".\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"service\" - A list of nodes and details about each endpoint advertising a\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"node_id\" - The Node ID of the Consul agent advertising the service.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"Address\" in the Consul Catalog).\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n}",
        "description": "`consul_catalog_service` provides details about a specific Consul service in a\ngiven datacenter.  The results include a list of nodes advertising the specified\nservice, the node's IP address, port number, node ID, etc.  By specifying a\ndifferent datacenter in the `query_options` it is possible to retrieve a list of\nservices from a different WAN-attached Consul datacenter. This data source is different from the `consul_catalog_services` (plural) data\nsource, which provides a summary of the current Consul services.",
        "prefix": "consul-data-source-catalog-service"
    },
    "consul-data-source-catalog-services": {
        "body": "data \"consul_catalog_services\" \"$1\" {\n    # datacenter - (Optional) The Consul datacenter to query.  Defaults to the same value found in `query_options` parameter specified below, or if that is empty, the `datacenter` value found in the Consul agent that this provider is configured to talk to.\n    datacenter = \"\"\n\n    # query_options - (Optional) See below.\n    query_options = \"\"\n\n    # allow_stale - (Optional) When `true`, the default, allow responses from Consul servers that are followers.\n    allow_stale = \"\"\n\n    # require_consistent - (Optional) When `true` force the client to perform a read on at least quorum servers and verify the result is the same.  Defaults to `false`.\n    require_consistent = \"\"\n\n    # token - (Optional) Specify the Consul ACL token to use when performing the request.  This defaults to the same API token configured by the `consul` provider but may be overriden if necessary.\n    token = \"\"\n\n    # wait_index - (Optional) Index number used to enable blocking quereis.\n    wait_index = \"\"\n\n    # wait_time - (Optional) Max time the client should wait for a blocking query to return.\n    wait_time = \"\"\n\n    # Exported Attributes\n    # \"datacenter\" - The datacenter the keys are being read from to.\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"names\" - A list of the Consul services found.  This will always contain the\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"services.<service>\" - For each name given, the corresponding attribute is a\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n    # \"tags\" - A map of the tags found for each service.  If more than one service\n    # \"wait_time\" - (Optional) Max time the client should wait for a blocking query to return.\n}",
        "description": "The `consul_catalog_services` data source returns a list of Consul services that\nhave been registered with the Consul cluster in a given datacenter.  By\nspecifying a different datacenter in the `query_options` it is possible to\nretrieve a list of services from a different WAN-attached Consul datacenter. This data source is different from the `consul_catalog_service` (singular) data\nsource, which provides a detailed response about a specific Consul service.",
        "prefix": "consul-data-source-catalog-services"
    },
    "consul-data-source-keys": {
        "body": "data \"consul_keys\" \"$1\" {\n    # path - (Required) This is the path in Consul that should be read or written to.\n    path = \"\"\n\n    # name - (Required) This is the name of the key. This value of the key is exposed as `var.<name>`. This is not the path of the key in Consul.\n    name = \"\"\n\n    # key - (Required) Specifies a key in Consul to be read or written. Supported values documented below.\n    key = \"\"\n\n    # datacenter - (Optional) The datacenter to use. This overrides the datacenter in the provider setup and the agent's default datacenter.\n    datacenter = \"\"\n\n    # token - (Optional) The ACL token to use. This overrides the token that the agent provides by default.\n    token = \"\"\n\n    # default - (Optional) This is the default value to set for `var.<name>` if the key does not exist in Consul. Defaults to an empty string.\n    default = \"\"\n\n    # Exported Attributes\n    # \"datacenter\" - The datacenter the keys are being read from to.\n    # \"default\" - (Optional) This is the default value to set for \"var.<name>\" if the key does not exist in Consul. Defaults to an empty string.\n    # \"var.<name>\" - For each name given, the corresponding attribute\n    # \"default\" - (Optional) This is the default value to set for \"var.<name>\" if the key does not exist in Consul. Defaults to an empty string.\n}",
        "description": "The `consul_keys` resource reads values from the Consul key/value store.\nThis is a powerful way dynamically set values in templates.",
        "prefix": "consul-data-source-keys"
    },
    "consul-resource-agent-service": {
        "body": "resource \"consul_agent_service\" \"$1\" {\n    # name - (Required) The name of the service.\n    name = \"\"\n\n    # address - (Optional) The address of the service. Defaults to the address of the agent.\n    address = \"\"\n\n    # port - (Optional) The port of the service.\n    port = \"\"\n\n    # tags - (Optional) A list of values that are opaque to Consul, but can be used to distinguish between services or nodes.\n    tags = \"\"\n\n    # Exported Attributes\n    # \"address\" - The address of the service.\n    # \"tags\" - (Optional) A list of values that are opaque to Consul, but can be used to distinguish between services or nodes.\n    # \"id\" - The ID of the service, defaults to the value of \"name\".\n    # \"tags\" - (Optional) A list of values that are opaque to Consul, but can be used to distinguish between services or nodes.\n    # \"name\" - The name of the service.\n    # \"tags\" - (Optional) A list of values that are opaque to Consul, but can be used to distinguish between services or nodes.\n    # \"port\" - The port of the service.\n    # \"tags\" - (Optional) A list of values that are opaque to Consul, but can be used to distinguish between services or nodes.\n    # \"tags\" - The tags of the service.\n    # \"tags\" - (Optional) A list of values that are opaque to Consul, but can be used to distinguish between services or nodes.\n}",
        "description": "Provides access to the agent service data in Consul. This can be used to\ndefine a service associated with a particular agent. Currently, defining\nhealth checks for an agent service is not supported.",
        "prefix": "consul-resource-agent-service"
    },
    "consul-resource-catalog-entry": {
        "body": "resource \"consul_catalog_entry\" \"$1\" {\n    # name - (Required) The name of the service\n    name = \"\"\n\n    # node - (Required) The name of the node being added to, or referenced in the catalog.\n    node = \"\"\n\n    # address - (Required) The address of the node being added to, or referenced in the catalog.\n    address = \"\"\n\n    # service - (Optional) A service to optionally associated with the node. Supported values are documented below.\n    service = \"\"\n\n    # datacenter - (Optional) The datacenter to use. This overrides the datacenter in the provider setup and the agent's default datacenter.\n    datacenter = \"\"\n\n    # token - (Optional) ACL token.\n    token = \"\"\n\n    # address - (Optional) The address of the service. Defaults to the\n    address = \"\"\n\n    # token - (Optional) ACL token.\n    token = \"\"\n\n    # id - (Optional) The ID of the service. Defaults to the `name`.\n    id = \"\"\n\n    # token - (Optional) ACL token.\n    token = \"\"\n\n    # token - (Optional) ACL token.\n    token = \"\"\n\n    # port - (Optional) The port of the service.\n    port = \"\"\n\n    # token - (Optional) ACL token.\n    token = \"\"\n\n    # tags - (Optional) A list of values that are opaque to Consul,\n    tags = \"\"\n\n    # token - (Optional) ACL token.\n    token = \"\"\n\n    # Exported Attributes\n    # \"address\" - The address of the service.\n    # \"token\" - (Optional) ACL token.\n    # \"node\" - The ID of the service, defaults to the value of \"name\".\n    # \"token\" - (Optional) ACL token.\n}",
        "description": "Registers a node or service with the [Consul Catalog](https://www.consul.io/docs/agent/http/catalog.html#catalog_register).\nCurrently, defining health checks is not supported.",
        "prefix": "consul-resource-catalog-entry"
    },
    "consul-resource-key-prefix": {
        "body": "resource \"consul_key_prefix\" \"$1\" {\n    # subkeys - (Required) A mapping from subkey name (which will be appended to the given `path_prefix`) to the value that should be stored at that key. Use slashes, as shown in the above example, to create \"sub-folders\" under the given path prefix.\n    subkeys = \"\"\n\n    # path_prefix - (Required) Specifies the common prefix shared by all keys that will be managed by this resource instance. In most cases this will end with a slash, to manage a \"folder\" of keys.\n    path_prefix = \"\"\n\n    # datacenter - (Optional) The datacenter to use. This overrides the datacenter in the provider setup and the agent's default datacenter.\n    datacenter = \"\"\n\n    # token - (Optional) The ACL token to use. This overrides the token that the agent provides by default.\n    token = \"\"\n\n    # Exported Attributes\n    # \"datacenter\" - The datacenter the keys are being read/written to.\n    # \"subkeys\" - (Required) A mapping from subkey name (which will be appended to the given \"path_prefix\") to the value that should be stored at that key. Use slashes, as shown in the above example, to create \"sub-folders\" under the given path prefix.\n}",
        "description": "Allows Terraform to manage a \"namespace\" of Consul keys that share a common\nname prefix. Like `consul_keys`, this resource can write values into the Consul key/value\nstore, but *unlike* `consul_keys` this resource can detect and remove extra\nkeys that have been added some other way, thus ensuring that rogue data\nadded outside of Terraform will be removed on the next run. This resource is thus useful in the case where Terraform is exclusively\nmanaging a set of related keys. To avoid accidentally clobbering matching data that existed in Consul before\na `consul_key_prefix` resource was created, creation of a key prefix instance\nwill fail if any matching keys are already present in the key/value store.\nIf any conflicting data is present, you must first delete it manually. ~> **Warning** After this resource is instantiated, Terraform takes control\nover *all* keys with the given path prefix, and will remove any matching keys\nthat are not present in the configuration. It will also delete *all* keys under\nthe given prefix when a `consul_key_prefix` resource is destroyed, even if\nthose keys were created outside of Terraform.",
        "prefix": "consul-resource-key-prefix"
    },
    "consul-resource-keys": {
        "body": "resource \"consul_keys\" \"$1\" {\n    # value - (Required) The value to write to the given path.\n    value = \"\"\n\n    # path - (Required) This is the path in Consul that should be written to.\n    path = \"\"\n\n    # key - (Required) Specifies a key in Consul to be written. Supported values documented below.\n    key = \"\"\n\n    # datacenter - (Optional) The datacenter to use. This overrides the datacenter in the provider setup and the agent's default datacenter.\n    datacenter = \"\"\n\n    # token - (Optional) The ACL token to use. This overrides the token that the agent provides by default.\n    token = \"\"\n\n    # delete - (Optional) If true, then the key will be deleted when either its configuration block is removed from the configuration or the entire resource is destroyed. Otherwise, it will be left in Consul. Defaults to false.\n    delete = \"\"\n\n    # Exported Attributes\n    # \"datacenter\" - The datacenter the keys are being written to.\n    # \"delete\" - (Optional) If true, then the key will be deleted when either its configuration block is removed from the configuration or the entire resource is destroyed. Otherwise, it will be left in Consul. Defaults to false.\n}",
        "description": "The `consul_keys` resource writes sets of individual values into Consul.\nThis is a powerful way to expose infrastructure details to clients. This resource manages individual keys, and thus it can create, update\nand delete the keys explicitly given. However, it is not able to detect\nand remove additional keys that have been added by non-Terraform means.\nTo manage *all* keys sharing a common prefix, and thus have Terraform\nremove errant keys not present in the configuration, consider using the\n`consul_key_prefix` resource instead.",
        "prefix": "consul-resource-keys"
    },
    "consul-resource-node": {
        "body": "resource \"consul_node\" \"$1\" {\n    # name - (Required) The name of the node being added to, or referenced in the catalog.\n    name = \"\"\n\n    # address - (Required) The address of the node being added to, or referenced in the catalog.\n    address = \"\"\n\n    # Exported Attributes\n    # \"address\" - The address of the service.\n    # \"name\" - (Required) The name of the node being added to, or referenced in the catalog.\n    # \"name\" - The name of the service.\n    # \"name\" - (Required) The name of the node being added to, or referenced in the catalog.\n}",
        "description": "Provides access to Node data in Consul. This can be used to define a\nnode. Currently, defining health checks is not supported.",
        "prefix": "consul-resource-node"
    },
    "consul-resource-prepared-query": {
        "body": "resource \"consul_prepared_query\" \"$1\" {\n    # regexp - (Required) The regular expression to match with. When using `name_prefix_match`, this regex is applied against the query name.\n    regexp = \"\"\n\n    # regexp - (Required) The regular expression to match with. When using `name_prefix_match`, this regex is applied against the query name.\n    regexp = \"\"\n\n    # type - (Required) The type of template matching to perform. Currently only `name_prefix_match` is supported.\n    type = \"\"\n\n    # service - (Required) The name of the service to query.\n    service = \"\"\n\n    # name - (Required) The name of the prepared query. Used to identify the prepared query during requests. Can be specified as an empty string to configure the query as a catch-all.\n    name = \"\"\n\n    # datacenter - (Optional) The datacenter to use. This overrides the datacenter in the provider setup and the agent's default datacenter.\n    datacenter = \"\"\n\n    # token - (Optional) The ACL token to use when saving the prepared query. This overrides the token that the agent provides by default.\n    token = \"\"\n\n    # stored_token - (Optional) The ACL token to store with the prepared query. This token will be used by default whenever the query is executed.\n    stored_token = \"\"\n\n    # session - (Optional) The name of the Consul session to tie this query's lifetime to.  This is an advanced parameter that should not be used without a complete understanding of Consul sessions and the implications of their use (it is recommended to leave this blank in nearly all cases).  If this parameter is omitted the query will not expire.\n    session = \"\"\n\n    # tags - (Optional) The list of required and/or disallowed tags.  If a tag is in this list it must be present.  If the tag is preceded with a \"!\" then it is disallowed.\n    tags = \"\"\n\n    # only_passing - (Optional) When `true`, the prepared query will only return nodes with passing health checks in the result.\n    only_passing = \"\"\n\n    # near - (Optional) Allows specifying the name of a node to sort results near using Consul's distance sorting and network coordinates. The magic `_agent` value can be used to always sort nearest the node servicing the request.\n    near = \"\"\n\n    # nearest_n - (Optional) Return results from this many datacenters, sorted in ascending order of estimated RTT.\n    nearest_n = \"\"\n\n    # datacenters - (Optional) Remote datacenters to return results from.\n    datacenters = \"\"\n\n    # datacenters - (Optional) Remote datacenters to return results from.\n    datacenters = \"\"\n\n    # dns - (Optional) Settings for controlling the DNS response details. `ttl` - (Optional) The TTL to send when returning DNS results.\n    dns = \"\"\n\n    # dns - (Optional) Settings for controlling the DNS response details. `ttl` - (Optional) The TTL to send when returning DNS results.\n    dns = \"\"\n\n    # Exported Attributes\n    # \"id\" - The ID of the prepared query, generated by Consul.\n    # \"regexp\" - (Required) The regular expression to match with. When using \"name_prefix_match\", this regex is applied against the query name.\n}",
        "description": "Allows Terraform to manage a Consul prepared query. Managing prepared queries is done using Consul's REST API. This resource is\nuseful to provide a consistent and declarative way of managing prepared\nqueries in your Consul cluster using Terraform.",
        "prefix": "consul-resource-prepared-query"
    },
    "consul-resource-service": {
        "body": "resource \"consul_service\" \"$1\" {\n    # service_id - (Optional) (Optional, string) The ID of the service, defaults to the value of `name` if not supplied.\n    service_id = \"\"\n\n    # address - (Optional) (Optional, string) The address of the service. Defaults to the address of the agent.\n    address = \"\"\n\n    # name - (Optional) (Required, string) The name of the service.\n    name = \"\"\n\n    # port - (Optional) (Optional, int) The port of the service.\n    port = \"\"\n\n    # tags - (Optional) (Optional, set of strings) A list of values that are opaque to Consul, but can be used to distinguish between services or nodes.\n    tags = \"\"\n\n    # Exported Attributes\n    # \"service_id\" - The id of the service, defaults to the value of \"name\".\n    # \"tags\" - (Optional, set of strings) A list of values that are opaque to Consul, but can be used to distinguish between services or nodes.\n    # \"address\" - The address of the service.\n    # \"tags\" - (Optional, set of strings) A list of values that are opaque to Consul, but can be used to distinguish between services or nodes.\n    # \"name\" - The name of the service.\n    # \"tags\" - (Optional, set of strings) A list of values that are opaque to Consul, but can be used to distinguish between services or nodes.\n    # \"port\" - The port of the service.\n    # \"tags\" - (Optional, set of strings) A list of values that are opaque to Consul, but can be used to distinguish between services or nodes.\n    # \"tags\" - The tags of the service.\n    # \"tags\" - (Optional, set of strings) A list of values that are opaque to Consul, but can be used to distinguish between services or nodes.\n}",
        "description": "A high-level resource for creating a Service in Consul. Currently,\ndefining health checks for a service is not supported. **Most users should not use this resource**. When using Consul with\ncompute instances, it's better to install\n[the Consul Agent](https://www.consul.io/docs/agent/basics.html)\non these machines and register services via the agent. This ensures\nthat services get assigned to the appropriate Consul \"nodes\" and\nallows service health to integrate with general node health as\nreported by the agent. To register a non-compute resource, such as a hosted database,\nas a service, as described in\n[Consul's _External Services_ guide](https://www.consul.io/docs/guides/external.html),\nuse [`consul_catalog_entry`](catalog_entry.html) instead, which\ncan create an arbitrary service record in the Consul catalog.",
        "prefix": "consul-resource-service"
    }
}